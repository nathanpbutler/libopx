namespace nathanbutlerDEV.libopx.SMPTE;
public class Labels
{
    /// <summary>
    /// 1.0 Monaural Soundfield Group
    /// </summary>
    /// <remarks>
    /// Single channel mono designed to be played from Center loudspeaker
    /// </remarks>
    private static readonly byte[] _10MonauralSoundfieldGroup = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x02, 0x05, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// 5.1 Soundfield Group
    /// </summary>
    /// <remarks>
    /// Identifies the 5.1 Soundfield Group
    /// </remarks>
    private static readonly byte[] _51SoundfieldGroup = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// 6.1 Soundfield Group
    /// </summary>
    /// <remarks>
    /// Identifies the 6.1 Soundfield Group
    /// </remarks>
    private static readonly byte[] _61SoundfieldGroup = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x02, 0x04, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// 7.1DS Soundfield Group
    /// </summary>
    /// <remarks>
    /// Identifies the 7.1DS Soundfield Group
    /// </remarks>
    private static readonly byte[] _71DSSoundfieldGroup = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// 7.1SDS Soundfield Group
    /// </summary>
    /// <remarks>
    /// Identifies the 7.1SDS Soundfield Group
    /// </remarks>
    private static readonly byte[] _71SDSSoundfieldGroup = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x02, 0x03, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// AAF AIFF-AIFC Audio Container
    /// </summary>
    /// <remarks>
    /// Identifier for AAF AIFF or AIFC Audio essence elements stored according to the AIFC specification
    /// </remarks>
    private static readonly byte[] AAFAIFFAIFCAudioContainer = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x07, 0x0D, 0x01, 0x13, 0x01, 0x01, 0x04, 0x01, 0x00];
    /// <summary>
    /// AAF AIFF-AIFC Container
    /// </summary>
    /// <remarks>
    /// Identifies any AAF essence elements stored according to the AIFC specification
    /// </remarks>
    private static readonly byte[] AAFAIFFAIFCContainer = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x07, 0x0D, 0x01, 0x13, 0x01, 0x01, 0x04, 0x00, 0x00];
    /// <summary>
    /// AAF Association
    /// </summary>
    /// <remarks>
    /// Metadata registered by the AAF Association for public use
    /// </remarks>
    private static readonly byte[] AAFAssociation = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// AAF Clip-wrapped JFIF Container
    /// </summary>
    /// <remarks>
    /// Identifier for AAF clip wrapped essence elements stored according to ISO10918-3 SPIFF with JFIF markers
    /// </remarks>
    private static readonly byte[] AAFClipWrappedJFIFContainer = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x07, 0x0D, 0x01, 0x13, 0x01, 0x01, 0x02, 0x02, 0x00];
    /// <summary>
    /// AAF Clip-wrapped NITF Container
    /// </summary>
    /// <remarks>
    /// Identifier for AAF clip-wrapped essence elements stored according to Mil STD 2500B or similar
    /// </remarks>
    private static readonly byte[] AAFClipWrappedNITFContainer = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x07, 0x0D, 0x01, 0x13, 0x01, 0x01, 0x03, 0x02, 0x00];
    /// <summary>
    /// AAF Containers
    /// </summary>
    /// <remarks>
    /// Identifies AAF Containers
    /// </remarks>
    private static readonly byte[] AAFContainers = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x06, 0x0D, 0x01, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// AAF Containers V1-Physical
    /// </summary>
    /// <remarks>
    /// Identifies AAF Physical Containers, version 1
    /// </remarks>
    private static readonly byte[] AAFContainersV1Physical = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x06, 0x0D, 0x01, 0x13, 0x01, 0x01, 0x00, 0x00, 0x00];
    /// <summary>
    /// AAF Containers Version-1
    /// </summary>
    /// <remarks>
    /// Identifies AAF Containers, version 1
    /// </remarks>
    private static readonly byte[] AAFContainersVersion1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x06, 0x0D, 0x01, 0x13, 0x01, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// AAF Edit Protocol
    /// </summary>
    /// <remarks>
    /// Identifies the AAF Edit Protocol
    /// </remarks>
    private static readonly byte[] AAFEditProtocol = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x05, 0x0D, 0x01, 0x12, 0x01, 0x01, 0x00, 0x00, 0x00];
    /// <summary>
    /// AAF Frame-wrapped JFIF Container
    /// </summary>
    /// <remarks>
    /// Identifier for AAF frame wrapped essence elements stored according to ISO10918-3 SPIFF with JFIF markers
    /// </remarks>
    private static readonly byte[] AAFFrameWrappedJFIFContainer = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x07, 0x0D, 0x01, 0x13, 0x01, 0x01, 0x02, 0x01, 0x00];
    /// <summary>
    /// AAF JFIF Container
    /// </summary>
    /// <remarks>
    /// Identifies any AAF essence elements stored according to ISO10918-3 SPIFF with JFIF markers
    /// </remarks>
    private static readonly byte[] AAFJFIFContainer = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x07, 0x0D, 0x01, 0x13, 0x01, 0x01, 0x02, 0x00, 0x00];
    /// <summary>
    /// AAF NITF Container
    /// </summary>
    /// <remarks>
    /// Identifies any AAF essence elements stored according to Mil STD 2500B or similar
    /// </remarks>
    private static readonly byte[] AAFNITFContainer = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x07, 0x0D, 0x01, 0x13, 0x01, 0x01, 0x03, 0x00, 0x00];
    /// <summary>
    /// AAF OP-Structure Version
    /// </summary>
    /// <remarks>
    /// Identifies AAF OP Version 1
    /// </remarks>
    private static readonly byte[] AAFOPStructureVersion = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x05, 0x0D, 0x01, 0x12, 0x01, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// AAF RIFF Container
    /// </summary>
    /// <remarks>
    /// Identifies any essence elements stored according to the RIFF specification
    /// </remarks>
    private static readonly byte[] AAFRIFFContainer = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x06, 0x0D, 0x01, 0x13, 0x01, 0x01, 0x01, 0x00, 0x00];
    /// <summary>
    /// AAF Structural Metadata
    /// </summary>
    /// <remarks>
    /// Identifiers for AAF Structural Metadata
    /// </remarks>
    private static readonly byte[] AAFStructuralMetadata = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// AAF Structural Metadata Version 1
    /// </summary>
    /// <remarks>
    /// Identifiers for AAF Structural Metadata Version 1
    /// </remarks>
    private static readonly byte[] AAFStructuralMetadataVersion1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// AAF Unconstrained OP
    /// </summary>
    /// <remarks>
    /// Identifies an AAF file that is unconstrained by an OP (i.e. that one needs a general decoder)
    /// </remarks>
    private static readonly byte[] AAFUnconstrainedOP = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x09, 0x0D, 0x01, 0x12, 0x01, 0x02, 0x00, 0x00, 0x00];
    /// <summary>
    /// AAF Version 1 Standard
    /// </summary>
    /// <remarks>
    /// Identifiers for AAF Version 1 Standard
    /// </remarks>
    private static readonly byte[] AAFVersion1Standard = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00];
    /// <summary>
    /// AAF Version 1 Standard Kinds
    /// </summary>
    /// <remarks>
    /// Identifiers for AAF Version 1 Standard Kinds
    /// </remarks>
    private static readonly byte[] AAFVersion1StandardKinds = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00];
    /// <summary>
    /// ACES Picture Coding Schemes
    /// </summary>
    /// <remarks>
    /// Identifies ACES SMPTE ST 2065-4 Picture Coding Schemes
    /// </remarks>
    private static readonly byte[] ACESPictureCodingSchemes = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x04, 0x00, 0x00];
    /// <summary>
    /// ACES Uncompressed Monoscopic With Alpha
    /// </summary>
    /// <remarks>
    /// Identifier for ACES SMPTE ST 2065-4 monoscopic uncompressed picture coding with alpha channel
    /// </remarks>
    private static readonly byte[] ACESUncompressedMonoscopicWithAlpha = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x04, 0x02, 0x00];
    /// <summary>
    /// ACES Uncompressed Monoscopic Without Alpha
    /// </summary>
    /// <remarks>
    /// Identifier for ACES SMPTE ST 2065-4 monoscopic uncompressed picture coding without alpha channel
    /// </remarks>
    private static readonly byte[] ACESUncompressedMonoscopicWithoutAlpha = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x04, 0x01, 0x00];
    /// <summary>
    /// Ad-ID
    /// </summary>
    /// <remarks>
    /// Metadata registered by Ad-ID, LLC for public use
    /// </remarks>
    private static readonly byte[] Ad_ID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0C, 0x0D, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// ADMINISTRATIVE
    /// </summary>
    /// <remarks>
    /// SMPTE Label identifiers for Administrative data
    /// </remarks>
    private static readonly byte[] ADMINISTRATIVE = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// AES
    /// </summary>
    /// <remarks>
    /// Metadata registered by the Audio Engineering Society for public use
    /// </remarks>
    private static readonly byte[] AES = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0C, 0x0D, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// AES ADL
    /// </summary>
    /// <remarks>
    /// Audio edit decision list (ADL) defined in AES31-3
    /// </remarks>
    private static readonly byte[] AES_ADL = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0C, 0x0D, 0x0A, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// AES-128 CBC Identifier
    /// </summary>
    /// <remarks>
    /// Identifies AES 128-bit encryption in Cypher Block Chaining mode
    /// </remarks>
    private static readonly byte[] AES128CBCIdentifier = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x07, 0x02, 0x09, 0x02, 0x01, 0x01, 0x00, 0x00, 0x00];
    /// <summary>
    /// AES file exchange
    /// </summary>
    /// <remarks>
    /// File exchange metadata defined in AES standards
    /// </remarks>
    private static readonly byte[] AESFileExchange = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0C, 0x0D, 0x0A, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// AIFF Uncompressed Coding
    /// </summary>
    /// <remarks>
    /// Identifies uncompressed sound coded according to AIFF (big-endian samples)
    /// </remarks>
    private static readonly byte[] AIFFUncompressedCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x07, 0x04, 0x02, 0x02, 0x01, 0x7E, 0x00, 0x00, 0x00];
    /// <summary>
    /// A-law Coded Audio default
    /// </summary>
    /// <remarks>
    /// Identifies A-law 8-bit compressed audio - default value
    /// </remarks>
    private static readonly byte[] ALawCodedAudioDefault = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x04, 0x02, 0x02, 0x02, 0x03, 0x01, 0x01, 0x00];
    /// <summary>
    /// Alternative Center Cut
    /// </summary>
    /// <remarks>
    /// Rectangular area of specified aspect ratio containing all of the critical action that is (a) centered on the active area, (b) entirely contained within the active area and (c) has a height or width equal to that of the active area
    /// </remarks>
    private static readonly byte[] AlternativeCenterCut = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x01, 0x01, 0x04, 0x00, 0x00, 0x00];
    /// <summary>
    /// Alternative Program
    /// </summary>
    /// <remarks>
    /// Identifies an alternative, complete audio program
    /// </remarks>
    private static readonly byte[] AlternativeProgram = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x01, 0x03, 0x01, 0x00];
    /// <summary>
    /// AMIA
    /// </summary>
    /// <remarks>
    /// Metadata registered by the Association of Moving Image Archivists for public use
    /// </remarks>
    private static readonly byte[] AMIA = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// AMWA Application Specifications
    /// </summary>
    /// <remarks>
    /// No definition provided.
    /// </remarks>
    private static readonly byte[] AMWAApplicationSpecifications = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// AMWA Rules Based Specifications
    /// </summary>
    /// <remarks>
    /// No definition provided.
    /// </remarks>
    private static readonly byte[] AMWARulesBasedSpecifications = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// APP Descriptive Schemes
    /// </summary>
    /// <remarks>
    /// No definition provided.
    /// </remarks>
    private static readonly byte[] APP_DescriptiveSchemes = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00];
    /// <summary>
    /// APP Descriptive Schemes Version 1
    /// </summary>
    /// <remarks>
    /// No definition provided.
    /// </remarks>
    private static readonly byte[] APP_DescriptiveSchemesVersion1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00];
    /// <summary>
    /// APP Preservation Descriptive Scheme
    /// </summary>
    /// <remarks>
    /// APP Preservation Descriptive Scheme
    /// </remarks>
    private static readonly byte[] APP_PreservationDescriptiveScheme = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00];
    /// <summary>
    /// Apple Inc.
    /// </summary>
    /// <remarks>
    /// Metadata registered by Apple Inc. for private use
    /// </remarks>
    private static readonly byte[] Apple_Inc = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0E, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Application Metadata Schemes Version 1
    /// </summary>
    /// <remarks>
    /// Identifies Application Metadata Schemes Version 1
    /// </remarks>
    private static readonly byte[] ApplicationMetadataSchemesVersion1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x06, 0x01, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Application Specifications Version 1
    /// </summary>
    /// <remarks>
    /// No definition provided.
    /// </remarks>
    private static readonly byte[] ApplicationSpecificationsVersion1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x07, 0x01, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Archive Preservation Project
    /// </summary>
    /// <remarks>
    /// No definition provided.
    /// </remarks>
    private static readonly byte[] ArchivePreservationProject = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Archive Preservation Project Version 1
    /// </summary>
    /// <remarks>
    /// No definition provided.
    /// </remarks>
    private static readonly byte[] ArchivePreservationProjectVersion1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// ARIB
    /// </summary>
    /// <remarks>
    /// Metadata registered by the Association of Radio Industries and Businesses (Japan) for public use
    /// </remarks>
    private static readonly byte[] ARIB = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x07, 0x0D, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// ARRI
    /// </summary>
    /// <remarks>
    /// Metadata registered by Arnold & Richter Cine Technik GmbH for private use
    /// </remarks>
    private static readonly byte[] ARRI = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0C, 0x0E, 0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// ARRIRAW Essence 12-bit Coding
    /// </summary>
    /// <remarks>
    /// Identifies ARRIRAW Uncompressed 12-bit Picture Coding
    /// </remarks>
    private static readonly byte[] ARRIRAWCoding12bit = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x01, 0x02, 0x01, 0x01, 0x01];
    /// <summary>
    /// ARRIRAW Essence 12-bit Reverse Coding
    /// </summary>
    /// <remarks>
    /// Identifies ARRIRAW Uncompressed 12-bit Reverse Picture Coding
    /// </remarks>
    private static readonly byte[] ARRIRAWCoding12bitReverse = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x01, 0x02, 0x01, 0x01, 0x02];
    /// <summary>
    /// ARRIRAW Essence 13-bit Coding
    /// </summary>
    /// <remarks>
    /// Identifies ARRIRAW Uncompressed 13-bit Picture Coding
    /// </remarks>
    private static readonly byte[] ARRIRAWCoding13bit = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x01, 0x02, 0x01, 0x01, 0x03];
    /// <summary>
    /// ARRIRAW Essence 12-bit High Density Coding
    /// </summary>
    /// <remarks>
    /// Identifies ARRIRAW High Density 12-bit Picture Coding
    /// </remarks>
    private static readonly byte[] ARRIRAWCodingHighDensity12bit = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x01];
    /// <summary>
    /// ARRIRAW Essence 13-bit High Density Coding
    /// </summary>
    /// <remarks>
    /// Identifies ARRIRAW High Density 13-bit Picture Coding
    /// </remarks>
    private static readonly byte[] ARRIRAWCodingHighDensity13bit = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x01, 0x02, 0x01, 0x02, 0x02];
    /// <summary>
    /// AS_07
    /// </summary>
    /// <remarks>
    /// AS-07 Archiving and Preservation Format
    /// </remarks>
    private static readonly byte[] AS_07 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x07, 0x01, 0x07, 0x00, 0x00, 0x00];
    /// <summary>
    /// AS_07_AudioLabels
    /// </summary>
    /// <remarks>
    /// AS-07 Archiving and Preservation Format Audio Labels
    /// </remarks>
    private static readonly byte[] AS_07_AudioLabels = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x0E, 0x01, 0x01, 0x07, 0x02, 0x00, 0x00];
    /// <summary>
    /// AS_07_AudioLayout1TrackAudio
    /// </summary>
    /// <remarks>
    /// One track (one audio) (see AS-07 B.3 table 5). Likely to be encountered in analog tape source media
    /// </remarks>
    private static readonly byte[] AS_07_AudioLayout1TrackAudio = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x0E, 0x01, 0x01, 0x07, 0x02, 0x04, 0x07];
    /// <summary>
    /// AS_07_AudioLayout1TrackAudio1TrackTimecode
    /// </summary>
    /// <remarks>
    /// Two tracks (one audio, one timecode) (see AS-07 B.3 table 7). Likely to be encountered in analog tape source media
    /// </remarks>
    private static readonly byte[] AS_07_AudioLayout1TrackAudio1TrackTimecode = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x0E, 0x01, 0x01, 0x07, 0x02, 0x04, 0x09];
    /// <summary>
    /// AS_07_AudioLayout1TrackUndef
    /// </summary>
    /// <remarks>
    /// One track detected, content undefined (see AS-07 B.3 table 1). Likely to be encountered in analog tape source media
    /// </remarks>
    private static readonly byte[] AS_07_AudioLayout1TrackUndef = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x0E, 0x01, 0x01, 0x07, 0x02, 0x04, 0x03];
    /// <summary>
    /// AS_07_AudioLayout2TrackAudio1TrackTimecode
    /// </summary>
    /// <remarks>
    /// Three tracks (two audio, one timecode) (see AS-07 B.3 table 9). Likely to be encountered in analog tape source media
    /// </remarks>
    private static readonly byte[] AS_07_AudioLayout2TrackAudio1TrackTimecode = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x0E, 0x01, 0x01, 0x07, 0x02, 0x04, 0x0B];
    /// <summary>
    /// AS_07_AudioLayout2TracksAudio
    /// </summary>
    /// <remarks>
    /// Two tracks (two audio) (see AS-07 B.3 table 6). Likely to be encountered in analog tape source media
    /// </remarks>
    private static readonly byte[] AS_07_AudioLayout2TracksAudio = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x0E, 0x01, 0x01, 0x07, 0x02, 0x04, 0x08];
    /// <summary>
    /// AS_07_AudioLayout2TrackUndef
    /// </summary>
    /// <remarks>
    /// Two tracks detected, content undefined (see AS-07 B.3 table 2). Likely to be encountered in analog tape source media
    /// </remarks>
    private static readonly byte[] AS_07_AudioLayout2TrackUndef = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x0E, 0x01, 0x01, 0x07, 0x02, 0x04, 0x04];
    /// <summary>
    /// AS_07_AudioLayout3TrackAudio1TrackTimecode
    /// </summary>
    /// <remarks>
    /// Four tracks (three audio, one timecode) (see AS-07 B.3 table 11).  Likely to be encountered in analog tape source media
    /// </remarks>
    private static readonly byte[] AS_07_AudioLayout3TrackAudio1TrackTimecode = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x0E, 0x01, 0x01, 0x07, 0x02, 0x04, 0x0D];
    /// <summary>
    /// AS_07_AudioLayout3TracksAudio
    /// </summary>
    /// <remarks>
    /// Three tracks (three audio) (see AS-07 B.3 table 8). Likely to be encountered in analog tape source media
    /// </remarks>
    private static readonly byte[] AS_07_AudioLayout3TracksAudio = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x0E, 0x01, 0x01, 0x07, 0x02, 0x04, 0x0A];
    /// <summary>
    /// AS_07_AudioLayout3TrackUndef
    /// </summary>
    /// <remarks>
    /// Three tracks detected, content undefined (see AS-07 B.3 table 3). Likely to be encountered in analog tape source media
    /// </remarks>
    private static readonly byte[] AS_07_AudioLayout3TrackUndef = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x0E, 0x01, 0x01, 0x07, 0x02, 0x04, 0x05];
    /// <summary>
    /// AS_07_AudioLayout4TrackAudio
    /// </summary>
    /// <remarks>
    /// Four tracks (four audio) (see AS-07 B.3 table 10). Likely to be encountered in analog tape source media
    /// </remarks>
    private static readonly byte[] AS_07_AudioLayout4TrackAudio = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x0E, 0x01, 0x01, 0x07, 0x02, 0x04, 0x0C];
    /// <summary>
    /// AS_07_AudioLayout4TrackUndef
    /// </summary>
    /// <remarks>
    /// Four tracks detected, content undefined (see AS-07 B.3 table 4). Likely to be encountered in analog tape source media
    /// </remarks>
    private static readonly byte[] AS_07_AudioLayout4TrackUndef = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x0E, 0x01, 0x01, 0x07, 0x02, 0x04, 0x06];
    /// <summary>
    /// AS_07_AudioLayoutEBU123_16c
    /// </summary>
    /// <remarks>
    /// EBU R 123: 16c (For 16 ch. only) Reference EBU standard, pattern from AS-11
    /// </remarks>
    private static readonly byte[] AS_07_AudioLayoutEBU123_16c = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x0E, 0x01, 0x01, 0x07, 0x02, 0x04, 0x13];
    /// <summary>
    /// AS_07_AudioLayoutEBU123_16d
    /// </summary>
    /// <remarks>
    /// EBU R 123: 16d (For 16 ch. only) Reference EBU standard, pattern from AS-11
    /// </remarks>
    private static readonly byte[] AS_07_AudioLayoutEBU123_16d = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x0E, 0x01, 0x01, 0x07, 0x02, 0x04, 0x14];
    /// <summary>
    /// AS_07_AudioLayoutEBU123_16f
    /// </summary>
    /// <remarks>
    /// EBU R 123: 16f (For 16 ch. only) Reference EBU standard, pattern from AS-11
    /// </remarks>
    private static readonly byte[] AS_07_AudioLayoutEBU123_16f = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x0E, 0x01, 0x01, 0x07, 0x02, 0x04, 0x15];
    /// <summary>
    /// AS_07_AudioLayoutEBU123_4b
    /// </summary>
    /// <remarks>
    /// EBU R 123: 4b (For 4 ch. only) Reference EBU standard, pattern from AS-11
    /// </remarks>
    private static readonly byte[] AS_07_AudioLayoutEBU123_4b = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x0E, 0x01, 0x01, 0x07, 0x02, 0x04, 0x11];
    /// <summary>
    /// AS_07_AudioLayoutEBU123_4c
    /// </summary>
    /// <remarks>
    /// EBU R 123: 4c (For 4 ch. only) Reference EBU standard, pattern from AS-11
    /// </remarks>
    private static readonly byte[] AS_07_AudioLayoutEBU123_4c = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x0E, 0x01, 0x01, 0x07, 0x02, 0x04, 0x12];
    /// <summary>
    /// AS_07_AudioLayoutEBU48_2a
    /// </summary>
    /// <remarks>
    /// EBU R 48: 2a (For 4 ch. only) Reference EBU standard, pattern from AS-11
    /// </remarks>
    private static readonly byte[] AS_07_AudioLayoutEBU48_2a = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x0E, 0x01, 0x01, 0x07, 0x02, 0x04, 0x10];
    /// <summary>
    /// AS_07_AudioLayouts
    /// </summary>
    /// <remarks>
    /// AS-07 Archiving and Preservation Format Audio Layouts
    /// </remarks>
    private static readonly byte[] AS_07_AudioLayouts = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x0E, 0x01, 0x01, 0x07, 0x02, 0x04, 0x00];
    /// <summary>
    /// AS_07_AudioLayoutSilence
    /// </summary>
    /// <remarks>
    /// No content on audio channels, Likely to be encountered in analog tape source media
    /// </remarks>
    private static readonly byte[] AS_07_AudioLayoutSilence = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x0E, 0x01, 0x01, 0x07, 0x02, 0x04, 0x01];
    /// <summary>
    /// AS_07_AudioLayoutST377_4MCA
    /// </summary>
    /// <remarks>
    /// SMPTE ST 377-4 Multichannel Audio (MCA). AS-07 encoders must also embed the descriptors and subdescriptors specified in SMPTE ST 377-1 and ST 377-4
    /// </remarks>
    private static readonly byte[] AS_07_AudioLayoutST377_4MCA = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x0E, 0x01, 0x01, 0x07, 0x02, 0x04, 0x20];
    /// <summary>
    /// AS_07_AudioLayoutUnknown
    /// </summary>
    /// <remarks>
    /// Unknown, undefined Likely to be encountered in analog tape source media
    /// </remarks>
    private static readonly byte[] AS_07_AudioLayoutUnknown = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x0E, 0x01, 0x01, 0x07, 0x02, 0x04, 0x02];
    /// <summary>
    /// AS_07_Core_DMS
    /// </summary>
    /// <remarks>
    /// Required Core Metadata for AS-07 Archiving and Preservation Format
    /// </remarks>
    private static readonly byte[] AS_07_Core_DMS = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x07, 0x01, 0x07, 0x01, 0x00, 0x00];
    /// <summary>
    /// AS_07_GSP_DMS
    /// </summary>
    /// <remarks>
    /// Required Metadata Scheme for data stored in Generic Stream Partitions in AS-07 files
    /// </remarks>
    private static readonly byte[] AS_07_GSP_DMS = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x07, 0x01, 0x07, 0x02, 0x00, 0x00];
    /// <summary>
    /// AS_07_Labels
    /// </summary>
    /// <remarks>
    /// AS-07 Archiving and Preservation Format Labels
    /// </remarks>
    private static readonly byte[] AS_07_Labels = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0E, 0x0D, 0x0E, 0x01, 0x01, 0x07, 0x00, 0x00, 0x00];
    /// <summary>
    /// AS_07_MICCarriage_Algorithms
    /// </summary>
    /// <remarks>
    /// AS-07 Archiving and Preservation Format MIC Carriage Algorithms
    /// </remarks>
    private static readonly byte[] AS_07_MICCarriage_Algorithms = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x0E, 0x01, 0x01, 0x07, 0x04, 0x02, 0x00];
    /// <summary>
    /// AS_07_MICCarriage_Labels
    /// </summary>
    /// <remarks>
    /// AS-07 Archiving and Preservation Format MIC Carriage Modes
    /// </remarks>
    private static readonly byte[] AS_07_MICCarriage_Labels = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x0E, 0x01, 0x01, 0x07, 0x04, 0x01, 0x00];
    /// <summary>
    /// AS_07_Modal_Labels
    /// </summary>
    /// <remarks>
    /// AS-07 Archiving and Preservation Format Modal Labels
    /// </remarks>
    private static readonly byte[] AS_07_Modal_Labels = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x0E, 0x01, 0x01, 0x07, 0x04, 0x00, 0x00];
    /// <summary>
    /// AS_07_Segmentation_DMS
    /// </summary>
    /// <remarks>
    /// Required Metadata Scheme for AS-07 files that segment essence data
    /// </remarks>
    private static readonly byte[] AS_07_Segmentation_DMS = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x07, 0x01, 0x07, 0x03, 0x00, 0x00];
    /// <summary>
    /// AS-10
    /// </summary>
    /// <remarks>
    /// No definition provided.
    /// </remarks>
    private static readonly byte[] AS_10 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x07, 0x01, 0x0A, 0x00, 0x00, 0x00];
    /// <summary>
    /// AS-11
    /// </summary>
    /// <remarks>
    /// No definition provided.
    /// </remarks>
    private static readonly byte[] AS_11 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x07, 0x01, 0x0B, 0x00, 0x00, 0x00];
    /// <summary>
    /// AS-11 UKDPP
    /// </summary>
    /// <remarks>
    /// No definition provided.
    /// </remarks>
    private static readonly byte[] AS_11_UKDPP = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x0C, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// AS-12
    /// </summary>
    /// <remarks>
    /// No definition provided.
    /// </remarks>
    private static readonly byte[] AS_12 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x07, 0x01, 0x0C, 0x00, 0x00, 0x00];
    /// <summary>
    /// ASC
    /// </summary>
    /// <remarks>
    /// Metadata registered by the American Society of Cinematographers for public use
    /// </remarks>
    private static readonly byte[] ASC = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0C, 0x0D, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Ascent Media Group, Inc.
    /// </summary>
    /// <remarks>
    /// Metadata registered by Ascent Media Group, Inc. for private use
    /// </remarks>
    private static readonly byte[] AscentMediaGroupInc = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x07, 0x0E, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// ASPA
    /// </summary>
    /// <remarks>
    /// Unclassified metadata registered by MISB (Motion Imagery Standards Board) for ASPA
    /// </remarks>
    private static readonly byte[] ASPA = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x0E, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// ATSC A-52 Compressed Audio
    /// </summary>
    /// <remarks>
    /// Identifies ATSC A/52 compressed audio
    /// </remarks>
    private static readonly byte[] ATSCA52CompressedAudio = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x02, 0x02, 0x02, 0x03, 0x02, 0x01, 0x00];
    /// <summary>
    /// Audio Bed Description
    /// </summary>
    /// <remarks>
    /// Audio Bed Description
    /// </remarks>
    private static readonly byte[] AudioBedDescription = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x04, 0x02, 0x05, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Audio Channel
    /// </summary>
    /// <remarks>
    /// SMPTE Label identifiers for Audio Channel interpretive data
    /// Namespace: http://www.smpte-ra.org/reg/400/2012
    /// </remarks>
    private static readonly byte[] AudioChannel_1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Audio Channel
    /// </summary>
    /// <remarks>
    /// SMPTE Label identifiers for Audio Channel interpretive data
    /// Namespace: http://www.smpte-ra.org/reg/400/2012/13/1/amwa/rules
    /// </remarks>
    private static readonly byte[] AudioChannel_rules = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x01, 0x01, 0x00, 0x00];
    /// <summary>
    /// Audio Channel
    /// </summary>
    /// <remarks>
    /// Identifiers for Audio Channel interpretive data
    /// Namespace: http://www.smpte-ra.org/reg/400/2012/13/15
    /// </remarks>
    private static readonly byte[] AudioChannel_15 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x0F, 0x03, 0x02, 0x01, 0x00, 0x00, 0x00];
    /// <summary>
    /// Audio Channels for SMPTE ST 2067-8
    /// </summary>
    /// <remarks>
    /// SMPTE Label identifiers for SMPTE ST 2067-8 Audio Channel interpretive data
    /// </remarks>
    private static readonly byte[] AudioChannelsForSMPTEST20678 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Sign Language Video Stream
    /// </summary>
    /// <remarks>
    /// Identifies an Audio Channel that contains a Sign Language Video Stream
    /// </remarks>
    private static readonly byte[] AudioChannelSLVS = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x0F, 0x03, 0x02, 0x01, 0x01, 0x00, 0x00];
    /// <summary>
    /// Audio Description
    /// </summary>
    /// <remarks>
    /// Identifies a verbal description of the visual scene
    /// </remarks>
    private static readonly byte[] AudioDescription = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x01, 0x03, 0x03, 0x00];
    /// <summary>
    /// Audio Description Program Mix
    /// </summary>
    /// <remarks>
    /// Identifies a mix of the program audio with audio description audio
    /// </remarks>
    private static readonly byte[] AudioDescriptionProgramMix = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x01, 0x03, 0x02, 0x00];
    /// <summary>
    /// Audio Description Studio Signal
    /// </summary>
    /// <remarks>
    /// Identifies an Soundfield Group carrying a Visually Impaired Narrative Audio Channel and an Audio Description Studio Signal Data Channel - this is the two-channel Audio Description Studio Signal defined by BBC R&D White Paper WHP 198
    /// </remarks>
    private static readonly byte[] AudioDescriptionStudioSignal = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x01, 0x02, 0x01, 0x00];
    /// <summary>
    /// Audio Description Studio Signal Data Channel
    /// </summary>
    /// <remarks>
    /// Identifies an Audio Channel carrying a data signal in the format defined by BBC R&D White Paper WHP 198, intended to be used to control the fade and pan of the Main Program audio when it is being mixed with a Visually Impaired Narrative Audio Channel
    /// </remarks>
    private static readonly byte[] AudioDescriptionStudioSignalDataChannel = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x01, 0x01, 0x01, 0x00];
    /// <summary>
    /// Audio Element Names
    /// </summary>
    /// <remarks>
    /// Audio Element Names
    /// </remarks>
    private static readonly byte[] AudioElementNames = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x04, 0x02, 0x09, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Audio Metadata
    /// </summary>
    /// <remarks>
    /// Audio Metadata
    /// </remarks>
    private static readonly byte[] AudioMetadata = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Audio Object Description
    /// </summary>
    /// <remarks>
    /// Audio Object Description
    /// </remarks>
    private static readonly byte[] AudioObjectDescription = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x04, 0x02, 0x06, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Audio Presentation Description
    /// </summary>
    /// <remarks>
    /// Audio Presentation Description
    /// </remarks>
    private static readonly byte[] AudioPresentationDescription = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x04, 0x02, 0x07, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Audio Presentation Names
    /// </summary>
    /// <remarks>
    /// Audio Presentation Names
    /// </remarks>
    private static readonly byte[] AudioPresentationNames = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x04, 0x02, 0x08, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Auxiliary Data Track
    /// </summary>
    /// <remarks>
    /// Identifies a track containing auxiliary data that is neither essence nor metadata (for example, icon images)
    /// </remarks>
    private static readonly byte[] AuxiliaryDataTrack = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x05, 0x01, 0x03, 0x02, 0x03, 0x01, 0x00, 0x00, 0x00];
    /// <summary>
    /// Avid Technology, Inc.
    /// </summary>
    /// <remarks>
    /// Metadata registered by Avid Technology, Inc. for private use
    /// </remarks>
    private static readonly byte[] AvidTechnologyInc = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x0E, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Barco
    /// </summary>
    /// <remarks>
    /// Metadata registered by Barco, Inc. for private use
    /// </remarks>
    private static readonly byte[] Barco = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0E, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// BBC
    /// </summary>
    /// <remarks>
    /// Metadata registered by the British Broadcasting Corporation for public use
    /// </remarks>
    private static readonly byte[] BBC = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x05, 0x0D, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Blocks File Format 0
    /// </summary>
    /// <remarks>
    /// Blocks File Format 0
    /// </remarks>
    private static readonly byte[] Blocks_FF_0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x05, 0x01, 0x00, 0x00];
    /// <summary>
    /// Blocks File Format 0 WIP
    /// </summary>
    /// <remarks>
    /// Blocks File Format 0 (Work in Progress)
    /// </remarks>
    private static readonly byte[] Blocks_FF_0_WIP = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x03, 0x01, 0x00, 0x00];
    /// <summary>
    /// Blocks File Format 1
    /// </summary>
    /// <remarks>
    /// Blocks File Format 1
    /// </remarks>
    private static readonly byte[] Blocks_FF_1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x05, 0x02, 0x00, 0x00];
    /// <summary>
    /// Blocks File Format 1 WIP
    /// </summary>
    /// <remarks>
    /// Blocks File Format 1 (Work in Progress)
    /// </remarks>
    private static readonly byte[] Blocks_FF_1_WIP = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x03, 0x02, 0x00, 0x00];
    /// <summary>
    /// Blocks File Format 10 WIP
    /// </summary>
    /// <remarks>
    /// Blocks File Format 10 (Work in Progress)
    /// </remarks>
    private static readonly byte[] Blocks_FF_10_WIP = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x03, 0x09, 0x00, 0x00];
    /// <summary>
    /// Blocks File Format 11 WIP
    /// </summary>
    /// <remarks>
    /// Blocks File Format 11 (Work in Progress)
    /// </remarks>
    private static readonly byte[] Blocks_FF_11_WIP = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x03, 0x0B, 0x00, 0x00];
    /// <summary>
    /// Blocks File Format 12
    /// </summary>
    /// <remarks>
    /// Blocks File Format 12
    /// </remarks>
    private static readonly byte[] Blocks_FF_12 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x05, 0x05, 0x00, 0x00];
    /// <summary>
    /// Blocks File Format 12 WIP
    /// </summary>
    /// <remarks>
    /// Blocks File Format 12 (Work in Progress)
    /// </remarks>
    private static readonly byte[] Blocks_FF_12_WIP = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x03, 0x05, 0x00, 0x00];
    /// <summary>
    /// Blocks File Format 13 WIP
    /// </summary>
    /// <remarks>
    /// Blocks File Format 13 (Work in Progress)
    /// </remarks>
    private static readonly byte[] Blocks_FF_13_WIP = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x03, 0x0C, 0x00, 0x00];
    /// <summary>
    /// Blocks File Format 14
    /// </summary>
    /// <remarks>
    /// Blocks File Format 14
    /// </remarks>
    private static readonly byte[] Blocks_FF_14 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x05, 0x0E, 0x00, 0x00];
    /// <summary>
    /// Blocks File Format 14 WIP
    /// </summary>
    /// <remarks>
    /// Blocks File Format 14 (Work in Progress)
    /// </remarks>
    private static readonly byte[] Blocks_FF_14_WIP = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x03, 0x0E, 0x00, 0x00];
    /// <summary>
    /// Blocks File Format 2
    /// </summary>
    /// <remarks>
    /// Blocks File Format 2
    /// </remarks>
    private static readonly byte[] Blocks_FF_2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x05, 0x03, 0x00, 0x00];
    /// <summary>
    /// Blocks File Format 2 WIP
    /// </summary>
    /// <remarks>
    /// Blocks File Format 2 (Work in Progress)
    /// </remarks>
    private static readonly byte[] Blocks_FF_2_WIP = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x03, 0x03, 0x00, 0x00];
    /// <summary>
    /// Blocks File Format 5 WIP
    /// </summary>
    /// <remarks>
    /// Blocks File Format 5 (Work in Progress)
    /// </remarks>
    private static readonly byte[] Blocks_FF_5_WIP = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x03, 0x06, 0x00, 0x00];
    /// <summary>
    /// Blocks File Format 6 WIP
    /// </summary>
    /// <remarks>
    /// Blocks File Format 6 (Work in Progress)
    /// </remarks>
    private static readonly byte[] Blocks_FF_6_WIP = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x03, 0x07, 0x00, 0x00];
    /// <summary>
    /// Blocks File Format 7
    /// </summary>
    /// <remarks>
    /// Blocks File Format 7
    /// </remarks>
    private static readonly byte[] Blocks_FF_7 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x05, 0x08, 0x00, 0x00];
    /// <summary>
    /// Blocks File Format 7 WIP
    /// </summary>
    /// <remarks>
    /// Blocks File Format 7 (Work in Progress)
    /// </remarks>
    private static readonly byte[] Blocks_FF_7_WIP = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x03, 0x08, 0x00, 0x00];
    /// <summary>
    /// Blocks File Format 8 WIP
    /// </summary>
    /// <remarks>
    /// Blocks File Format 8 (Work in Progress)
    /// </remarks>
    private static readonly byte[] Blocks_FF_8_WIP = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x03, 0x04, 0x00, 0x00];
    /// <summary>
    /// Blocks File Format 9 WIP
    /// </summary>
    /// <remarks>
    /// Blocks File Format 9 (Work in Progress)
    /// </remarks>
    private static readonly byte[] Blocks_FF_9_WIP = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x03, 0x0A, 0x00, 0x00];
    /// <summary>
    /// Blocks File Format X9
    /// </summary>
    /// <remarks>
    /// Blocks File Format X9
    /// </remarks>
    private static readonly byte[] Blocks_FF_X9 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x05, 0x09, 0x00, 0x00];
    /// <summary>
    /// Camera Settings
    /// </summary>
    /// <remarks>
    /// Identifies Camera Settings
    /// </remarks>
    private static readonly byte[] CameraSettings = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x05, 0x10, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Canon, Inc.
    /// </summary>
    /// <remarks>
    /// Metadata registered by Canon, Inc for private use
    /// </remarks>
    private static readonly byte[] CanonInc = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0C, 0x0E, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Center Audio Channel
    /// </summary>
    /// <remarks>
    /// Identifies the Audio Channel intended to drive the Center loudspeaker
    /// </remarks>
    private static readonly byte[] CenterAudioChannel = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// 14:9 Alternative Center Cut
    /// </summary>
    /// <remarks>
    /// Indicates that the image essence can accommodate an alternative center cut with a 14:9 aspect ratio
    /// </remarks>
    private static readonly byte[] CenterCut149 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x01, 0x01, 0x04, 0x02, 0x00, 0x00];
    /// <summary>
    /// 4:3 Alternative Center Cut
    /// </summary>
    /// <remarks>
    /// Indicates that the image essence can accommodate an alternative center cut with a 4:3 aspect ratio
    /// </remarks>
    private static readonly byte[] CenterCut43 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x00, 0x00];
    /// <summary>
    /// Center Surround Audio Channel
    /// </summary>
    /// <remarks>
    /// Identifies the Audio Channel intended to drive the Center Surround loudspeaker
    /// </remarks>
    private static readonly byte[] CenterSurroundAudioChannel = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x0D, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// CNN
    /// </summary>
    /// <remarks>
    /// Metadata registered by CNN for private use
    /// </remarks>
    private static readonly byte[] CNN = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x0E, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Coding Equations
    /// </summary>
    /// <remarks>
    /// Identifies the coding equation type
    /// </remarks>
    private static readonly byte[] CodingEquations = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x01, 0x01, 0x02, 0x00, 0x00, 0x00];
    /// <summary>
    /// GBR Coding Equations
    /// </summary>
    /// <remarks>
    /// Identifies a simple transformation of RGB to YC1C2: Y=G; C1=B; C2=R
    /// </remarks>
    private static readonly byte[] CodingEquations_GBR = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x01, 0x01, 0x02, 0x05, 0x00, 0x00];
    /// <summary>
    /// ITU-R BT.2020 Non-Constant Luminance Coding Equations
    /// </summary>
    /// <remarks>
    /// Identifies ITU-R BT.2020 coding equations for non-constant luminance
    /// </remarks>
    private static readonly byte[] CodingEquations_ITU2020_NCL = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x01, 0x01, 0x02, 0x06, 0x00, 0x00];
    /// <summary>
    /// ITU-R BT.2100 ICtCp Coding Equations
    /// </summary>
    /// <remarks>
    /// Identifies ITU-R BT.2100 coding equations for ICtCp
    /// </remarks>
    private static readonly byte[] CodingEquations_ITU2100_ICtCp = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x01, 0x01, 0x02, 0x07, 0x00, 0x00];
    /// <summary>
    /// ITU-R BT.601 Coding Equations
    /// </summary>
    /// <remarks>
    /// Identifies ITU-R BT.601 Coding Equations
    /// </remarks>
    private static readonly byte[] CodingEquations_ITU601 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x01, 0x01, 0x02, 0x01, 0x00, 0x00];
    /// <summary>
    /// ITU-R BT.709 Coding Equations
    /// </summary>
    /// <remarks>
    /// Identifies ITU-R BT.709 Coding Equations
    /// </remarks>
    private static readonly byte[] CodingEquations_ITU709 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x01, 0x01, 0x02, 0x02, 0x00, 0x00];
    /// <summary>
    /// SMPTE 240M Coding Equations
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE 240M coding equations (note: legacy use only)
    /// </remarks>
    private static readonly byte[] CodingEquations_SMPTE240M = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x06, 0x04, 0x01, 0x01, 0x01, 0x02, 0x03, 0x00, 0x00];
    /// <summary>
    /// YCgCo Coding Equations
    /// </summary>
    /// <remarks>
    /// Identifies YCgCo coding equations
    /// </remarks>
    private static readonly byte[] CodingEquations_YCgCo = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x01, 0x01, 0x02, 0x04, 0x00, 0x00];
    /// <summary>
    /// Color Primaries
    /// </summary>
    /// <remarks>
    /// Identifies the color primaries type
    /// </remarks>
    private static readonly byte[] ColorPrimaries = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x06, 0x04, 0x01, 0x01, 0x01, 0x03, 0x00, 0x00, 0x00];
    /// <summary>
    /// ACES Color Primaries
    /// </summary>
    /// <remarks>
    /// Identifies ACES SMPTE ST 2065-1 color primaries and white point
    /// </remarks>
    private static readonly byte[] ColorPrimaries_ACES = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x01, 0x01, 0x03, 0x07, 0x00, 0x00];
    /// <summary>
    /// Cinema Mezzanine Color Primaries
    /// </summary>
    /// <remarks>
    /// Colors are sampled as the X, Y and Z tristimulus values specified in ISO 11664-3 (No color primaries are specified)
    /// </remarks>
    private static readonly byte[] ColorPrimaries_CinemaMezzanine = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x01, 0x01, 0x03, 0x08, 0x00, 0x00];
    /// <summary>
    /// ITU-R BT.2020 Color Primaries
    /// </summary>
    /// <remarks>
    /// Identifies ITU-R BT.2020 color primaries and white point
    /// </remarks>
    private static readonly byte[] ColorPrimaries_ITU2020 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x01, 0x01, 0x03, 0x04, 0x00, 0x00];
    /// <summary>
    /// ITU-R BT.470 PAL Color Primaries
    /// </summary>
    /// <remarks>
    /// Identifies ITU-R BT.470 PAL color primaries and white point (note: used in B, D, G, H, I, N/PAL and B, D, G, H, K, K1, L/SECAM systems)
    /// </remarks>
    private static readonly byte[] ColorPrimaries_ITU470_PAL = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x06, 0x04, 0x01, 0x01, 0x01, 0x03, 0x02, 0x00, 0x00];
    /// <summary>
    /// ITU-R BT.709 Color Primaries
    /// </summary>
    /// <remarks>
    /// Identifies ITU-R BT.709 color primaries and white point
    /// </remarks>
    private static readonly byte[] ColorPrimaries_ITU709 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x06, 0x04, 0x01, 0x01, 0x01, 0x03, 0x03, 0x00, 0x00];
    /// <summary>
    /// P3D60 Color Primaries
    /// </summary>
    /// <remarks>
    /// Identifies P3D60 color primaries and white point
    /// </remarks>
    private static readonly byte[] ColorPrimaries_P3D60 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x01, 0x01, 0x03, 0x09, 0x00, 0x00];
    /// <summary>
    /// P3D65 Color Primaries
    /// </summary>
    /// <remarks>
    /// Identifies P3D65 color primaries and white point
    /// </remarks>
    private static readonly byte[] ColorPrimaries_P3D65 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x01, 0x01, 0x03, 0x06, 0x00, 0x00];
    /// <summary>
    /// P3DCI Color Primaries
    /// </summary>
    /// <remarks>
    /// Identifies P3DCI color primaries and white point
    /// </remarks>
    private static readonly byte[] ColorPrimaries_P3DCI = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x01, 0x01, 0x03, 0x0A, 0x00, 0x00];
    /// <summary>
    /// SMPTE-DC28 DCDM Color Primaries
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE DC28 D-Cinema Distribution Master color primaries and white point
    /// </remarks>
    private static readonly byte[] ColorPrimaries_SMPTE_DCDM = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x01, 0x01, 0x03, 0x05, 0x00, 0x00];
    /// <summary>
    /// SMPTE 170M Color Primaries
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE 170M color primaries and white point
    /// </remarks>
    private static readonly byte[] ColorPrimaries_SMPTE170M = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x06, 0x04, 0x01, 0x01, 0x01, 0x03, 0x01, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2115 Camera Gamut C Color Primaries
    /// </summary>
    /// <remarks>
    /// Identifies the SMPTE ST 2115 Camera Gamut C color primaries and white point
    /// </remarks>
    private static readonly byte[] ColorPrimaries_ST2115_CameraGamutC = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x01, 0x01, 0x03, 0x0E, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2115 Camera Gamut S3 Color Primaries
    /// </summary>
    /// <remarks>
    /// Identifies the SMPTE ST 2115 Camera Gamut S3 color primaries and white point
    /// </remarks>
    private static readonly byte[] ColorPrimaries_ST2115_CameraGamutS3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x01, 0x01, 0x03, 0x0B, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2115 Camera Gamut SC Color Primaries
    /// </summary>
    /// <remarks>
    /// Identifies the SMPTE ST 2115 Camera Gamut SC color primaries and white point
    /// </remarks>
    private static readonly byte[] ColorPrimaries_ST2115_CameraGamutSC = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x01, 0x01, 0x03, 0x0C, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2115 Camera Gamut V Color Primaries
    /// </summary>
    /// <remarks>
    /// Identifies the SMPTE ST 2115 Camera Gamut V color primaries and white point
    /// </remarks>
    private static readonly byte[] ColorPrimaries_ST2115_CameraGamutV = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x01, 0x01, 0x03, 0x0D, 0x00, 0x00];
    /// <summary>
    /// Companded Audio Coding
    /// </summary>
    /// <remarks>
    /// Identifies sample-based companding schemes
    /// </remarks>
    private static readonly byte[] CompandedAudioCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x04, 0x02, 0x02, 0x02, 0x03, 0x01, 0x00, 0x00];
    /// <summary>
    /// COMPOUND
    /// </summary>
    /// <remarks>
    /// SMPTE Label identifiers for Compound Data
    /// </remarks>
    private static readonly byte[] COMPOUND = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Compound Essence
    /// </summary>
    /// <remarks>
    /// SMPTE Label identifiers for compound essence parameters
    /// </remarks>
    private static readonly byte[] CompoundEssence = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Compressed Audio Coding
    /// </summary>
    /// <remarks>
    /// Identifies compression of all audio types
    /// </remarks>
    private static readonly byte[] CompressedAudioCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x02, 0x02, 0x02, 0x03, 0x00, 0x00, 0x00];
    /// <summary>
    /// Compressed Picture Coding
    /// </summary>
    /// <remarks>
    /// Identifies Compressed Picture Coding
    /// </remarks>
    private static readonly byte[] CompressedPictureCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Compressed Sound Coding
    /// </summary>
    /// <remarks>
    /// Identifies compressed sound coding characteristics
    /// </remarks>
    private static readonly byte[] CompressedSoundCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x02, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Config Payload
    /// </summary>
    /// <remarks>
    /// Config Payload
    /// </remarks>
    private static readonly byte[] ConfigPayload = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x04, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Constrained Multichannel Audio Labeling Framework
    /// </summary>
    /// <remarks>
    /// Identifies a specific application of the MXF Multichannel Audio Framework
    /// </remarks>
    private static readonly byte[] ConstrainedMultichannelAudioLabelingFramework = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x02, 0x01, 0x00, 0x00];
    /// <summary>
    /// ConstrainedMultichannelAudioLabelingFramework with Default Audio Layout A
    /// </summary>
    /// <remarks>
    /// Identifies a specific application of the MXF Multichannel Audio Framework with default audio layout 'A'
    /// </remarks>
    private static readonly byte[] ConstrainedMultichannelAudioLabelingFramework_with_Default_Audio_Layout_A = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x02, 0x02, 0x00, 0x00];
    /// <summary>
    /// CRC Payload
    /// </summary>
    /// <remarks>
    /// CRC Payload
    /// </remarks>
    private static readonly byte[] CRCPayload = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x04, 0x02, 0x03, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// D-BOX Technologies
    /// </summary>
    /// <remarks>
    /// Metadata registered by D-BOX Technologies for private use
    /// </remarks>
    private static readonly byte[] D_BOXTechnologies = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0C, 0x0E, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Data Encryption Algorithm Identifiers
    /// </summary>
    /// <remarks>
    /// Identifies data encryption algorithms
    /// </remarks>
    private static readonly byte[] DataEncryptionAlgorithmIdentifiers = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x07, 0x02, 0x09, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Data Encryption Identifiers
    /// </summary>
    /// <remarks>
    /// Identifies data encryption parameters
    /// </remarks>
    private static readonly byte[] DataEncryptionIdentifiers = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x07, 0x02, 0x09, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Data Essence
    /// </summary>
    /// <remarks>
    /// Identifies data essence parameters
    /// </remarks>
    private static readonly byte[] DataEssence = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Data Essence Coding Characteristics
    /// </summary>
    /// <remarks>
    /// Identifies Data Essence Coding Characteristics
    /// </remarks>
    private static readonly byte[] DataEssenceCodingCharacteristics = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Data Essence Track
    /// </summary>
    /// <remarks>
    /// Identifies a data essence track
    /// </remarks>
    private static readonly byte[] DataEssenceTrack = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x01, 0x03, 0x02, 0x02, 0x03, 0x00, 0x00, 0x00];
    /// <summary>
    /// Data Hashing Algorithms
    /// </summary>
    /// <remarks>
    /// Identifies data hashing algorithms
    /// </remarks>
    private static readonly byte[] DataHashingAlgorithms = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x07, 0x02, 0x09, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Data Stream Data Essence Coding
    /// </summary>
    /// <remarks>
    /// Identifies Data Stream Data Essence Coding
    /// </remarks>
    private static readonly byte[] DataStreamDataEssenceCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x03, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Data Track Labeling
    /// </summary>
    /// <remarks>
    /// Identifies Data Track Labeling
    /// </remarks>
    private static readonly byte[] DataTrackLabeling = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x03, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Data Track Labeling SMPTE ST 2070
    /// </summary>
    /// <remarks>
    /// Identifies Data Track Labeling SMPTE ST 2070
    /// </remarks>
    private static readonly byte[] DataTrackLabelingSMPTEST2070 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x03, 0x02, 0x10, 0x01, 0x00, 0x00, 0x00];
    /// <summary>
    /// Default Audio Layout A without MCA Labeling
    /// </summary>
    /// <remarks>
    /// Identifies default audio layout A without use of the MXF Multichannel Audio Framework
    /// </remarks>
    private static readonly byte[] Default_Audio_Layout_A_without_MCA_Labeling = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x02, 0x03, 0x00, 0x00];
    /// <summary>
    /// Definition Identifiers
    /// </summary>
    /// <remarks>
    /// Identifies Definition Identifiers
    /// </remarks>
    private static readonly byte[] DefinitionIdentifiers = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0C, 0x01, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Descriptive Metadata Track
    /// </summary>
    /// <remarks>
    /// Identifies a Descriptive Metadata Track
    /// </remarks>
    private static readonly byte[] DescriptiveMetadataTrack = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x01, 0x03, 0x02, 0x01, 0x10, 0x00, 0x00, 0x00];
    /// <summary>
    /// Device Settings
    /// </summary>
    /// <remarks>
    /// Identifies Device Settings
    /// </remarks>
    private static readonly byte[] DeviceSettings = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x05, 0x10, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// DM_AS_11_Core
    /// </summary>
    /// <remarks>
    /// AS-11 core metadata scheme
    /// </remarks>
    private static readonly byte[] DM_AS_11_Core = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x07, 0x01, 0x0B, 0x01, 0x00, 0x00];
    /// <summary>
    /// DM_AS_11_Segmentation
    /// </summary>
    /// <remarks>
    /// AS-11 segmentation metadata scheme
    /// </remarks>
    private static readonly byte[] DM_AS_11_Segmentation = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x07, 0x01, 0x0B, 0x02, 0x00, 0x00];
    /// <summary>
    /// DM_AS_11_UKDPP
    /// </summary>
    /// <remarks>
    /// AS-11 UK DPP metadata scheme
    /// </remarks>
    private static readonly byte[] DM_AS_11_UKDPP = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x0C, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00];
    /// <summary>
    /// DM_XML_Document
    /// </summary>
    /// <remarks>
    /// Descriptive Metadata XML Document in Header Metadata
    /// </remarks>
    private static readonly byte[] DM_XML_Document = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x04, 0x01, 0x00, 0x00];
    /// <summary>
    /// DMCVT Application 1
    /// </summary>
    /// <remarks>
    /// Identifies DMCVT Application 1
    /// </remarks>
    private static readonly byte[] DMCVTApplication1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x04, 0x01, 0x02, 0x02, 0x01, 0x00, 0x00];
    /// <summary>
    /// DMCVT Application 2
    /// </summary>
    /// <remarks>
    /// Identifies DMCVT Application 2
    /// </remarks>
    private static readonly byte[] DMCVTApplication2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x04, 0x01, 0x02, 0x02, 0x02, 0x00, 0x00];
    /// <summary>
    /// DMCVT Application 3
    /// </summary>
    /// <remarks>
    /// Identifies DMCVT Application 3
    /// </remarks>
    private static readonly byte[] DMCVTApplication3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x04, 0x01, 0x02, 0x02, 0x03, 0x00, 0x00];
    /// <summary>
    /// DMCVT Application 4
    /// </summary>
    /// <remarks>
    /// Identifies DMCVT Application 4
    /// </remarks>
    private static readonly byte[] DMCVTApplication4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x04, 0x01, 0x02, 0x02, 0x04, 0x00, 0x00];
    /// <summary>
    /// DMCVT Data Coding
    /// </summary>
    /// <remarks>
    /// Identifies DMCVT Data Coding
    /// </remarks>
    private static readonly byte[] DMCVTDataCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x04, 0x01, 0x02, 0x02, 0x00, 0x00, 0x00];
    /// <summary>
    /// DMS AS-03
    /// </summary>
    /// <remarks>
    /// Metadata for AS_03 Delivery Format
    /// </remarks>
    private static readonly byte[] DMS_AS_03 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x04, 0x01, 0x03, 0x00, 0x00, 0x00];
    /// <summary>
    /// DMS AS-10 Core
    /// </summary>
    /// <remarks>
    /// AS-10 Metadata Scheme
    /// </remarks>
    private static readonly byte[] DMS_AS_10_Core = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x07, 0x01, 0x0A, 0x01, 0x00, 0x00];
    /// <summary>
    /// DMS_AS_12
    /// </summary>
    /// <remarks>
    /// AS_12 metadata for advertising content identification
    /// </remarks>
    private static readonly byte[] DMS_AS_12 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x07, 0x01, 0x0C, 0x01, 0x00, 0x00];
    /// <summary>
    /// DMS-1 Framework Identifier
    /// </summary>
    /// <remarks>
    /// Identifies the DMS-1 Frameworks
    /// </remarks>
    private static readonly byte[] DMS1FrameworkIdentifier = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x04, 0x0D, 0x01, 0x04, 0x01, 0x01, 0x02, 0x01, 0x00];
    /// <summary>
    /// DNxUncompressed Picture Coding
    /// </summary>
    /// <remarks>
    /// Identifier for DNxUncompressed Picture Coding
    /// </remarks>
    private static readonly byte[] DNxUncompressedPictureCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x07, 0x00, 0x00];
    /// <summary>
    /// DNxUncompressed Picture Coding - Standard
    /// </summary>
    /// <remarks>
    /// Identifier for DNxUncompressed Picture Coding - Standard
    /// </remarks>
    private static readonly byte[] DNxUncompressedPictureCodingStandard = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x07, 0x01, 0x00];
    /// <summary>
    /// DNxUncompressedPictureCodingVariants
    /// </summary>
    /// <remarks>
    /// Identifier for DNxUncompressed Picture Coding - S2.14, 10.6, 12.4 formats
    /// </remarks>
    private static readonly byte[] DNxUncompressedPictureCodingVariants = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x07, 0x02, 0x00];
    /// <summary>
    /// Dolby-E Compressed Audio
    /// </summary>
    /// <remarks>
    /// Identifies Dolby E compressed audio
    /// </remarks>
    private static readonly byte[] DolbyECompressedAudio = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x02, 0x02, 0x02, 0x03, 0x02, 0x1C, 0x00];
    /// <summary>
    /// Dolby Laboratories Inc.
    /// </summary>
    /// <remarks>
    /// Metadata registered by Dolby Laboratories Inc. for private use
    /// </remarks>
    private static readonly byte[] DolbyLaboratories_Inc = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x05, 0x0E, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Doremi Labs, Inc.
    /// </summary>
    /// <remarks>
    /// Metadata registered by Doremi Labs, Inc. for private use
    /// </remarks>
    private static readonly byte[] DoremiLabsInc = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0E, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// DPP
    /// </summary>
    /// <remarks>
    /// Metadata registered by the UK Digital Production Partnership for public use
    /// </remarks>
    private static readonly byte[] DPP = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0C, 0x0D, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// DPP Schemes
    /// </summary>
    /// <remarks>
    /// No definition provided.
    /// </remarks>
    private static readonly byte[] DPP_Schemes = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x0C, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// DTS, Inc.
    /// </summary>
    /// <remarks>
    /// Metadata registered by DTS, Inc. for private use
    /// </remarks>
    private static readonly byte[] DTS = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0E, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Dutch Guild
    /// </summary>
    /// <remarks>
    /// Metadata registered by the Dutch Guild for public use
    /// </remarks>
    private static readonly byte[] DutchGuild = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x0D, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// DV-based Video 100Mbps 1080x50I
    /// </summary>
    /// <remarks>
    /// Identifies DV-based compressed to 100Mbps for a 1080x50I source
    /// </remarks>
    private static readonly byte[] DVBasedVideo100Mbps1080x50I = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x02, 0x02, 0x02, 0x06, 0x00];
    /// <summary>
    /// DV-based Video 100Mbps 1080x59.94I
    /// </summary>
    /// <remarks>
    /// Identifies DV-based compressed to 100Mbps for a 1080x59.94I source
    /// </remarks>
    private static readonly byte[] DVBasedVideo100Mbps1080x5994I = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x02, 0x02, 0x02, 0x05, 0x00];
    /// <summary>
    /// DV-based Video 100Mbps 720x50P
    /// </summary>
    /// <remarks>
    /// Identifies DV-based compressed to 100Mbps for a 720x50P source
    /// </remarks>
    private static readonly byte[] DVBasedVideo100Mbps720x50P = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x02, 0x02, 0x02, 0x08, 0x00];
    /// <summary>
    /// DV-based Video 100Mbps 720x59.94P
    /// </summary>
    /// <remarks>
    /// Identifies DV-based compressed to 100Mbps for a 720x59.94P source
    /// </remarks>
    private static readonly byte[] DVBasedVideo100Mbps720x5994P = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x02, 0x02, 0x02, 0x07, 0x00];
    /// <summary>
    /// DV-based Video 25Mbps 525x60I
    /// </summary>
    /// <remarks>
    /// Identifies DV-based compressed to 25Mbps for a 525x60I source
    /// </remarks>
    private static readonly byte[] DVBasedVideo25Mbps525x60I = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x02, 0x02, 0x02, 0x01, 0x00];
    /// <summary>
    /// DV-based Video 25Mbps 625x50I
    /// </summary>
    /// <remarks>
    /// Identifies DV-based compressed to 25Mbps for a 625x50I source
    /// </remarks>
    private static readonly byte[] DVBasedVideo25Mbps625x50I = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x00];
    /// <summary>
    /// DV-based Video 50Mbps 525x60I
    /// </summary>
    /// <remarks>
    /// Identifies DV-based compressed to 50Mbps for a 525x60I source
    /// </remarks>
    private static readonly byte[] DVBasedVideo50Mbps525x60I = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x02, 0x02, 0x02, 0x03, 0x00];
    /// <summary>
    /// DV-based Video 50Mbps 625x50I
    /// </summary>
    /// <remarks>
    /// Identifies DV-based compressed to 50Mbps for a 625x50I source
    /// </remarks>
    private static readonly byte[] DVBasedVideo50Mbps625x50I = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x02, 0x02, 0x02, 0x04, 0x00];
    /// <summary>
    /// DV-based Video Compression
    /// </summary>
    /// <remarks>
    /// Identifies DV-based Video Compression family
    /// </remarks>
    private static readonly byte[] DVBasedVideoCompression = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x02, 0x02, 0x02, 0x00, 0x00];
    /// <summary>
    /// DV Compressed Audio
    /// </summary>
    /// <remarks>
    /// Identifies DV 12-bit compressed audio
    /// </remarks>
    private static readonly byte[] DVCompressedAudio = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x04, 0x02, 0x02, 0x02, 0x03, 0x01, 0x10, 0x00];
    /// <summary>
    /// DV Video Compression
    /// </summary>
    /// <remarks>
    /// Identifies all variants of DV Video Compression
    /// </remarks>
    private static readonly byte[] DVVideoCompression = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x02, 0x02, 0x00, 0x00, 0x00];
    /// <summary>
    /// Dynamic Metadata
    /// </summary>
    /// <remarks>
    /// Identifies dynamic metadata parameters
    /// </remarks>
    private static readonly byte[] DynamicMetadata = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x04, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Dynamic Position Update
    /// </summary>
    /// <remarks>
    /// Dynamic Position Update
    /// </remarks>
    private static readonly byte[] DynamicPositionUpdate = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x04, 0x02, 0x0D, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// EAC3 Encoding Parameters
    /// </summary>
    /// <remarks>
    /// EAC3 Encoding Parameters
    /// </remarks>
    private static readonly byte[] EAC3EncodingParameters = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x04, 0x02, 0x0C, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// EBU/UER
    /// </summary>
    /// <remarks>
    /// Metadata registered by the EBU for public use
    /// </remarks>
    private static readonly byte[] EBU_UER = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x0D, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// ebucore
    /// </summary>
    /// <remarks>
    /// The EBUCore is the EBU core set of metadata so-called the Dublin Core for media
    /// </remarks>
    private static readonly byte[] ebucore = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// EBU-t3264 STL Captions Essence
    /// </summary>
    /// <remarks>
    /// Identifies EBU-t3264 STL Captions Essence
    /// </remarks>
    private static readonly byte[] EBUT3264STLCaptionsEssence = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x03, 0x01, 0x02, 0x01, 0x00, 0x00, 0x00];
    /// <summary>
    /// EBU-t3264 STL Subtitle Essence
    /// </summary>
    /// <remarks>
    /// Identifies EBU-t3264 STL Subtitle Essence
    /// </remarks>
    private static readonly byte[] EBUT3264STLSubtitleEssence = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x03, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00];
    /// <summary>
    /// ED2 Substream Description
    /// </summary>
    /// <remarks>
    /// ED2 Substream Description
    /// </remarks>
    private static readonly byte[] ED2SubstreamDescription = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x04, 0x02, 0x0A, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// ED2 Substream Names
    /// </summary>
    /// <remarks>
    /// ED2 Substream Names
    /// </remarks>
    private static readonly byte[] ED2SubstreamNames = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x04, 0x02, 0x0B, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// ED2 Turnaround Description
    /// </summary>
    /// <remarks>
    /// ED2 Turnaround Description
    /// </remarks>
    private static readonly byte[] ED2TurnaroundDescription = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x04, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Encryption Identifiers
    /// </summary>
    /// <remarks>
    /// Identifies encryption parameters
    /// </remarks>
    private static readonly byte[] EncryptionIdentifiers = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x07, 0x02, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Essence Track Kinds
    /// </summary>
    /// <remarks>
    /// Identifies essence track kinds
    /// </remarks>
    private static readonly byte[] EssenceTrackKinds = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x01, 0x03, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// EVS Broadcast Equipment
    /// </summary>
    /// <remarks>
    /// Metadata registered by EVS Broadcast Equipment for private use
    /// </remarks>
    private static readonly byte[] EVSBroadcastEquipment = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0E, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Experimental
    /// </summary>
    /// <remarks>
    /// For use in multimedia research or other limited access, experimental environments
    /// </remarks>
    private static readonly byte[] Experimental = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Exposure Settings
    /// </summary>
    /// <remarks>
    /// Identifies Exposure Settings
    /// </remarks>
    private static readonly byte[] ExposureSettings = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x05, 0x10, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00];
    /// <summary>
    /// FFV1PictureCoding
    /// </summary>
    /// <remarks>
    /// FFV1 Picture Essence Coding
    /// </remarks>
    private static readonly byte[] FFV1PictureCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x09, 0x00, 0x00];
    /// <summary>
    /// FFV1PictureCodingV0
    /// </summary>
    /// <remarks>
    /// FFV1 Picture Essence Coding, Format Version 0
    /// </remarks>
    private static readonly byte[] FFV1PictureCodingV0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x09, 0x01, 0x00];
    /// <summary>
    /// FFV1PictureCodingV1
    /// </summary>
    /// <remarks>
    /// FFV1 Picture Essence Coding, Format Version 1
    /// </remarks>
    private static readonly byte[] FFV1PictureCodingV1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x09, 0x02, 0x00];
    /// <summary>
    /// FFV1PictureCodingV3
    /// </summary>
    /// <remarks>
    /// FFV1 Picture Essence Coding, Format Version 3
    /// </remarks>
    private static readonly byte[] FFV1PictureCodingV3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x09, 0x04, 0x00];
    /// <summary>
    /// File Format Identifiers
    /// </summary>
    /// <remarks>
    /// Labels for File Format Identifiers
    /// </remarks>
    private static readonly byte[] FileFormatIdentifiers = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x01, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// File Format Identifiers Unstructured Node
    /// </summary>
    /// <remarks>
    /// Labels for File Format Identifiers Unstructured Node
    /// </remarks>
    private static readonly byte[] FileFormatIdentifiersUnstructuredNode = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x01, 0x01, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// FLIR Systems, Inc.
    /// </summary>
    /// <remarks>
    /// Metadata registered by FLIR Systems, Inc. for private use
    /// </remarks>
    private static readonly byte[] FLIR = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0E, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// For Information Only Do Not Use
    /// </summary>
    /// <remarks>
    /// SMPTE Label identifiers for For Information Only Do Not Use
    /// </remarks>
    private static readonly byte[] ForInformationOnlyDoNotUse = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x01, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Frame Wrapped ISXD Container
    /// </summary>
    /// <remarks>
    /// Identifies Frame Wrapped ISXD Container
    /// </remarks>
    private static readonly byte[] FrameWrappedISXDContainer = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x05, 0x0E, 0x09, 0x06, 0x07, 0x01, 0x01, 0x01, 0x03];
    /// <summary>
    /// Fraunhofer
    /// </summary>
    /// <remarks>
    /// Metadata registered by Fraunhofer for private use
    /// </remarks>
    private static readonly byte[] Fraunhofer = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0E, 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// FSK Sync Signal Channel
    /// </summary>
    /// <remarks>
    /// Identifies an FSK Sync channel
    /// </remarks>
    private static readonly byte[] FSKSyncSignalChannel = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x10, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Full Auto Exposure
    /// </summary>
    /// <remarks>
    /// Identifies Full Auto Exposure
    /// </remarks>
    private static readonly byte[] FullAutoExposure = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x05, 0x10, 0x01, 0x01, 0x01, 0x02, 0x00, 0x00];
    /// <summary>
    /// Fundamental Metadata Characteristics
    /// </summary>
    /// <remarks>
    /// Identifies fundamental metadata parameters
    /// </remarks>
    private static readonly byte[] FundamentalMetadataCharacteristics = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x04, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Fundamental Picture Characteristics
    /// </summary>
    /// <remarks>
    /// Identifies fundamental picture essence parameters
    /// </remarks>
    private static readonly byte[] FundamentalPictureCharacteristics = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Gain Priority Auto Exposure
    /// </summary>
    /// <remarks>
    /// Identifies Gain Priority Auto Exposure
    /// </remarks>
    private static readonly byte[] GainPriorityAutoExposure = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x05, 0x10, 0x01, 0x01, 0x01, 0x03, 0x00, 0x00];
    /// <summary>
    /// General Data
    /// </summary>
    /// <remarks>
    /// SMPTE Label identifiers for general data parameters (neither essence nor metadata)
    /// </remarks>
    private static readonly byte[] GeneralData = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Generic Captions Essence
    /// </summary>
    /// <remarks>
    /// Identifies Generic Captions Essence
    /// </remarks>
    private static readonly byte[] GenericCaptionsEssence = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x03, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Generic Event Text Essence
    /// </summary>
    /// <remarks>
    /// Identifies Generic Event Text Essence
    /// </remarks>
    private static readonly byte[] GenericEventTextEssence = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Generic Subtitle  Essence
    /// </summary>
    /// <remarks>
    /// Identifies Generic Subtitle  Essence
    /// </remarks>
    private static readonly byte[] GenericSubtitleEssence = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x03, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Globally Unique Identifiers
    /// </summary>
    /// <remarks>
    /// Identifies Globally Unique Identifiers
    /// </remarks>
    private static readonly byte[] GloballyUniqueIdentifiers = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Globally Unique Locators
    /// </summary>
    /// <remarks>
    /// SMPTE identifiers for Globally Unique Locators
    /// </remarks>
    private static readonly byte[] GloballyUniqueLocators = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Grass Valley, Inc.
    /// </summary>
    /// <remarks>
    /// Metadata registered by Grass Valley, Inc. for private use
    /// </remarks>
    private static readonly byte[] GrassValleyInc = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0E, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Group of Soundfield Groups
    /// </summary>
    /// <remarks>
    /// SMPTE Label identifiers for Groups of Soundfield Groups interpretive data
    /// Namespace: http://www.smpte-ra.org/reg/400/2012
    /// </remarks>
    private static readonly byte[] GroupOfSoundfieldGroups_1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Group of Soundfield Groups
    /// </summary>
    /// <remarks>
    /// SMPTE Label identifiers for Groups of Soundfield Groups interpretive data
    /// Namespace: http://www.smpte-ra.org/reg/400/2012/13/1/amwa/rules
    /// </remarks>
    private static readonly byte[] GroupOfSoundfieldGroups_rules = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x01, 0x03, 0x00, 0x00];
    /// <summary>
    /// Group of Soundfield Groups for SMPTE ST 2067-8
    /// </summary>
    /// <remarks>
    /// SMPTE Label identifiers for SMPTE ST 2067-8 Groups of Soundfield Groups
    /// </remarks>
    private static readonly byte[] GroupOfSoundfieldGroupsForSMPTEST20678 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x03, 0x20, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// H.264/MPEG-4 AVC Baseline Profile
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC Baseline Profile
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCBaselineProfile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x31, 0x10, 0x00];
    /// <summary>
    /// H.264/MPEG-4 AVC Baseline Profile Unconstrained Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC Baseline Profile Unconstrained Coding. Note: Profile compliant coding with no additional constraints
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCBaselineProfileUnconstrainedCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x31, 0x10, 0x01];
    /// <summary>
    /// H.264/MPEG-4 AVC CAVLC 444 Intra Profile
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC CAVLC 444 Intra Profile
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCCAVLC444IntraProfile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x32, 0x50, 0x00];
    /// <summary>
    /// H.264/MPEG-4 AVC CAVLC 444 Intra Profile Unconstrained Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC CAVLC 444 Intra Profile Unconstrained Coding. Note: Profile compliant coding with no additional constraints
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCCAVLC444IntraProfileUnconstrainedCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x32, 0x50, 0x01];
    /// <summary>
    /// H.264/MPEG-4 AVC Constrained Baseline Profile
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC Constrained Baseline Profile
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCConstrainedBaselineProfile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x31, 0x11, 0x00];
    /// <summary>
    /// H.264/MPEG-4 AVC Constrained Baseline Profile Unconstrained Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC Constrained Baseline Profile Unconstrained Coding. Note: Profile compliant coding with no additional constraints
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCConstrainedBaselineProfileUnconstrainedCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x31, 0x11, 0x01];
    /// <summary>
    /// H.264/MPEG-4 AVC Extended Profile
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC Extended Profile
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCExtendedProfile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x31, 0x30, 0x00];
    /// <summary>
    /// H.264/MPEG-4 AVC Extended Profile Unconstrained Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC Extended Profile Unconstrained Coding. Note: Profile compliant coding with no additional constraints
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCExtendedProfileUnconstrainedCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x31, 0x30, 0x01];
    /// <summary>
    /// H.264/MPEG-4 AVC High 10 Intra Profile
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC High 10 Intra Profile
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCHigh10IntraProfile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x32, 0x20, 0x00];
    /// <summary>
    /// H.264/MPEG-4 AVC High 10 Intra RP2027 Constrained Class 50
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC High 10 Intra RP2027 Constrained Class 50
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCHigh10IntraRP2027ConstrainedClass50 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x32, 0x21, 0x00];
    /// <summary>
    /// H.264/MPEG-4 AVC High 10 Intra RP2027 Constrained Class 50 1080/25p Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC High 10 Intra RP2027 Constrained Class 50 1080/25p and 50p Coding
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCHigh10IntraRP2027ConstrainedClass50108025pCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x32, 0x21, 0x04];
    /// <summary>
    /// H.264/MPEG-4 AVC High 10 Intra RP2027 Constrained Class 50 1080/29.97p Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC High 10 Intra RP2027 Constrained Class 50 1080/29.97p,59.94p,and 23.98p Coding
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCHigh10IntraRP2027ConstrainedClass5010802997pCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x32, 0x21, 0x03];
    /// <summary>
    /// H.264/MPEG-4 AVC High 10 Intra RP2027 Constrained Class 50 1080/50i Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC High 10 Intra RP2027 Constrained Class 50 1080/50i Coding
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCHigh10IntraRP2027ConstrainedClass50108050iCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x32, 0x21, 0x02];
    /// <summary>
    /// H.264/MPEG-4 AVC High 10 Intra RP2027 Constrained Class 50 1080/59.94i Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC High 10 Intra RP2027 Constrained Class 50 1080/59.94i Coding
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCHigh10IntraRP2027ConstrainedClass5010805994iCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x32, 0x21, 0x01];
    /// <summary>
    /// H.264/MPEG-4 AVC High 10 Intra RP2027 Constrained Class 50 720/50p Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC High 10 Intra RP2027 Constrained Class 50 720/50p and 25p Coding
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCHigh10IntraRP2027ConstrainedClass5072050pCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x32, 0x21, 0x09];
    /// <summary>
    /// H.264/MPEG-4 AVC High 10 Intra RP2027 Constrained Class 50 720/59.94p Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC High 10 Intra RP2027 Constrained Class 50 720/59.94p,29.97p, and 23.98p Coding
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCHigh10IntraRP2027ConstrainedClass507205994pCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x32, 0x21, 0x08];
    /// <summary>
    /// H.264/MPEG-4 AVC High 10 Intra Unconstrained Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC High 10 Intra Unconstrained Coding
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCHigh10IntraUnconstrainedCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x32, 0x20, 0x01];
    /// <summary>
    /// H.264/MPEG-4 AVC High 10 Profile
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC High 10 Profile
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCHigh10Profile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x31, 0x50, 0x00];
    /// <summary>
    /// H.264/MPEG-4 AVC High 10 Profile Unconstrained Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC High 10 Profile Unconstrained Coding. Note: Profile compliant coding with no additional constraints
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCHigh10ProfileUnconstrainedCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x31, 0x50, 0x01];
    /// <summary>
    /// H.264/MPEG-4 AVC High 422 Intra Profile
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC High 422 Intra Profile
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCHigh422IntraProfile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x32, 0x30, 0x00];
    /// <summary>
    /// H.264/MPEG-4 AVC High 422 Intra Profile Unconstrained Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC High 422 Intra Profile Unconstrained Coding
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCHigh422IntraProfileUnconstrainedCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x32, 0x30, 0x01];
    /// <summary>
    /// H.264/MPEG-4 AVC High 422 Intra RP2027 Constrained Class 100
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC High 422 Intra RP2027 Constrained Class 100
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCHigh422IntraRP2027ConstrainedClass100 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x32, 0x31, 0x00];
    /// <summary>
    /// H.264/MPEG-4 AVC High 422 Intra RP2027 Constrained Class 100 1080/25p Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC High 422 Intra RP2027 Constrained Class 100 1080/25p and 50p Coding
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCHigh422IntraRP2027ConstrainedClass100108025pCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x32, 0x31, 0x04];
    /// <summary>
    /// H.264/MPEG-4 AVC High 422 Intra RP2027 Constrained Class 100 1080/29.97p Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC High 422 Intra RP2027 Constrained Class 100 1080/29.97p,59.94p,and 23.98p Coding
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCHigh422IntraRP2027ConstrainedClass10010802997pCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x32, 0x31, 0x03];
    /// <summary>
    /// H.264/MPEG-4 AVC High 422 Intra RP2027 Constrained Class 100 1080/50i Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC High 422 Intra RP2027 Constrained Class 100 1080/50i Coding
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCHigh422IntraRP2027ConstrainedClass100108050iCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x32, 0x31, 0x02];
    /// <summary>
    /// H.264/MPEG-4 AVC High 422 Intra RP2027 Constrained Class 100 1080/59.94i Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC High 422 Intra RP2027 Constrained Class 100 1080/59.94i Coding
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCHigh422IntraRP2027ConstrainedClass10010805994iCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x32, 0x31, 0x01];
    /// <summary>
    /// H.264/MPEG-4 AVC High 422 Intra RP2027 Constrained Class 100 720/50p Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC High 422 Intra RP2027 Constrained Class 100 720/50p and 25p Coding
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCHigh422IntraRP2027ConstrainedClass10072050pCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x32, 0x31, 0x09];
    /// <summary>
    /// H.264/MPEG-4 AVC High 422 Intra RP2027 Constrained Class 100 720/59.94p Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC High 422 Intra RP2027 Constrained Class 100 720/59.94p,29.97p,and 23.98p Coding
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCHigh422IntraRP2027ConstrainedClass1007205994pCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x32, 0x31, 0x08];
    /// <summary>
    /// H.264/MPEG-4 AVC High 422 Intra RP2027 Constrained Class 200
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC High 422 Intra RP2027 Constrained Class 200
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCHigh422IntraRP2027ConstrainedClass200 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x32, 0x32, 0x00];
    /// <summary>
    /// H.264/MPEG-4 AVC High 422 Intra RP2027 Constrained Class 200 1080/25p Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC High 422 Intra RP2027 Constrained Class 200 1080/25p and 50p Coding
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCHigh422IntraRP2027ConstrainedClass200108025pCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x32, 0x32, 0x04];
    /// <summary>
    /// H.264/MPEG-4 AVC High 422 Intra RP2027 Constrained Class 200 1080/29.97p Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC High 422 Intra RP2027 Constrained Class 200 1080/29.97p,59.94p,and 23.98p Coding
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCHigh422IntraRP2027ConstrainedClass20010802997pCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x32, 0x32, 0x03];
    /// <summary>
    /// H.264/MPEG-4 AVC High 422 Intra RP2027 Constrained Class 200 1080/50i Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC High 422 Intra RP2027 Constrained Class 200 1080/50i Coding
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCHigh422IntraRP2027ConstrainedClass200108050iCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x32, 0x32, 0x02];
    /// <summary>
    /// H.264/MPEG-4 AVC High 422 Intra RP2027 Constrained Class 200 1080/59.94i Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC High 422 Intra RP2027 Constrained Class 200 1080/59.94i Coding
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCHigh422IntraRP2027ConstrainedClass20010805994iCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x32, 0x32, 0x01];
    /// <summary>
    /// H.264/MPEG-4 AVC High 422 Intra RP2027 Constrained Class 200 720/50p Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC High 422 Intra RP2027 Constrained Class 200 720/50p and 25p Coding
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCHigh422IntraRP2027ConstrainedClass20072050pCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x32, 0x32, 0x09];
    /// <summary>
    /// H.264/MPEG-4 AVC High 422 Intra RP2027 Constrained Class 200 720/59.94p Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC High 422 Intra RP2027 Constrained Class 200 720/59.94p,29.97p,and 23.98p Coding
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCHigh422IntraRP2027ConstrainedClass2007205994pCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x32, 0x32, 0x08];
    /// <summary>
    /// H.264/MPEG-4 AVC High 422 Profile
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC High 422 Profile
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCHigh422Profile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x31, 0x60, 0x00];
    /// <summary>
    /// H.264/MPEG-4 AVC High 422 Profile Unconstrained Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC High 422 Profile Unconstrained Coding. Note: Profile compliant coding with no additional constraints
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCHigh422ProfileUnconstrainedCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x31, 0x60, 0x01];
    /// <summary>
    /// H.264/MPEG-4 AVC High 444 Intra Profile
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC High 444 Intra Profile
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCHigh444IntraProfile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x32, 0x40, 0x00];
    /// <summary>
    /// H.264/MPEG-4 AVC High 444 Intra Profile Unconstrained Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC High 444 Intra Profile Unconstrained Coding. Note: Profile compliant coding with no additional constraints
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCHigh444IntraProfileUnconstrainedCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x32, 0x40, 0x01];
    /// <summary>
    /// H.264/MPEG-4 AVC High 444 Predictive Profile
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC High 444 Predictive Profile
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCHigh444PredictiveProfile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x31, 0x70, 0x00];
    /// <summary>
    /// H.264/MPEG-4 AVC High 444 Predictive Profile Unconstrained Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC High 444 Predictive Profile Unconstrained Coding. Note: Profile compliant coding with no additional constraints
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCHigh444PredictiveProfileUnconstrainedCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x31, 0x70, 0x01];
    /// <summary>
    /// H.264/MPEG-4 AVC High Profile
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC High Profile
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCHighProfile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x31, 0x40, 0x00];
    /// <summary>
    /// H.264/MPEG-4 AVC High Profile Unconstrained Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC High Profile Unconstrained Coding. Note: Profile compliant coding with no additional constraints
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCHighProfileUnconstrainedCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x31, 0x40, 0x01];
    /// <summary>
    /// H.264/MPEG-4 AVC Intra Profiles
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC Intra Profiles
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCIntraProfiles = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x32, 0x00, 0x00];
    /// <summary>
    /// H.264/MPEG-4 AVC Main Profile
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC Main Profile
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCMainProfile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x31, 0x20, 0x00];
    /// <summary>
    /// H.264/MPEG-4 AVC Main Profile Unconstrained Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC Main Profile Unconstrained Coding. Note: Profile compliant coding with no additional constraints
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCMainProfileUnconstrainedCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x31, 0x20, 0x01];
    /// <summary>
    /// H.264/MPEG-4 AVC Predictive Profiles
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC Predictive Profiles
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCPredictiveProfiles = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x31, 0x00, 0x00];
    /// <summary>
    /// H.264/MPEG-4 AVC Video
    /// </summary>
    /// <remarks>
    /// Identifies H.264/MPEG-4 AVC Video
    /// </remarks>
    private static readonly byte[] H264MPEG4AVCVideo = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x30, 0x00, 0x00];
    /// <summary>
    /// H.265/HEVC Main 10 Intra Profile
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main 10 Intra Profile
    /// </remarks>
    private static readonly byte[] H265HEVCMain10IntraProfile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x44, 0x20, 0x00];
    /// <summary>
    /// H.265/HEVC Main 10 Intra Profile Unconstrained Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main 10 Intra Profile Unconstrained Coding
    /// </remarks>
    private static readonly byte[] H265HEVCMain10IntraProfileUnconstrainedCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x44, 0x20, 0x01];
    /// <summary>
    /// H.265/HEVC Main 10 Profile
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main 10 Profile
    /// </remarks>
    private static readonly byte[] H265HEVCMain10Profile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x41, 0x20, 0x00];
    /// <summary>
    /// H.265/HEVC Main 10 Profile Unconstrained Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main 10 Profile Unconstrained Coding
    /// </remarks>
    private static readonly byte[] H265HEVCMain10ProfileUnconstrainedCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x41, 0x20, 0x01];
    /// <summary>
    /// H.265/HEVC Main 12 Intra Profile
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main 12 Intra Profile
    /// </remarks>
    private static readonly byte[] H265HEVCMain12IntraProfile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x44, 0x30, 0x00];
    /// <summary>
    /// H.265/HEVC Main 12 Intra Profile Unconstrained Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main 12 Intra Profile Unconstrained Coding
    /// </remarks>
    private static readonly byte[] H265HEVCMain12IntraProfileUnconstrainedCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x44, 0x30, 0x01];
    /// <summary>
    /// H.265/HEVC Main 12 Profile
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main 12 Profile
    /// </remarks>
    private static readonly byte[] H265HEVCMain12Profile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x41, 0x30, 0x00];
    /// <summary>
    /// H.265/HEVC Main 12 Profile Unconstrained Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main 12 Profile Unconstrained Coding
    /// </remarks>
    private static readonly byte[] H265HEVCMain12ProfileUnconstrainedCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x41, 0x30, 0x01];
    /// <summary>
    /// H.265/HEVC Main 4:2:2 10 Intra Profile
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main 4:2:2 10 Intra Profile
    /// </remarks>
    private static readonly byte[] H265HEVCMain42210IntraProfile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x45, 0x20, 0x00];
    /// <summary>
    /// H.265/HEVC Main 4:2:2 10 Intra Profile Unconstrained Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main 4:2:2 10 Intra Profile Unconstrained Coding
    /// </remarks>
    private static readonly byte[] H265HEVCMain42210IntraProfileUnconstrainedCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x45, 0x20, 0x01];
    /// <summary>
    /// H.265/HEVC Main 4:2:2 10 Profile
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main 4:2:2 10 Profile
    /// </remarks>
    private static readonly byte[] H265HEVCMain42210Profile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x42, 0x20, 0x00];
    /// <summary>
    /// H.265/HEVC Main 4:2:2 10 Profile Unconstrained Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main 4:2:2 10 Profile Unconstrained Coding
    /// </remarks>
    private static readonly byte[] H265HEVCMain42210ProfileUnconstrainedCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x42, 0x20, 0x01];
    /// <summary>
    /// H.265/HEVC Main 4:2:2 12 Intra Profile
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main 4:2:2 12 Intra Profile
    /// </remarks>
    private static readonly byte[] H265HEVCMain42212IntraProfile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x45, 0x30, 0x00];
    /// <summary>
    /// H.265/HEVC Main 4:2:2 12 Intra Profile Unconstrained Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main 4:2:2 12 Intra Profile Unconstrained Coding
    /// </remarks>
    private static readonly byte[] H265HEVCMain42212IntraProfileUnconstrainedCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x45, 0x30, 0x01];
    /// <summary>
    /// H.265/HEVC Main 4:2:2 12 Profile
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main 4:2:2 12 Profile
    /// </remarks>
    private static readonly byte[] H265HEVCMain42212Profile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x42, 0x30, 0x00];
    /// <summary>
    /// H.265/HEVC Main 4:2:2 12 Profile Unconstrained Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main 4:2:2 12 Profile Unconstrained Coding
    /// </remarks>
    private static readonly byte[] H265HEVCMain42212ProfileUnconstrainedCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x42, 0x30, 0x01];
    /// <summary>
    /// H.265/HEVC Main 4:2:2 Intra Profiles
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main 4:2:2 Intra Profiles
    /// </remarks>
    private static readonly byte[] H265HEVCMain422IntraProfiles = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x45, 0x00, 0x00];
    /// <summary>
    /// H.265/HEVC Main 4:2:2 Profiles
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main 4:2:2 Profiles
    /// </remarks>
    private static readonly byte[] H265HEVCMain422Profiles = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x42, 0x00, 0x00];
    /// <summary>
    /// H.265/HEVC Main 4:4:4 10 Intra Profile
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main 4:4:4 10 Intra Profile
    /// </remarks>
    private static readonly byte[] H265HEVCMain44410IntraProfile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x46, 0x20, 0x00];
    /// <summary>
    /// H.265/HEVC Main 4:4:4 10 Intra Profile Unconstrained Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main 4:4:4 10 Intra Profile Unconstrained Coding
    /// </remarks>
    private static readonly byte[] H265HEVCMain44410IntraProfileUnconstrainedCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x46, 0x20, 0x01];
    /// <summary>
    /// H.265/HEVC Main 4:4:4 10 Profile
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main 4:4:4 10 Profile
    /// </remarks>
    private static readonly byte[] H265HEVCMain44410Profile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x43, 0x20, 0x00];
    /// <summary>
    /// H.265/HEVC Main 4:4:4 10 Profile Unconstrained Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main 4:4:4 10 Profile Unconstrained Coding
    /// </remarks>
    private static readonly byte[] H265HEVCMain44410ProfileUnconstrainedCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x43, 0x20, 0x01];
    /// <summary>
    /// H.265/HEVC Main 4:4:4 12 Intra Profile
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main 4:4:4 12 Intra Profile
    /// </remarks>
    private static readonly byte[] H265HEVCMain44412IntraProfile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x46, 0x30, 0x00];
    /// <summary>
    /// H.265/HEVC Main 4:4:4 12 Intra Profile Unconstrained Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main 4:4:4 12 Intra Profile Unconstrained Coding
    /// </remarks>
    private static readonly byte[] H265HEVCMain44412IntraProfileUnconstrainedCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x46, 0x30, 0x01];
    /// <summary>
    /// H.265/HEVC Main 4:4:4 12 Profile
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main 4:4:4 12 Profile
    /// </remarks>
    private static readonly byte[] H265HEVCMain44412Profile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x43, 0x30, 0x00];
    /// <summary>
    /// H.265/HEVC Main 4:4:4 12 Profile Unconstrained Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main 4:4:4 12 Profile Unconstrained Coding
    /// </remarks>
    private static readonly byte[] H265HEVCMain44412ProfileUnconstrainedCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x43, 0x30, 0x01];
    /// <summary>
    /// H.265/HEVC Main 4:4:4 16 Intra Profile
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main 4:4:4 16 Intra Profile
    /// </remarks>
    private static readonly byte[] H265HEVCMain44416IntraProfile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x46, 0x50, 0x00];
    /// <summary>
    /// H.265/HEVC Main 4:4:4 16 Intra Profile Unconstrained Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main 4:4:4 16 Intra Profile Unconstrained Coding
    /// </remarks>
    private static readonly byte[] H265HEVCMain44416IntraProfileUnconstrainedCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x46, 0x50, 0x01];
    /// <summary>
    /// H.265/HEVC Main 4:4:4 Intra Profile
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main 4:4:4 Intra Profile
    /// </remarks>
    private static readonly byte[] H265HEVCMain444IntraProfile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x46, 0x10, 0x00];
    /// <summary>
    /// H.265/HEVC Main 4:4:4 Intra Profiles
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main 4:4:4 Intra Profiles
    /// </remarks>
    private static readonly byte[] H265HEVCMain444IntraProfiles = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x46, 0x00, 0x00];
    /// <summary>
    /// H.265/HEVC Main 4:4:4 Intra Profile Unconstrained Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main 4:4:4 Intra Profile Unconstrained Coding
    /// </remarks>
    private static readonly byte[] H265HEVCMain444IntraProfileUnconstrainedCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x46, 0x10, 0x01];
    /// <summary>
    /// H.265/HEVC Main 4:4:4 Profile
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main 4:4:4 Profile
    /// </remarks>
    private static readonly byte[] H265HEVCMain444Profile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x43, 0x10, 0x00];
    /// <summary>
    /// H.265/HEVC Main 4:4:4 Profiles
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main 4:4:4 Profiles
    /// </remarks>
    private static readonly byte[] H265HEVCMain444Profiles = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x43, 0x00, 0x00];
    /// <summary>
    /// H.265/HEVC Main 4:4:4 Profile Unconstrained Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main 4:4:4 Profile Unconstrained Coding
    /// </remarks>
    private static readonly byte[] H265HEVCMain444ProfileUnconstrainedCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x43, 0x10, 0x01];
    /// <summary>
    /// H.265/HEVC Main Intra Profile
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main Intra Profile
    /// </remarks>
    private static readonly byte[] H265HEVCMainIntraProfile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x44, 0x10, 0x00];
    /// <summary>
    /// H.265/HEVC Main Intra Profiles
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main Intra Profiles
    /// </remarks>
    private static readonly byte[] H265HEVCMainIntraProfiles = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x44, 0x00, 0x00];
    /// <summary>
    /// H.265/HEVC Main Intra Profile Unconstrained Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main Intra Profile Unconstrained Coding
    /// </remarks>
    private static readonly byte[] H265HEVCMainIntraProfileUnconstrainedCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x44, 0x10, 0x01];
    /// <summary>
    /// H.265/HEVC Main Profile
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main Profile
    /// </remarks>
    private static readonly byte[] H265HEVCMainProfile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x41, 0x10, 0x00];
    /// <summary>
    /// H.265/HEVC Main Profiles
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main Profiles
    /// </remarks>
    private static readonly byte[] H265HEVCMainProfiles = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x41, 0x00, 0x00];
    /// <summary>
    /// H.265/HEVC Main Profile Unconstrained Coding
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Main Profile Unconstrained Coding
    /// </remarks>
    private static readonly byte[] H265HEVCMainProfileUnconstrainedCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x41, 0x10, 0x01];
    /// <summary>
    /// H.265/HEVC Video
    /// </summary>
    /// <remarks>
    /// Identifies H.265/HEVC Video
    /// </remarks>
    private static readonly byte[] H265HEVCVideo = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x01, 0x40, 0x00, 0x00];
    /// <summary>
    /// Harris Corporation
    /// </summary>
    /// <remarks>
    /// Metadata registered by Harris Corporation for private use
    /// </remarks>
    private static readonly byte[] HarrisCorporation = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0C, 0x0E, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// HBO
    /// </summary>
    /// <remarks>
    /// Metadata registered by Home Box Office, Inc. for private use
    /// </remarks>
    private static readonly byte[] HBO = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0E, 0x1B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// HDR Reference Viewing Environment
    /// </summary>
    /// <remarks>
    /// Reference Viewing Environment for Evaluation of HDR Images, as defined in ITU-R BT.2100-1
    /// </remarks>
    private static readonly byte[] HDRReferenceViewingEnvironment = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x10, 0x01, 0x01, 0x01, 0x03, 0x00, 0x00];
    /// <summary>
    /// HDTV Reference Viewing Environment
    /// </summary>
    /// <remarks>
    /// Reference Viewing Environment for Evaluation of HDTV Images, as defined in SMPTE ST 2080-3
    /// </remarks>
    private static readonly byte[] HDTVReferenceViewingEnvironment = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x10, 0x01, 0x01, 0x01, 0x02, 0x00, 0x00];
    /// <summary>
    /// Headphone Element Description
    /// </summary>
    /// <remarks>
    /// Headphone Element Description
    /// </remarks>
    private static readonly byte[] HeadphoneElementDescription = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x04, 0x02, 0x11, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Hearing Impaired Audio Channel
    /// </summary>
    /// <remarks>
    /// A dedicated audio channel optimizing dialog intelligibility for the hearing impaired. This may carry a special dialog centric mix, i.e. a mix in which the dialog is predominate and dynamic range compression may be employed.
    /// </remarks>
    private static readonly byte[] HearingImpairedAudioChannel = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x0E, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// HMAC-SHA1 128
    /// </summary>
    /// <remarks>
    /// Identifies the HMAC-SHA1 128 bit data integrity check value
    /// </remarks>
    private static readonly byte[] HMACSHA1128 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x02, 0x09, 0x02, 0x02, 0x02, 0x00, 0x00, 0x00];
    /// <summary>
    /// HMAC-SHA1 128-bit Identifier
    /// </summary>
    /// <remarks>
    /// Identifies the HMAC-SHA1 128-bit data integrity check value
    /// </remarks>
    private static readonly byte[] HMACSHA1128BitIdentifier = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x07, 0x02, 0x09, 0x02, 0x02, 0x01, 0x00, 0x00, 0x00];
    /// <summary>
    /// High-Throughput JPEG 2000 Picture Coding Scheme
    /// </summary>
    /// <remarks>
    /// Identifies High-Throughput JPEG 2000 (HTJ2K) codestreams
    /// </remarks>
    private static readonly byte[] HTJ2KPictureCodingScheme = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x08, 0x00];
    /// <summary>
    /// Generic HTJ2K codestream
    /// </summary>
    /// <remarks>
    /// High-Throughput JPEG 2000 (HTJ2K) codestreams with no indicated application coding constraints
    /// </remarks>
    private static readonly byte[] HTJ2KPictureCodingSchemeGeneric = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x08, 0x01];
    /// <summary>
    /// IAB Soundfield
    /// </summary>
    /// <remarks>
    /// Identifies an IAB Soundfield
    /// </remarks>
    private static readonly byte[] IABSoundfield = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x02, 0x21, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// IdeasUnlimited.TV
    /// </summary>
    /// <remarks>
    /// Metadata registered by IdeasUnlimited.TV for private use
    /// </remarks>
    private static readonly byte[] IdeasUnlimitedTV = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x04, 0x0E, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// IDENTIFICATION AND LOCATION
    /// </summary>
    /// <remarks>
    /// SMPTE Label Identifiers for Identification and Location data
    /// </remarks>
    private static readonly byte[] IDENTIFICATIONANDLOCATION = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Identity And Timing
    /// </summary>
    /// <remarks>
    /// Identity And Timing
    /// </remarks>
    private static readonly byte[] IdentityAndTiming = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x04, 0x02, 0x0E, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// IEC-61834 Part-2 Video Compression
    /// </summary>
    /// <remarks>
    /// Identifies IEC DV Part-2 Video Compression family
    /// </remarks>
    private static readonly byte[] IEC61834Part2VideoCompression = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x02, 0x02, 0x01, 0x00, 0x00];
    /// <summary>
    /// IEC-DV Video 25Mbps 525x60I
    /// </summary>
    /// <remarks>
    /// Identifies IEC-DV compressed to 25Mbps for a 525x60I source
    /// </remarks>
    private static readonly byte[] IECDVVideo25Mbps525x60I = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x02, 0x02, 0x01, 0x01, 0x00];
    /// <summary>
    /// IEC-DV Video 25Mbps 525x60I SMPTE-305M Type-41h
    /// </summary>
    /// <remarks>
    /// Identifies IEC-DV compressed to 25Mbps for a 525x60I source as defined by SMPTE-305M
    /// </remarks>
    private static readonly byte[] IECDVVideo25Mbps525x60ISMPTE305MType41h = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x02, 0x02, 0x01, 0x03, 0x00];
    /// <summary>
    /// IEC-DV Video 25Mbps 625x50I
    /// </summary>
    /// <remarks>
    /// Identifies IEC-DV compressed to 25Mbps for a 625x50I source
    /// </remarks>
    private static readonly byte[] IECDVVideo25Mbps625x50I = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x02, 0x02, 0x01, 0x02, 0x00];
    /// <summary>
    /// IEC-DV Video 25Mbps 625x50I SMPTE-305M Type-41h
    /// </summary>
    /// <remarks>
    /// Identifies IEC-DV compressed to 25Mbps for a 625x50I source as defined by SMPTE-305M
    /// </remarks>
    private static readonly byte[] IECDVVideo25Mbps625x50ISMPTE305MType41h = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x02, 0x02, 0x01, 0x04, 0x00];
    /// <summary>
    /// IMF Clip-Wrapped IAB Essence Container
    /// </summary>
    /// <remarks>
    /// Identifier of IAB Essence Clip-Wrapped Container
    /// </remarks>
    private static readonly byte[] IMF_IABEssenceClipWrappedContainer = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1D, 0x01, 0x01];
    /// <summary>
    /// IMF IAB Track File Level 0
    /// </summary>
    /// <remarks>
    /// Identifier for MXF track files compliant with ST 2067-201
    /// </remarks>
    private static readonly byte[] IMF_IABTrackFileLevel0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x01, 0x01, 0x02, 0x01, 0x02, 0x00, 0x00, 0x00];
    /// <summary>
    /// Immersive Audio Coding
    /// </summary>
    /// <remarks>
    /// Identifies Immersive Audio Coding per ST 2098-2
    /// </remarks>
    private static readonly byte[] ImmersiveAudioCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x05, 0x0E, 0x09, 0x06, 0x04, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Individual Picture Coding Schemes
    /// </summary>
    /// <remarks>
    /// Identifies Individual Picture Coding Schemes
    /// </remarks>
    private static readonly byte[] IndividualPictureCodingSchemes = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x07, 0x04, 0x01, 0x02, 0x02, 0x03, 0x00, 0x00, 0x00];
    /// <summary>
    /// INTERPRETIVE
    /// </summary>
    /// <remarks>
    /// SMPTE Label identifiers for Interpretive Data
    /// Namespace: http://www.smpte-ra.org/reg/400/2012
    /// </remarks>
    private static readonly byte[] INTERPRETIVE_1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Interpretive
    /// </summary>
    /// <remarks>
    /// Identifiers for Interpretive Data
    /// Namespace: http://www.smpte-ra.org/reg/400/2012/13/15
    /// </remarks>
    private static readonly byte[] INTERPRETIVE_15 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x0F, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Picture Essence
    /// </summary>
    /// <remarks>
    /// SMPTE Label identifiers for Picture Essence interpretive data
    /// </remarks>
    private static readonly byte[] InterpretivePictureEssence = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Sound Essence
    /// </summary>
    /// <remarks>
    /// SMPTE Label identifiers for Sound Essence interpretive data
    /// Namespace: http://www.smpte-ra.org/reg/400/2012
    /// </remarks>
    private static readonly byte[] InterpretiveSoundEssence_1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Sound Essence
    /// </summary>
    /// <remarks>
    /// SMPTE Label identifiers for Sound Essence interpretive data
    /// Namespace: http://www.smpte-ra.org/reg/400/2012/13/1/amwa/rules
    /// </remarks>
    private static readonly byte[] InterpretiveSoundEssence_rules = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x01, 0x00, 0x00, 0x00];
    /// <summary>
    /// Sound Essence
    /// </summary>
    /// <remarks>
    /// Identifiers for Sound Essence Interpretive Data
    /// Namespace: http://www.smpte-ra.org/reg/400/2012/13/15
    /// </remarks>
    private static readonly byte[] InterpretiveSoundEssence_15 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x0F, 0x03, 0x02, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// IPV Ltd
    /// </summary>
    /// <remarks>
    /// Metadata registered by IPV Ltd for private use
    /// </remarks>
    private static readonly byte[] IPVLtd = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x04, 0x0E, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Iris Priority Auto Exposure
    /// </summary>
    /// <remarks>
    /// Identifies Iris Priority Auto Exposure
    /// </remarks>
    private static readonly byte[] IrisPriorityAutoExposure = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x05, 0x10, 0x01, 0x01, 0x01, 0x04, 0x00, 0x00];
    /// <summary>
    /// IRT
    /// </summary>
    /// <remarks>
    /// Metadata registered by the Institut für Rundfunktechnik GmbH for public use
    /// </remarks>
    private static readonly byte[] IRT = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x06, 0x0D, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Inter-Society Digital Cinema Forum
    /// </summary>
    /// <remarks>
    /// Metadata registered by Inter-Society Digital Cinema Forum for public use
    /// </remarks>
    private static readonly byte[] ISDCF = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// ISO/IEC 15444-1 JPEG 2002
    /// </summary>
    /// <remarks>
    /// Identifies JPEG 2000, ISO/IEC 15444-1:2002
    /// </remarks>
    private static readonly byte[] ISOIEC154441JPEG2002 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x07, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x01, 0x00];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (ISO/IEC 15444-1:2004 AMD8)
    /// </summary>
    /// <remarks>
    /// Levels and sublevels of the 2K IMF Single/Multi-Tile Reversible Profile  defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x00];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 0 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 0 Sublevel 0 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M0S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x01];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 10 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 0 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M10S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x29];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 10 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 1 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M10S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x2A];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 10 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 2 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M10S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x2B];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 10 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 3 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M10S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x2C];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 10 Sublevel 4)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 4 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M10S4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x2D];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 10 Sublevel 5)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 5 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M10S5 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x2E];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 10 Sublevel 6)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 6 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M10S6 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x2F];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 10 Sublevel 7)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 7 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M10S7 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x30];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 10 Sublevel 8)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 8 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M10S8 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x31];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 11 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 0 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M11S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x32];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 11 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 1 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M11S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x33];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 11 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 2 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M11S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x34];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 11 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 3 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M11S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x35];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 11 Sublevel 4)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 4 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M11S4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x36];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 11 Sublevel 5)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 5 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M11S5 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x37];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 11 Sublevel 6)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 6 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M11S6 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x38];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 11 Sublevel 7)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 7 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M11S7 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x39];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 11 Sublevel 8)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 8 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M11S8 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x3A];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 11 Sublevel 9)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 9 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M11S9 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x3B];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 1 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 1 Sublevel 0 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M1S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x02];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 1 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 1 Sublevel 1 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M1S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x03];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 2 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 2 Sublevel 0 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M2S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x04];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 2 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 2 Sublevel 1 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M2S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x05];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 3 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 3 Sublevel 0 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M3S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x06];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 3 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 3 Sublevel 1 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M3S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x07];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 4 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 4 Sublevel 0 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M4S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x08];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 4 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 4 Sublevel 1 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M4S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x09];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 4 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 4 Sublevel 2 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M4S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x0A];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 5 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 5 Sublevel 0 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M5S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x0B];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 5 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 5 Sublevel 1 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M5S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x0C];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 5 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 5 Sublevel 2 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M5S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x0D];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 5 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 5 Sublevel 3 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M5S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x0E];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 6 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 6 Sublevel 0 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M6S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x0F];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 6 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 6 Sublevel 1 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M6S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x10];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 6 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 6 Sublevel 2 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M6S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x11];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 6 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 6 Sublevel 3 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M6S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x12];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 6 Sublevel 4)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 6 Sublevel 4 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M6S4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x13];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 7 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 7 Sublevel 0 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M7S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x14];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 7 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 7 Sublevel 1 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M7S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x15];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 7 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 7 Sublevel 2 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M7S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x16];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 7 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 7 Sublevel 3 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M7S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x17];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 7 Sublevel 4)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 7 Sublevel 4 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M7S4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x18];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 7 Sublevel 5)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 7 Sublevel 5 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M7S5 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x19];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 8 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 0 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M8S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x1A];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 8 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 1 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M8S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x1B];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 8 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 2 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M8S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x1C];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 8 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 3 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M8S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x1D];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 8 Sublevel 4)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 4 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M8S4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x1E];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 8 Sublevel 5)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 5 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M8S5 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x1F];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 8 Sublevel 6)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 6 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M8S6 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x20];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 9 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 0 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M9S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x21];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 9 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 1 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M9S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x22];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 9 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 2 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M9S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x23];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 9 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 3 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M9S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x24];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 9 Sublevel 4)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 4 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M9S4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x25];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 9 Sublevel 5)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 5 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M9S5 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x26];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 9 Sublevel 6)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 6 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M9S6 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x27];
    /// <summary>
    /// 2K IMF Single/Multi-Tile Reversible Profile (Mainlevel 9 Sublevel 7)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 7 of the 2K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleMultiTileReversibleProfile_M9S7 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x05, 0x28];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (ISO/IEC 15444-1:2004 AMD8)
    /// </summary>
    /// <remarks>
    /// Levels and sublevels of the 2K IMF Single Tile Lossy Profile  defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x00];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 0 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 0 Sublevel 0 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M0S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x01];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 10 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 0 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M10S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x29];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 10 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 1 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M10S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x2A];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 10 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 2 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M10S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x2B];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 10 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 3 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M10S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x2C];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 10 Sublevel 4)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 4 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M10S4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x2D];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 10 Sublevel 5)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 5 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M10S5 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x2E];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 10 Sublevel 6)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 6 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M10S6 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x2F];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 10 Sublevel 7)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 7 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M10S7 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x30];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 10 Sublevel 8)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 8 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M10S8 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x31];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 11 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 0 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M11S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x32];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 11 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 1 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M11S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x33];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 11 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 2 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M11S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x34];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 11 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 3 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M11S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x35];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 11 Sublevel 4)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 4 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M11S4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x36];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 11 Sublevel 5)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 5 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M11S5 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x37];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 11 Sublevel 6)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 6 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M11S6 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x38];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 11 Sublevel 7)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 7 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M11S7 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x39];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 11 Sublevel 8)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 8 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M11S8 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x3A];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 11 Sublevel 9)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 9 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M11S9 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x3B];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 1 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 1 Sublevel 0 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M1S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x02];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 1 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 1 Sublevel 1 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M1S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x03];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 2 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 2 Sublevel 0 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M2S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x04];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 2 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 2 Sublevel 1 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M2S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x05];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 3 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 3 Sublevel 0 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M3S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x06];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 3 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 3 Sublevel 1 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M3S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x07];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 4 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 4 Sublevel 0 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M4S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x08];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 4 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 4 Sublevel 1 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M4S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x09];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 4 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 4 Sublevel 2 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M4S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x0A];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 5 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 5 Sublevel 0 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M5S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x0B];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 5 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 5 Sublevel 1 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M5S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x0C];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 5 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 5 Sublevel 2 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M5S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x0D];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 5 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 5 Sublevel 3 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M5S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x0E];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 6 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 6 Sublevel 0 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M6S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x0F];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 6 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 6 Sublevel 1 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M6S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x10];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 6 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 6 Sublevel 2 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M6S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x11];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 6 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 6 Sublevel 3 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M6S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x12];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 6 Sublevel 4)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 6 Sublevel 4 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M6S4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x13];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 7 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 7 Sublevel 0 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M7S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x14];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 7 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 7 Sublevel 1 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M7S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x15];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 7 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 7 Sublevel 2 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M7S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x16];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 7 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 7 Sublevel 3 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M7S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x17];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 7 Sublevel 4)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 7 Sublevel 4 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M7S4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x18];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 7 Sublevel 5)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 7 Sublevel 5 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M7S5 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x19];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 8 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 0 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M8S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x1A];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 8 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 1 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M8S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x1B];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 8 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 2 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M8S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x1C];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 8 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 3 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M8S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x1D];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 8 Sublevel 4)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 4 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M8S4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x1E];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 8 Sublevel 5)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 5 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M8S5 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x1F];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 8 Sublevel 6)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 6 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M8S6 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x20];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 9 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 0 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M9S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x21];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 9 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 1 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M9S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x22];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 9 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 2 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M9S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x23];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 9 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 3 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M9S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x24];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 9 Sublevel 4)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 4 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M9S4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x25];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 9 Sublevel 5)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 5 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M9S5 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x26];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 9 Sublevel 6)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 6 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M9S6 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x27];
    /// <summary>
    /// 2K IMF Single Tile Lossy Profile (Mainlevel 9 Sublevel 7)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 7 of the 2K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_2KIMF_SingleTileLossyProfile_M9S7 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x02, 0x28];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (ISO/IEC 15444-1:2004 AMD8)
    /// </summary>
    /// <remarks>
    /// Levels and sublevels of the 4K IMF Single/Multi-Tile Reversible Profile  defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x00];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 0 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 0 Sublevel 0 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M0S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x01];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 10 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 0 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M10S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x29];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 10 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 1 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M10S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x2A];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 10 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 2 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M10S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x2B];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 10 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 3 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M10S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x2C];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 10 Sublevel 4)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 4 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M10S4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x2D];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 10 Sublevel 5)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 5 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M10S5 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x2E];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 10 Sublevel 6)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 6 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M10S6 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x2F];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 10 Sublevel 7)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 7 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M10S7 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x30];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 10 Sublevel 8)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 8 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M10S8 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x31];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 11 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 0 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M11S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x32];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 11 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 1 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M11S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x33];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 11 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 2 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M11S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x34];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 11 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 3 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M11S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x35];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 11 Sublevel 4)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 4 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M11S4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x36];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 11 Sublevel 5)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 5 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M11S5 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x37];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 11 Sublevel 6)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 6 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M11S6 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x38];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 11 Sublevel 7)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 7 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M11S7 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x39];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 11 Sublevel 8)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 8 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M11S8 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x3A];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 11 Sublevel 9)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 9 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M11S9 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x3B];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 1 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 1 Sublevel 0 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M1S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x02];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 1 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 1 Sublevel 1 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M1S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x03];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 2 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 2 Sublevel 0 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M2S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x04];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 2 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 2 Sublevel 1 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M2S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x05];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 3 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 3 Sublevel 0 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M3S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x06];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 3 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 3 Sublevel 1 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M3S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x07];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 4 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 4 Sublevel 0 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M4S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x08];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 4 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 4 Sublevel 1 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M4S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x09];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 4 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 4 Sublevel 2 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M4S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x0A];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 5 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 5 Sublevel 0 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M5S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x0B];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 5 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 5 Sublevel 1 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M5S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x0C];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 5 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 5 Sublevel 2 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M5S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x0D];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 5 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 5 Sublevel 3 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M5S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x0E];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 6 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 6 Sublevel 0 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M6S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x0F];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 6 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 6 Sublevel 1 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M6S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x10];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 6 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 6 Sublevel 2 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M6S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x11];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 6 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 6 Sublevel 3 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M6S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x12];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 6 Sublevel 4)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 6 Sublevel 4 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M6S4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x13];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 7 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 7 Sublevel 0 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M7S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x14];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 7 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 7 Sublevel 1 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M7S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x15];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 7 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 7 Sublevel 2 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M7S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x16];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 7 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 7 Sublevel 3 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M7S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x17];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 7 Sublevel 4)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 7 Sublevel 4 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M7S4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x18];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 7 Sublevel 5)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 7 Sublevel 5 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M7S5 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x19];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 8 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 0 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M8S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x1A];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 8 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 1 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M8S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x1B];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 8 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 2 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M8S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x1C];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 8 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 3 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M8S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x1D];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 8 Sublevel 4)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 4 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M8S4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x1E];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 8 Sublevel 5)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 5 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M8S5 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x1F];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 8 Sublevel 6)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 6 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M8S6 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x20];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 9 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 0 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M9S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x21];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 9 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 1 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M9S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x22];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 9 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 2 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M9S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x23];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 9 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 3 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M9S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x24];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 9 Sublevel 4)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 4 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M9S4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x25];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 9 Sublevel 5)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 5 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M9S5 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x26];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 9 Sublevel 6)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 6 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M9S6 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x27];
    /// <summary>
    /// 4K IMF Single/Multi-Tile Reversible Profile (Mainlevel 9 Sublevel 7)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 7 of the 4K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleMultiTileReversibleProfile_M9S7 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x06, 0x28];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (ISO/IEC 15444-1:2004 AMD8)
    /// </summary>
    /// <remarks>
    /// Levels and sublevels of the 4K IMF Single Tile Lossy Profile  defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x00];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 0 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 0 Sublevel 0 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M0S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x01];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 10 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 0 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M10S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x29];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 10 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 1 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M10S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x2A];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 10 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 2 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M10S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x2B];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 10 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 3 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M10S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x2C];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 10 Sublevel 4)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 4 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M10S4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x2D];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 10 Sublevel 5)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 5 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M10S5 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x2E];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 10 Sublevel 6)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 6 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M10S6 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x2F];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 10 Sublevel 7)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 7 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M10S7 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x30];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 10 Sublevel 8)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 8 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M10S8 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x31];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 11 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 0 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M11S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x32];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 11 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 1 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M11S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x33];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 11 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 2 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M11S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x34];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 11 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 3 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M11S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x35];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 11 Sublevel 4)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 4 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M11S4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x36];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 11 Sublevel 5)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 5 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M11S5 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x37];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 11 Sublevel 6)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 6 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M11S6 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x38];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 11 Sublevel 7)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 7 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M11S7 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x39];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 11 Sublevel 8)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 8 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M11S8 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x3A];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 11 Sublevel 9)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 9 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M11S9 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x3B];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 1 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 1 Sublevel 0 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M1S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x02];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 1 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 1 Sublevel 1 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M1S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x03];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 2 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 2 Sublevel 0 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M2S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x04];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 2 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 2 Sublevel 1 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M2S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x05];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 3 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 3 Sublevel 0 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M3S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x06];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 3 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 3 Sublevel 1 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M3S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x07];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 4 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 4 Sublevel 0 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M4S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x08];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 4 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 4 Sublevel 1 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M4S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x09];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 4 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 4 Sublevel 2 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M4S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x0A];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 5 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 5 Sublevel 0 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M5S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x0B];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 5 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 5 Sublevel 1 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M5S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x0C];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 5 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 5 Sublevel 2 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M5S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x0D];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 5 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 5 Sublevel 3 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M5S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x0E];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 6 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 6 Sublevel 0 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M6S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x0F];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 6 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 6 Sublevel 1 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M6S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x10];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 6 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 6 Sublevel 2 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M6S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x11];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 6 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 6 Sublevel 3 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M6S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x12];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 6 Sublevel 4)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 6 Sublevel 4 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M6S4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x13];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 7 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 7 Sublevel 0 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M7S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x14];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 7 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 7 Sublevel 1 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M7S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x15];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 7 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 7 Sublevel 2 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M7S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x16];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 7 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 7 Sublevel 3 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M7S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x17];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 7 Sublevel 4)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 7 Sublevel 4 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M7S4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x18];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 7 Sublevel 5)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 7 Sublevel 5 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M7S5 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x19];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 8 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 0 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M8S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x1A];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 8 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 1 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M8S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x1B];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 8 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 2 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M8S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x1C];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 8 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 3 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M8S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x1D];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 8 Sublevel 4)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 4 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M8S4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x1E];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 8 Sublevel 5)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 5 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M8S5 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x1F];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 8 Sublevel 6)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 6 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M8S6 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x20];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 9 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 0 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M9S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x21];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 9 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 1 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M9S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x22];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 9 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 2 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M9S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x23];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 9 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 3 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M9S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x24];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 9 Sublevel 4)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 4 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M9S4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x25];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 9 Sublevel 5)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 5 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M9S5 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x26];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 9 Sublevel 6)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 6 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M9S6 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x27];
    /// <summary>
    /// 4K IMF Single Tile Lossy Profile (Mainlevel 9 Sublevel 7)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 7 of the 4K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_4KIMF_SingleTileLossyProfile_M9S7 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x03, 0x28];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (ISO/IEC 15444-1:2004 AMD8)
    /// </summary>
    /// <remarks>
    /// Levels and sublevels of the 8K IMF Single/Multi-Tile Reversible Profile  defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x00];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 0 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 0 Sublevel 0 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M0S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x01];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 10 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 0 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M10S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x29];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 10 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 1 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M10S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x2A];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 10 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 2 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M10S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x2B];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 10 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 3 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M10S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x2C];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 10 Sublevel 4)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 4 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M10S4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x2D];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 10 Sublevel 5)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 5 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M10S5 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x2E];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 10 Sublevel 6)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 6 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M10S6 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x2F];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 10 Sublevel 7)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 7 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M10S7 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x30];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 10 Sublevel 8)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 8 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M10S8 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x31];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 11 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 0 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M11S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x32];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 11 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 1 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M11S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x33];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 11 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 2 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M11S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x34];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 11 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 3 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M11S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x35];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 11 Sublevel 4)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 4 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M11S4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x36];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 11 Sublevel 5)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 5 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M11S5 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x37];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 11 Sublevel 6)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 6 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M11S6 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x38];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 11 Sublevel 7)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 7 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M11S7 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x39];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 11 Sublevel 8)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 8 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M11S8 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x3A];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 11 Sublevel 9)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 9 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M11S9 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x3B];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 1 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 1 Sublevel 0 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M1S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x02];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 1 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 1 Sublevel 1 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M1S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x03];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 2 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 2 Sublevel 0 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M2S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x04];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 2 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 2 Sublevel 1 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M2S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x05];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 3 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 3 Sublevel 0 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M3S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x06];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 3 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 3 Sublevel 1 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M3S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x07];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 4 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 4 Sublevel 0 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M4S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x08];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 4 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 4 Sublevel 1 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M4S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x09];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 4 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 4 Sublevel 2 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M4S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x0A];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 5 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 5 Sublevel 0 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M5S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x0B];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 5 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 5 Sublevel 1 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M5S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x0C];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 5 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 5 Sublevel 2 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M5S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x0D];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 5 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 5 Sublevel 3 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M5S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x0E];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 6 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 6 Sublevel 0 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M6S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x0F];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 6 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 6 Sublevel 1 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M6S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x10];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 6 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 6 Sublevel 2 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M6S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x11];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 6 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 6 Sublevel 3 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M6S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x12];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 6 Sublevel 4)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 6 Sublevel 4 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M6S4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x13];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 7 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 7 Sublevel 0 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M7S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x14];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 7 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 7 Sublevel 1 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M7S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x15];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 7 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 7 Sublevel 2 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M7S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x16];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 7 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 7 Sublevel 3 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M7S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x17];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 7 Sublevel 4)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 7 Sublevel 4 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M7S4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x18];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 7 Sublevel 5)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 7 Sublevel 5 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M7S5 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x19];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 8 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 0 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M8S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x1A];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 8 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 1 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M8S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x1B];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 8 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 2 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M8S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x1C];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 8 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 3 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M8S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x1D];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 8 Sublevel 4)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 4 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M8S4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x1E];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 8 Sublevel 5)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 5 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M8S5 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x1F];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 8 Sublevel 6)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 6 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M8S6 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x20];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 9 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 0 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M9S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x21];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 9 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 1 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M9S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x22];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 9 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 2 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M9S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x23];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 9 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 3 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M9S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x24];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 9 Sublevel 4)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 4 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M9S4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x25];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 9 Sublevel 5)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 5 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M9S5 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x26];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 9 Sublevel 6)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 6 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M9S6 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x27];
    /// <summary>
    /// 8K IMF Single/Multi-Tile Reversible Profile (Mainlevel 9 Sublevel 7)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 7 of the 8K IMF Single/Multi-Tile Reversible Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleMultiTileReversibleProfile_M9S7 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x07, 0x28];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (ISO/IEC 15444-1:2004 AMD8)
    /// </summary>
    /// <remarks>
    /// Levels and sublevels of the 8K IMF Single Tile Lossy Profile  defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x00];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 0 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 0 Sublevel 0 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M0S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x01];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 10 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 0 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M10S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x29];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 10 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 1 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M10S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x2A];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 10 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 2 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M10S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x2B];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 10 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 3 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M10S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x2C];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 10 Sublevel 4)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 4 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M10S4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x2D];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 10 Sublevel 5)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 5 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M10S5 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x2E];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 10 Sublevel 6)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 6 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M10S6 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x2F];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 10 Sublevel 7)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 7 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M10S7 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x30];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 10 Sublevel 8)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 10 Sublevel 8 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M10S8 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x31];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 11 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 0 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M11S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x32];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 11 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 1 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M11S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x33];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 11 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 2 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M11S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x34];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 11 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 3 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M11S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x35];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 11 Sublevel 4)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 4 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M11S4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x36];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 11 Sublevel 5)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 5 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M11S5 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x37];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 11 Sublevel 6)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 6 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M11S6 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x38];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 11 Sublevel 7)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 7 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M11S7 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x39];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 11 Sublevel 8)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 8 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M11S8 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x3A];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 11 Sublevel 9)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 11 Sublevel 9 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M11S9 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x3B];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 1 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 1 Sublevel 0 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M1S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x02];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 1 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 1 Sublevel 1 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M1S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x03];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 2 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 2 Sublevel 0 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M2S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x04];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 2 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 2 Sublevel 1 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M2S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x05];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 3 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 3 Sublevel 0 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M3S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x06];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 3 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 3 Sublevel 1 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M3S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x07];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 4 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 4 Sublevel 0 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M4S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x08];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 4 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 4 Sublevel 1 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M4S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x09];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 4 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 4 Sublevel 2 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M4S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x0A];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 5 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 5 Sublevel 0 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M5S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x0B];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 5 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 5 Sublevel 1 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M5S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x0C];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 5 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 5 Sublevel 2 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M5S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x0D];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 5 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 5 Sublevel 3 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M5S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x0E];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 6 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 6 Sublevel 0 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M6S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x0F];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 6 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 6 Sublevel 1 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M6S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x10];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 6 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 6 Sublevel 2 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M6S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x11];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 6 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 6 Sublevel 3 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M6S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x12];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 6 Sublevel 4)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 6 Sublevel 4 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M6S4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x13];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 7 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 7 Sublevel 0 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M7S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x14];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 7 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 7 Sublevel 1 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M7S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x15];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 7 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 7 Sublevel 2 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M7S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x16];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 7 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 7 Sublevel 3 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M7S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x17];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 7 Sublevel 4)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 7 Sublevel 4 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M7S4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x18];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 7 Sublevel 5)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 7 Sublevel 5 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M7S5 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x19];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 8 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 0 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M8S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x1A];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 8 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 1 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M8S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x1B];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 8 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 2 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M8S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x1C];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 8 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 3 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M8S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x1D];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 8 Sublevel 4)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 4 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M8S4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x1E];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 8 Sublevel 5)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 5 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M8S5 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x1F];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 8 Sublevel 6)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 8 Sublevel 6 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M8S6 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x20];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 9 Sublevel 0)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 0 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M9S0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x21];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 9 Sublevel 1)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 1 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M9S1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x22];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 9 Sublevel 2)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 2 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M9S2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x23];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 9 Sublevel 3)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 3 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M9S3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x24];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 9 Sublevel 4)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 4 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M9S4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x25];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 9 Sublevel 5)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 5 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M9S5 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x26];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 9 Sublevel 6)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 6 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M9S6 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x27];
    /// <summary>
    /// 8K IMF Single Tile Lossy Profile (Mainlevel 9 Sublevel 7)
    /// </summary>
    /// <remarks>
    /// Indicates a codestream conforming to Mainlevel 9 Sublevel 7 of the 8K IMF Single Tile Lossy Profile defined in ISO/IEC 15444-1:2004 AMD8
    /// </remarks>
    private static readonly byte[] J2K_8KIMF_SingleTileLossyProfile_M9S7 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x04, 0x28];
    /// <summary>
    /// JPEG 2000 Amd-1 2K Digital Cinema Profile
    /// </summary>
    /// <remarks>
    /// Identifies a JPEG 2000 Amd-1 2K Digital Cinema Profile Bitstream
    /// </remarks>
    private static readonly byte[] JPEG2000Amd12KDigitalCinemaProfile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x09, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x01, 0x03];
    /// <summary>
    /// JPEG 2000 Amd-1 4K Digital Cinema Profile
    /// </summary>
    /// <remarks>
    /// Identifies a JPEG 2000 Amd-1 4K Digital Cinema Profile Bitstream
    /// </remarks>
    private static readonly byte[] JPEG2000Amd14KDigitalCinemaProfile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x09, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x01, 0x04];
    /// <summary>
    /// JPEG 2000 Broadcast Contribution Multi-tile Reversible Profile Level 6
    /// </summary>
    /// <remarks>
    /// Identifies a JPEG 2000 Bitstream with an Broadcast Contribution Multi-tile Reversible Profile Level 6
    /// </remarks>
    private static readonly byte[] JPEG2000BroadcastContributionMultiTileReversibleProfileLevel6 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x01, 0x16];
    /// <summary>
    /// JPEG 2000 Broadcast Contribution Multi-tile Reversible Profile Level 7
    /// </summary>
    /// <remarks>
    /// Identifies a JPEG 2000 Bitstream with an Broadcast Contribution Multi-tile Reversible Profile Level 7
    /// </remarks>
    private static readonly byte[] JPEG2000BroadcastContributionMultiTileReversibleProfileLevel7 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x01, 0x17];
    /// <summary>
    /// JPEG 2000 Broadcast Contribution Single Tile Profile Level 1
    /// </summary>
    /// <remarks>
    /// Identifies a JPEG 2000 Bitstream with an Broadcast Contribution Single Tile Profile Level 1
    /// </remarks>
    private static readonly byte[] JPEG2000BroadcastContributionSingleTileProfileLevel1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x01, 0x11];
    /// <summary>
    /// JPEG 2000 Broadcast Contribution Single Tile Profile Level 2
    /// </summary>
    /// <remarks>
    /// Identifies a JPEG 2000 Bitstream with an Broadcast Contribution Single Tile Profile Level 2
    /// </remarks>
    private static readonly byte[] JPEG2000BroadcastContributionSingleTileProfileLevel2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x01, 0x12];
    /// <summary>
    /// JPEG 2000 Broadcast Contribution Single Tile Profile Level 3
    /// </summary>
    /// <remarks>
    /// Identifies a JPEG 2000 Bitstream with an Broadcast Contribution Single Tile Profile Level 3
    /// </remarks>
    private static readonly byte[] JPEG2000BroadcastContributionSingleTileProfileLevel3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x01, 0x13];
    /// <summary>
    /// JPEG 2000 Broadcast Contribution Single Tile Profile Level 4
    /// </summary>
    /// <remarks>
    /// Identifies a JPEG 2000 Bitstream with an Broadcast Contribution Single Tile Profile Level 4
    /// </remarks>
    private static readonly byte[] JPEG2000BroadcastContributionSingleTileProfileLevel4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x01, 0x14];
    /// <summary>
    /// JPEG 2000 Broadcast Contribution Single Tile Profile Level 5
    /// </summary>
    /// <remarks>
    /// Identifies a JPEG 2000 Bitstream with an Broadcast Contribution Single Tile Profile Level 5
    /// </remarks>
    private static readonly byte[] JPEG2000BroadcastContributionSingleTileProfileLevel5 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x01, 0x15];
    /// <summary>
    /// JPEG 2000 Digital Cinema Profile
    /// </summary>
    /// <remarks>
    /// Identifies a JPEG 2000, ISO/IEC 15444-1:2002 AMD 1, Digital Cinema Profile
    /// </remarks>
    private static readonly byte[] JPEG2000DigitalCinemaProfile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x07, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x01, 0x01];
    /// <summary>
    /// JPEG 2000 Picture Coding Scheme
    /// </summary>
    /// <remarks>
    /// Identifies the JPEG 2000 picture coding scheme
    /// </remarks>
    private static readonly byte[] JPEG2000PictureCodingScheme = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x07, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x00, 0x00];
    /// <summary>
    /// JPEG 2000 Undefined Digital Cinema Profile
    /// </summary>
    /// <remarks>
    /// Identifies a JPEG 2000 Bitstream with an Undefined Digital Cinema Profile
    /// </remarks>
    private static readonly byte[] JPEG2000UndefinedDigitalCinemaProfile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x03, 0x01, 0x01, 0x7F];
    /// <summary>
    /// JPEG XS High 444 12 Profile
    /// </summary>
    /// <remarks>
    /// Identifies the JPEG XS High 444 12 Profile
    /// </remarks>
    private static readonly byte[] JPEGXSHigh444_12Profile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x08, 0x08, 0x00];
    /// <summary>
    /// JPEG XS High 4444 12 Profile
    /// </summary>
    /// <remarks>
    /// Identifies the JPEG XS High 4444 12 Profile
    /// </remarks>
    private static readonly byte[] JPEGXSHigh4444_12Profile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x08, 0x09, 0x00];
    /// <summary>
    /// JPEG XS Light 422 10 Profile
    /// </summary>
    /// <remarks>
    /// Identifies the JPEG XS Light 422 10 Profile
    /// </remarks>
    private static readonly byte[] JPEGXSLight422_10Profile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x08, 0x05, 0x00];
    /// <summary>
    /// JPEG XS Light 444 12 Profile
    /// </summary>
    /// <remarks>
    /// Identifies the JPEG XS Light 444 12 Profile
    /// </remarks>
    private static readonly byte[] JPEGXSLight444_12Profile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x08, 0x06, 0x00];
    /// <summary>
    /// JPEG XS Light Subline 422 10 Profile
    /// </summary>
    /// <remarks>
    /// Identifies the JPEG XS Light Subline 422 10 Profile
    /// </remarks>
    private static readonly byte[] JPEGXSLightSubline422_10Profile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x08, 0x07, 0x00];
    /// <summary>
    /// JPEG XS Main 422 10 Profile
    /// </summary>
    /// <remarks>
    /// Identifies the JPEG XS Main 422 10 Profile
    /// </remarks>
    private static readonly byte[] JPEGXSMain422_10Profile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x08, 0x02, 0x00];
    /// <summary>
    /// JPEG XS Main 444 12 Profile
    /// </summary>
    /// <remarks>
    /// Identifies the JPEG XS Main 444 12 Profile
    /// </remarks>
    private static readonly byte[] JPEGXSMain444_12Profile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x08, 0x03, 0x00];
    /// <summary>
    /// JPEG XS Main 4444 12 Profile
    /// </summary>
    /// <remarks>
    /// Identifies the JPEG XS Main 4444 12 Profile
    /// </remarks>
    private static readonly byte[] JPEGXSMain4444_12Profile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x08, 0x04, 0x00];
    /// <summary>
    /// JPEG XS Picture Coding Schemes
    /// </summary>
    /// <remarks>
    /// Identifies JPEG XS Video
    /// </remarks>
    private static readonly byte[] JPEGXSPictureCodingSchemes = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x08, 0x00, 0x00];
    /// <summary>
    /// JPEG XS Unrestricted Codestream
    /// </summary>
    /// <remarks>
    /// Identifies an unrestricted codestream
    /// </remarks>
    private static readonly byte[] JPEGXSUnrestrictedCodestream = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x08, 0x01, 0x00];
    /// <summary>
    /// JVC
    /// </summary>
    /// <remarks>
    /// Metadata registered by Victor Company of Japan, Limited (JVC) for private use
    /// </remarks>
    private static readonly byte[] JVC = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0C, 0x0E, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Left Audio Channel
    /// </summary>
    /// <remarks>
    /// Identifies the Audio Channel intended to drive the Left loudspeaker
    /// </remarks>
    private static readonly byte[] LeftAudioChannel = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Left Center Audio Channel
    /// </summary>
    /// <remarks>
    /// Identifies the Audio Channel intended to drive the Left Center loudspeaker
    /// </remarks>
    private static readonly byte[] LeftCenterAudioChannel = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x0B, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Left Eye Data Track
    /// </summary>
    /// <remarks>
    /// Identifies Data Track Corresponding to Left Eye
    /// </remarks>
    private static readonly byte[] LeftEyeDataTrack = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x03, 0x02, 0x10, 0x01, 0x01, 0x00, 0x00];
    /// <summary>
    /// Left Eye Picture Track
    /// </summary>
    /// <remarks>
    /// Identifies Picture Track Corresponding to Left Eye
    /// </remarks>
    private static readonly byte[] LeftEyePictureTrack = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x10, 0x01, 0x01, 0x00, 0x00];
    /// <summary>
    /// Left Rear Surround Audio Channel
    /// </summary>
    /// <remarks>
    /// Identifies the Audio Channel intended to drive the Left Rear Surround loudspeaker(s)
    /// </remarks>
    private static readonly byte[] LeftRearSurroundAudioChannel = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x09, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Left Side Surround Audio Channel
    /// </summary>
    /// <remarks>
    /// Identifies the Audio Channel intended to drive the Left Side Surround
    /// </remarks>
    private static readonly byte[] LeftSideSurroundAudioChannel = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x07, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Left Surround Audio Channel
    /// </summary>
    /// <remarks>
    /// Identifies the Audio Channel intended to drive the Left Surround
    /// </remarks>
    private static readonly byte[] LeftSurroundAudioChannel = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x05, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// LFE Audio Channel
    /// </summary>
    /// <remarks>
    /// Identifies the Audio Channel intended to drive the screen Low Frequency Effects loudspeaker
    /// </remarks>
    private static readonly byte[] LFEAudioChannel = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x04, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// LOC_ApplicationSpecifications_Labels
    /// </summary>
    /// <remarks>
    /// Library of Congress Application Specifications Labels
    /// </remarks>
    private static readonly byte[] LOC_ApplicationSpecifications_Labels = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0E, 0x0D, 0x0E, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// LOC_ApplicationSpecifications_Labels_V1
    /// </summary>
    /// <remarks>
    /// Library of Congress Application Specifications Labels V1
    /// </remarks>
    private static readonly byte[] LOC_ApplicationSpecifications_Labels_V1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0E, 0x0D, 0x0E, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// LOC_Labels
    /// </summary>
    /// <remarks>
    /// Metadata registered by the Library of Congress for public use
    /// </remarks>
    private static readonly byte[] LOC_Labels = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0E, 0x0D, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Locally Unique Identifiers
    /// </summary>
    /// <remarks>
    /// SMPTE Label identifiers for Locally Unique Identifiers
    /// </remarks>
    private static readonly byte[] LocallyUniqueIdentifiers = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Manual Exposure
    /// </summary>
    /// <remarks>
    /// Identifies Manual Exposure
    /// </remarks>
    private static readonly byte[] ManualExposure = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x05, 0x10, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00];
    /// <summary>
    /// Metadata
    /// </summary>
    /// <remarks>
    /// Identifies metadata parameters
    /// </remarks>
    private static readonly byte[] Metadata = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Metadata Payload Schemes
    /// </summary>
    /// <remarks>
    /// No definition provided.
    /// </remarks>
    private static readonly byte[] MetadataPayloadSchemes = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x04, 0x00, 0x00, 0x00];
    /// <summary>
    /// Metadata Track Kinds
    /// </summary>
    /// <remarks>
    /// Identifies metadata track kinds
    /// </remarks>
    private static readonly byte[] MetadataTrackKinds = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x01, 0x03, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// MGA Audio Essence Sound Coding Schemes
    /// </summary>
    /// <remarks>
    /// Identifies MGA Audio Essence Sound Coding Schemes
    /// </remarks>
    private static readonly byte[] MGAAudioEssenceSoundCodingSchemes = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x02, 0x02, 0x01, 0x02, 0x00, 0x00, 0x00];
    /// <summary>
    /// MGA Audio Essence Uncompressed Sound Coding
    /// </summary>
    /// <remarks>
    /// Identifies MGA Audio Essence Uncompressed Sound Coding
    /// </remarks>
    private static readonly byte[] MGAAudioEssenceUncompressedSoundCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x02, 0x02, 0x01, 0x02, 0x01, 0x00, 0x00];
    /// <summary>
    /// MGA Soundfield
    /// </summary>
    /// <remarks>
    /// Identifies an MGA Soundfield
    /// </remarks>
    private static readonly byte[] MGASoundfield = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x02, 0x22, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// MIC Algorithm CRC32C
    /// </summary>
    /// <remarks>
    /// AS-07 usage of CRC32_Castagnoli for MIC values in GC System Item
    /// </remarks>
    private static readonly byte[] MICAlgorithm_CRC32C = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x0E, 0x01, 0x01, 0x07, 0x04, 0x02, 0x01];
    /// <summary>
    /// MICCarriage_SystemItem
    /// </summary>
    /// <remarks>
    /// Indicates AS-07 usage for placement of MIC values in GC SystemItem
    /// </remarks>
    private static readonly byte[] MICCarriage_SystemItem = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x0E, 0x01, 0x01, 0x07, 0x04, 0x01, 0x01];
    /// <summary>
    /// MISB Classified
    /// </summary>
    /// <remarks>
    /// Classified metadata registered by MISB (Motion Imagery Standards Board) for Systems and ASPA
    /// </remarks>
    private static readonly byte[] MISBClassified = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x0E, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// MISB Systems
    /// </summary>
    /// <remarks>
    /// Unclassified metadata registered by MISB (Motion Imagery Standards Board) for Systems
    /// </remarks>
    private static readonly byte[] MISBSystems = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x0E, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// MPEG-1 Audio Coding
    /// </summary>
    /// <remarks>
    /// Identifies compressed audio compliant to MPEG-1 audio coding
    /// </remarks>
    private static readonly byte[] MPEG_1_Audio_Coding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x02, 0x02, 0x02, 0x04, 0x01, 0x00, 0x00];
    /// <summary>
    /// MPEG-1 Layer I
    /// </summary>
    /// <remarks>
    /// Identifies compressed audio compliant to MPEG-1 Layer I
    /// </remarks>
    private static readonly byte[] MPEG_1_Layer_I = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x02, 0x02, 0x02, 0x04, 0x01, 0x01, 0x00];
    /// <summary>
    /// MPEG-1 Layer II
    /// </summary>
    /// <remarks>
    /// Identifies compressed audio compliant to MPEG-1 Layer II
    /// </remarks>
    private static readonly byte[] MPEG_1_Layer_II = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x02, 0x02, 0x02, 0x04, 0x01, 0x02, 0x00];
    /// <summary>
    /// MPEG-1 Layer III
    /// </summary>
    /// <remarks>
    /// Identifies compressed audio compliant to MPEG-1 Layer III
    /// </remarks>
    private static readonly byte[] MPEG_1_Layer_III = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x02, 0x02, 0x02, 0x04, 0x01, 0x03, 0x00];
    /// <summary>
    /// Low Complexity profile MPEG-2 AAC+SBR
    /// </summary>
    /// <remarks>
    /// Identifies compressed audio compliant to MPEG-2 AAC Low Complexity + SBR
    /// </remarks>
    private static readonly byte[] MPEG_2_AAC_SBR = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x02, 0x02, 0x02, 0x04, 0x03, 0x02, 0x00];
    /// <summary>
    /// MPEG-2 Advanced Audio Coding
    /// </summary>
    /// <remarks>
    /// Identifies compressed audio compliant to MPEG-2 Advanced Audio Coding
    /// </remarks>
    private static readonly byte[] MPEG_2_Advanced_Audio_Coding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x02, 0x02, 0x02, 0x04, 0x03, 0x00, 0x00];
    /// <summary>
    /// MPEG-2 Audio Coding
    /// </summary>
    /// <remarks>
    /// Identifies compressed audio compliant to MPEG-2 Audio Coding
    /// </remarks>
    private static readonly byte[] MPEG_2_Audio_Coding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x02, 0x02, 0x02, 0x04, 0x02, 0x00, 0x00];
    /// <summary>
    /// MPEG-2 Layer I
    /// </summary>
    /// <remarks>
    /// Identifies compressed audio compliant to MPEG-2 Layer I
    /// </remarks>
    private static readonly byte[] MPEG_2_Layer_I = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x02, 0x02, 0x02, 0x04, 0x02, 0x01, 0x00];
    /// <summary>
    /// MPEG-2 Layer II
    /// </summary>
    /// <remarks>
    /// Identifies compressed audio compliant to MPEG-2 Layer II
    /// </remarks>
    private static readonly byte[] MPEG_2_Layer_II = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x02, 0x02, 0x02, 0x04, 0x02, 0x02, 0x00];
    /// <summary>
    /// MPEG-2 Layer III
    /// </summary>
    /// <remarks>
    /// Identifies compressed audio compliant to MPEG-2 Layer III
    /// </remarks>
    private static readonly byte[] MPEG_2_Layer_III = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x02, 0x02, 0x02, 0x04, 0x02, 0x03, 0x00];
    /// <summary>
    /// Low Complexity profile MPEG-2 AAC
    /// </summary>
    /// <remarks>
    /// Identifies compressed audio compliant to MPEG-2 AAC Low Complexity profile
    /// </remarks>
    private static readonly byte[] MPEG_2_LC_AAC = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x02, 0x02, 0x02, 0x04, 0x03, 0x01, 0x00];
    /// <summary>
    /// MPEG-4 AAC Profile
    /// </summary>
    /// <remarks>
    /// Identifies compressed audio compliant to MPEG-4 AAC LC Profile
    /// </remarks>
    private static readonly byte[] MPEG_4_AAC_Profile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x02, 0x02, 0x02, 0x04, 0x04, 0x01, 0x00];
    /// <summary>
    /// MPEG-4 Advanced Audio Coding
    /// </summary>
    /// <remarks>
    /// Identifies compressed audio compliant to MPEG-4 Advanced Audio Coding
    /// </remarks>
    private static readonly byte[] MPEG_4_Advanced_Audio_Coding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x02, 0x02, 0x02, 0x04, 0x04, 0x00, 0x00];
    /// <summary>
    /// MPEG-4 High Efficiency AAC Profile
    /// </summary>
    /// <remarks>
    /// Identifies compressed audio compliant to MPEG-4 High Efficiency AAC Profile
    /// </remarks>
    private static readonly byte[] MPEG_4_High_Efficiency_AAC_Profile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x02, 0x02, 0x02, 0x04, 0x04, 0x02, 0x00];
    /// <summary>
    /// MPEG-4 High Efficiency AAC v2 Profile
    /// </summary>
    /// <remarks>
    /// Identifies compressed audio compliant to MPEG-4 High Efficiency AAC v2 Profile
    /// </remarks>
    private static readonly byte[] MPEG_4_High_Efficiency_AAC_v2_Profile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x02, 0x02, 0x02, 0x04, 0x04, 0x03, 0x00];
    /// <summary>
    /// MPEG Audio Compression
    /// </summary>
    /// <remarks>
    /// Identifies MPEG Audio compression
    /// </remarks>
    private static readonly byte[] MPEG_Compressed_Audio_Coding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x02, 0x02, 0x02, 0x04, 0x00, 0x00, 0x00];
    /// <summary>
    /// MPEG-1 Constrained Profile
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-1 with Constrained Profile
    /// </remarks>
    private static readonly byte[] MPEG1ConstrainedProfile = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x04, 0x01, 0x02, 0x02, 0x01, 0x10, 0x01, 0x00];
    /// <summary>
    /// MPEG-1 Layer-1 Compressed Audio
    /// </summary>
    /// <remarks>
    /// Identifies compressed audio compliant to MPEG-1 layer 1
    /// </remarks>
    private static readonly byte[] MPEG1Layer1CompressedAudio = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x02, 0x02, 0x02, 0x03, 0x02, 0x04, 0x00];
    /// <summary>
    /// MPEG-1 Layer-1 or 2 Compressed Audio
    /// </summary>
    /// <remarks>
    /// Identifies compressed audio compliant to MPEG-1 layer 2 or 3 or MPEG-2 data without extension (audio)
    /// </remarks>
    private static readonly byte[] MPEG1Layer1Or2CompressedAudio = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x02, 0x02, 0x02, 0x03, 0x02, 0x05, 0x00];
    /// <summary>
    /// MPEG-1 Layer-2 HDV Constrained
    /// </summary>
    /// <remarks>
    /// Identifies compressed audio compliant to MPEG-1 layer 2 stereo and constrained to the HDV specification
    /// </remarks>
    private static readonly byte[] MPEG1Layer2HDVConstrained = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x04, 0x02, 0x02, 0x02, 0x03, 0x02, 0x05, 0x01];
    /// <summary>
    /// MPEG-1 Unconstrained Coding
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-1 with Unconstrained Coding
    /// </remarks>
    private static readonly byte[] MPEG1UnconstrainedCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x04, 0x01, 0x02, 0x02, 0x01, 0x10, 0x02, 0x00];
    /// <summary>
    /// MPEG-1 Video
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-1 Video  coding
    /// </remarks>
    private static readonly byte[] MPEG1Video = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x04, 0x01, 0x02, 0x02, 0x01, 0x10, 0x00, 0x00];
    /// <summary>
    /// MPEG-2 422P-HL
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 422P@HL coding
    /// </remarks>
    private static readonly byte[] MPEG2422PHL = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x04, 0x01, 0x02, 0x02, 0x01, 0x04, 0x00, 0x00];
    /// <summary>
    /// MPEG-2 422P-HL I-Frame
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 422P-HL I-Frame coding
    /// </remarks>
    private static readonly byte[] MPEG2422PHLIFrame = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x04, 0x01, 0x02, 0x02, 0x01, 0x04, 0x02, 0x00];
    /// <summary>
    /// MPEG-2 422P-HL Long GOP
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 422P-HL Long GOP coding
    /// </remarks>
    private static readonly byte[] MPEG2422PHLLongGOP = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x04, 0x01, 0x02, 0x02, 0x01, 0x04, 0x03, 0x00];
    /// <summary>
    /// MPEG-2 422P-HL No I-Frames
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 422P-HL No I-Frames coding
    /// </remarks>
    private static readonly byte[] MPEG2422PHLNoIFrames = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x04, 0x01, 0x02, 0x02, 0x01, 0x04, 0x04, 0x00];
    /// <summary>
    /// MPEG-2 422P-ML
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 422P@ML coding
    /// </remarks>
    private static readonly byte[] MPEG2422PML = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x02, 0x01, 0x02, 0x00, 0x00];
    /// <summary>
    /// MPEG-2 422P-ML I-Frame
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 422P-ML I-Frame coding
    /// </remarks>
    private static readonly byte[] MPEG2422PMLIFrame = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x04, 0x01, 0x02, 0x02, 0x01, 0x02, 0x02, 0x00];
    /// <summary>
    /// MPEG-2 422P-ML Long GOP
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 422P-ML Long GOP coding
    /// </remarks>
    private static readonly byte[] MPEG2422PMLLongGOP = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x04, 0x01, 0x02, 0x02, 0x01, 0x02, 0x03, 0x00];
    /// <summary>
    /// MPEG-2 422P-ML No I-Frames
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 422P-ML No I-Frames coding
    /// </remarks>
    private static readonly byte[] MPEG2422PMLNoIFrames = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x04, 0x01, 0x02, 0x02, 0x01, 0x02, 0x04, 0x00];
    /// <summary>
    /// MPEG-2 AAC Compressed Audio
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 Advanced Audio Coding
    /// </remarks>
    private static readonly byte[] MPEG2AACCompressedAudio = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x04, 0x02, 0x02, 0x02, 0x03, 0x03, 0x01, 0x00];
    /// <summary>
    /// MPEG-2 HDV 720x1280 50P 16x9
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 HDV constrained 720x1280 scanning, 50P frame rate and 16x9 picture aspect ratio
    /// </remarks>
    private static readonly byte[] MPEG2HDV720x128050P16x9 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x04, 0x01, 0x02, 0x02, 0x01, 0x03, 0x20, 0x08];
    /// <summary>
    /// MPEG-2 HDV 720x1280 59.94P 16x9
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 HDV constrained 720x1280 scanning, 59.94P frame rate and 16x9 picture aspect ratio
    /// </remarks>
    private static readonly byte[] MPEG2HDV720x12805994P16x9 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x04, 0x01, 0x02, 0x02, 0x01, 0x03, 0x20, 0x01];
    /// <summary>
    /// MPEG-2 HDV MP-H14 1080x1440 23.98P 16x9
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 coded, HDV constrained 1080x1440 scanning, 23.98P frame rate and 16x9 picture aspect ratio
    /// </remarks>
    private static readonly byte[] MPEG2HDVMPH141080x14402398P16x9 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x04, 0x01, 0x02, 0x02, 0x01, 0x05, 0x20, 0x22];
    /// <summary>
    /// MPEG-2 HDV MP-H14 1080x1440 25P 16x9
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 coded, HDV constrained 1080x1440 scanning, 25P frame rate and 16x9 picture aspect ratio
    /// </remarks>
    private static readonly byte[] MPEG2HDVMPH141080x144025P16x9 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x04, 0x01, 0x02, 0x02, 0x01, 0x05, 0x20, 0x25];
    /// <summary>
    /// MPEG-2 HDV MP-H14 1080x1440 29.97P 16x9
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 coded, HDV constrained 1080x1440 scanning, 29.97P frame rate and 16x9 picture aspect ratio
    /// </remarks>
    private static readonly byte[] MPEG2HDVMPH141080x14402997P16x9 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x04, 0x01, 0x02, 0x02, 0x01, 0x05, 0x20, 0x21];
    /// <summary>
    /// MPEG-2 HDV MP-H14 1080x1440 50I 16x9
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 coded, HDV constrained 1080x1440 scanning, 50I frame rate and 16x9 picture aspect ratio
    /// </remarks>
    private static readonly byte[] MPEG2HDVMPH141080x144050I16x9 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x04, 0x01, 0x02, 0x02, 0x01, 0x05, 0x20, 0x24];
    /// <summary>
    /// MPEG-2 HDV MP-H14 1080x1440 59.94I 16x9
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 coded, HDV constrained 1080x1440 scanning, 59.94I frame rate and 16x9 picture aspect ratio
    /// </remarks>
    private static readonly byte[] MPEG2HDVMPH141080x14405994I16x9 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x04, 0x01, 0x02, 0x02, 0x01, 0x05, 0x20, 0x20];
    /// <summary>
    /// MPEG-2 HDV MP-H14 480x720 59.94P 16x9
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 coded, HDV constrained 480x720 scanning, 59.94P frame rate and 16x9 picture aspect ratio
    /// </remarks>
    private static readonly byte[] MPEG2HDVMPH14480x7205994P16x9 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x04, 0x01, 0x02, 0x02, 0x01, 0x05, 0x20, 0x02];
    /// <summary>
    /// MPEG-2 HDV MP-H14 480x720 59.94P 4x3
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 coded, HDV constrained 480x720 scanning, 59.94P frame rate and 4x3 picture aspect ratio
    /// </remarks>
    private static readonly byte[] MPEG2HDVMPH14480x7205994P4x3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x04, 0x01, 0x02, 0x02, 0x01, 0x05, 0x20, 0x01];
    /// <summary>
    /// MPEG-2 HDV MP-H14 576x720 50P 16x9
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 coded, HDV constrained 576x720 scanning, 50P frame rate and 16x9 picture aspect ratio
    /// </remarks>
    private static readonly byte[] MPEG2HDVMPH14576x72050P16x9 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x04, 0x01, 0x02, 0x02, 0x01, 0x05, 0x20, 0x09];
    /// <summary>
    /// MPEG-2 HDV MP-H14 576x720 50P 4x3
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 coded, HDV constrained 576x720 scanning, 50P frame rate and 4x3 picture aspect ratio
    /// </remarks>
    private static readonly byte[] MPEG2HDVMPH14576x72050P4x3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x04, 0x01, 0x02, 0x02, 0x01, 0x05, 0x20, 0x08];
    /// <summary>
    /// MPEG-2 HDV MP-H14 720x1280 25P 16x9
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 coded, HDV constrained 720x1280 scanning, 25P frame rate and 16x9 picture aspect ratio
    /// </remarks>
    private static readonly byte[] MPEG2HDVMPH14720x128025P16x9 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x04, 0x01, 0x02, 0x02, 0x01, 0x05, 0x20, 0x14];
    /// <summary>
    /// MPEG-2 HDV MP-H14 720x1280 29.97P 16x9
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 coded, HDV constrained 720x1280 scanning, 29.97P frame rate and 16x9 picture aspect ratio
    /// </remarks>
    private static readonly byte[] MPEG2HDVMPH14720x12802997P16x9 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x04, 0x01, 0x02, 0x02, 0x01, 0x05, 0x20, 0x10];
    /// <summary>
    /// MPEG-2 HDV MP-H14 720x1280 50P 16x9
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 coded, HDV constrained 720x1280 scanning, 50P frame rate and 16x9 picture aspect ratio
    /// </remarks>
    private static readonly byte[] MPEG2HDVMPH14720x128050P16x9 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x04, 0x01, 0x02, 0x02, 0x01, 0x05, 0x20, 0x15];
    /// <summary>
    /// MPEG-2 HDV MP-ML 480x720 29.97P 16x9
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 coded, HDV constrained 480x720 scanning, 29.97P frame rate and 16x9 picture aspect ratio
    /// </remarks>
    private static readonly byte[] MPEG2HDVMPML480x7202997P16x9 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x04, 0x01, 0x02, 0x02, 0x01, 0x01, 0x20, 0x02];
    /// <summary>
    /// MPEG-2 HDV MP-ML 480x720 29.97P 4x3
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 coded, HDV constrained 480x720 scanning, 29.97P frame rate and 4x3 picture aspect ratio
    /// </remarks>
    private static readonly byte[] MPEG2HDVMPML480x7202997P4x3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x04, 0x01, 0x02, 0x02, 0x01, 0x01, 0x20, 0x01];
    /// <summary>
    /// MPEG-2 HDV MP-ML 480x720 59.94I 16x9
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 coded, HDV constrained 480x720 scanning, 59.94I frame rate and 16x9 picture aspect ratio
    /// </remarks>
    private static readonly byte[] MPEG2HDVMPML480x7205994I16x9 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x04, 0x01, 0x02, 0x02, 0x01, 0x01, 0x20, 0x05];
    /// <summary>
    /// MPEG-2 HDV MP-ML 480x720 59.94I 4x3
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 coded, HDV constrained 480x720 scanning, 59.94I frame rate and 4x3 picture aspect ratio
    /// </remarks>
    private static readonly byte[] MPEG2HDVMPML480x7205994I4x3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x04, 0x01, 0x02, 0x02, 0x01, 0x01, 0x20, 0x04];
    /// <summary>
    /// MPEG-2 HDV MP-ML 480x720 59.94P 16x9
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 coded, HDV constrained 480x720 scanning, 59.94P frame rate and 16x9 picture aspect ratio
    /// </remarks>
    private static readonly byte[] MPEG2HDVMPML480x7205994P16x9 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x04, 0x01, 0x02, 0x02, 0x01, 0x01, 0x20, 0x07];
    /// <summary>
    /// MPEG-2 HDV MP-ML 480x720 59.94P 4x3
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 coded, HDV constrained 480x720 scanning, 59.94P frame rate and 4x3 picture aspect ratio
    /// </remarks>
    private static readonly byte[] MPEG2HDVMPML480x7205994P4x3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x04, 0x01, 0x02, 0x02, 0x01, 0x01, 0x20, 0x06];
    /// <summary>
    /// MPEG-2 HDV MP-ML 576x720 25P 16x9
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 coded, HDV constrained 576x720 scanning, 25P frame rate and 16x9 picture aspect ratio
    /// </remarks>
    private static readonly byte[] MPEG2HDVMPML576x72025P16x9 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x04, 0x01, 0x02, 0x02, 0x01, 0x01, 0x20, 0x12];
    /// <summary>
    /// MPEG-2 HDV MP-ML 576x720 25P 4x3
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 coded, HDV constrained 576x720 scanning, 25P frame rate and 4x3 picture aspect ratio
    /// </remarks>
    private static readonly byte[] MPEG2HDVMPML576x72025P4x3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x04, 0x01, 0x02, 0x02, 0x01, 0x01, 0x20, 0x11];
    /// <summary>
    /// MPEG-2 HDV MP-ML 576x720 50I 16x9
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 coded, HDV constrained 576x720 scanning, 50I frame rate and 16x9 picture aspect ratio
    /// </remarks>
    private static readonly byte[] MPEG2HDVMPML576x72050I16x9 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x04, 0x01, 0x02, 0x02, 0x01, 0x01, 0x20, 0x15];
    /// <summary>
    /// MPEG-2 HDV MP-ML 576x720 50I 4x3
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 coded, HDV constrained 576x720 scanning, 50I frame rate and 4x3 picture aspect ratio
    /// </remarks>
    private static readonly byte[] MPEG2HDVMPML576x72050I4x3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x04, 0x01, 0x02, 0x02, 0x01, 0x01, 0x20, 0x14];
    /// <summary>
    /// MPEG-2 HDV MP-ML 576x720 50P 16x9
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 coded, HDV constrained 576x720 scanning, 50P frame rate and 16x9 picture aspect ratio
    /// </remarks>
    private static readonly byte[] MPEG2HDVMPML576x72050P16x9 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x04, 0x01, 0x02, 0x02, 0x01, 0x01, 0x20, 0x17];
    /// <summary>
    /// MPEG-2 HDV MP-ML 576x720 50P 4x3
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 coded, HDV constrained 576x720 scanning, 50P frame rate and 4x3 picture aspect ratio
    /// </remarks>
    private static readonly byte[] MPEG2HDVMPML576x72050P4x3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x04, 0x01, 0x02, 0x02, 0x01, 0x01, 0x20, 0x16];
    /// <summary>
    /// MPEG-2 HP-H14
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 High Profile, High 1440 Level  coding
    /// </remarks>
    private static readonly byte[] MPEG2HPH14 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x09, 0x04, 0x01, 0x02, 0x02, 0x01, 0x08, 0x00, 0x00];
    /// <summary>
    /// MPEG-2 HP-H14 I-Frame
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 High Profile, High 1440 Level, I-Frame coding
    /// </remarks>
    private static readonly byte[] MPEG2HPH14IFrame = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x09, 0x04, 0x01, 0x02, 0x02, 0x01, 0x08, 0x02, 0x00];
    /// <summary>
    /// MPEG-2 HP-H14 Long GOP
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 High Profile, High 1440 Level, Long GOP coding
    /// </remarks>
    private static readonly byte[] MPEG2HPH14LongGOP = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x09, 0x04, 0x01, 0x02, 0x02, 0x01, 0x08, 0x03, 0x00];
    /// <summary>
    /// MPEG-2 HP-H14 No I-Frames
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 High Profile, High 1440 Level, No I-Frames coding
    /// </remarks>
    private static readonly byte[] MPEG2HPH14NoIFrames = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x09, 0x04, 0x01, 0x02, 0x02, 0x01, 0x08, 0x04, 0x00];
    /// <summary>
    /// MPEG-2 HP-HL
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 High Profile, High Level  coding
    /// </remarks>
    private static readonly byte[] MPEG2HPHL = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x09, 0x04, 0x01, 0x02, 0x02, 0x01, 0x07, 0x00, 0x00];
    /// <summary>
    /// MPEG-2 HP-HL I-Frame
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 High Profile, High Level, I-Frame coding
    /// </remarks>
    private static readonly byte[] MPEG2HPHLIFrame = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x09, 0x04, 0x01, 0x02, 0x02, 0x01, 0x07, 0x02, 0x00];
    /// <summary>
    /// MPEG-2 HP-HL Long GOP
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 High Profile, High Level, Long GOP coding
    /// </remarks>
    private static readonly byte[] MPEG2HPHLLongGOP = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x09, 0x04, 0x01, 0x02, 0x02, 0x01, 0x07, 0x03, 0x00];
    /// <summary>
    /// MPEG-2 HP-HL No I-Frames
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 High Profile, High Level, No I-Frames coding
    /// </remarks>
    private static readonly byte[] MPEG2HPHLNoIFrames = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x09, 0x04, 0x01, 0x02, 0x02, 0x01, 0x07, 0x04, 0x00];
    /// <summary>
    /// MPEG-2 HP LL
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 HP LL coding
    /// </remarks>
    private static readonly byte[] MPEG2HPLL = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x09, 0x20, 0x00];
    /// <summary>
    /// MPEG-2 HP-ML
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 High Profile, Main Level  coding
    /// </remarks>
    private static readonly byte[] MPEG2HPML = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x09, 0x04, 0x01, 0x02, 0x02, 0x01, 0x06, 0x00, 0x00];
    /// <summary>
    /// MPEG-2 HP-ML I-Frame
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 High Profile, Main Level, I-Frame coding
    /// </remarks>
    private static readonly byte[] MPEG2HPMLIFrame = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x09, 0x04, 0x01, 0x02, 0x02, 0x01, 0x06, 0x02, 0x00];
    /// <summary>
    /// MPEG-2 HP-ML Long GOP
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 High Profile, Main Level, Long GOP coding
    /// </remarks>
    private static readonly byte[] MPEG2HPMLLongGOP = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x09, 0x04, 0x01, 0x02, 0x02, 0x01, 0x06, 0x03, 0x00];
    /// <summary>
    /// MPEG-2 HP-ML No I-Frames
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 High Profile, Main Level, No I-Frames coding
    /// </remarks>
    private static readonly byte[] MPEG2HPMLNoIFrames = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x09, 0x04, 0x01, 0x02, 0x02, 0x01, 0x06, 0x04, 0x00];
    /// <summary>
    /// MPEG-2 Layer-1 Compressed Audio
    /// </summary>
    /// <remarks>
    /// Identifies compressed audio compliant to MPEG-2 data with extension (audio)
    /// </remarks>
    private static readonly byte[] MPEG2Layer1CompressedAudio = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x02, 0x02, 0x02, 0x03, 0x02, 0x06, 0x00];
    /// <summary>
    /// MPEG-2 MP-H14
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 MP@H-1440 coding
    /// </remarks>
    private static readonly byte[] MPEG2MPH14 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x04, 0x01, 0x02, 0x02, 0x01, 0x05, 0x00, 0x00];
    /// <summary>
    /// MPEG-2 MP-H14 IEC-HDV Constrained
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 MP@H-1440 IEC HDV Constrained
    /// </remarks>
    private static readonly byte[] MPEG2MPH14IECHDVConstrained = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x04, 0x01, 0x02, 0x02, 0x01, 0x05, 0x20, 0x00];
    /// <summary>
    /// MPEG-2 MP-H14 I-Frame
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 MP-H14 I-Frame coding
    /// </remarks>
    private static readonly byte[] MPEG2MPH14IFrame = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x04, 0x01, 0x02, 0x02, 0x01, 0x05, 0x02, 0x00];
    /// <summary>
    /// MPEG-2 MP-H14 Long GOP
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 MP-H14 Long GOP coding
    /// </remarks>
    private static readonly byte[] MPEG2MPH14LongGOP = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x04, 0x01, 0x02, 0x02, 0x01, 0x05, 0x03, 0x00];
    /// <summary>
    /// MPEG-2 MP-H14 No I-Frames
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 MP-H14 No I-Frames coding
    /// </remarks>
    private static readonly byte[] MPEG2MPH14NoIFrames = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x04, 0x01, 0x02, 0x02, 0x01, 0x05, 0x04, 0x00];
    /// <summary>
    /// MPEG-2 MP-HL
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 MP@HL coding
    /// </remarks>
    private static readonly byte[] MPEG2MPHL = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x04, 0x01, 0x02, 0x02, 0x01, 0x03, 0x00, 0x00];
    /// <summary>
    /// MPEG-2 MP-HL IEC-HDV Constrained
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 MP@HL IEC HDV Constrained
    /// </remarks>
    private static readonly byte[] MPEG2MPHLIECHDVConstrained = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x04, 0x01, 0x02, 0x02, 0x01, 0x03, 0x20, 0x00];
    /// <summary>
    /// MPEG-2 MP-HL I-Frame
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 MP-HL I-Frame coding
    /// </remarks>
    private static readonly byte[] MPEG2MPHLIFrame = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x04, 0x01, 0x02, 0x02, 0x01, 0x03, 0x02, 0x00];
    /// <summary>
    /// MPEG-2 MP-HL Long GOP
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 MP-HL Long GOP coding
    /// </remarks>
    private static readonly byte[] MPEG2MPHLLongGOP = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x04, 0x01, 0x02, 0x02, 0x01, 0x03, 0x03, 0x00];
    /// <summary>
    /// MPEG-2 MP-HL No I-Frames
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 MP-HL No I-Frames coding
    /// </remarks>
    private static readonly byte[] MPEG2MPHLNoIFrames = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x04, 0x01, 0x02, 0x02, 0x01, 0x03, 0x04, 0x00];
    /// <summary>
    /// MPEG-2 MP LL
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 MP LL coding
    /// </remarks>
    private static readonly byte[] MPEG2MPLL = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x09, 0x10, 0x00];
    /// <summary>
    /// MPEG-2 MP-ML
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 MP@ML coding
    /// </remarks>
    private static readonly byte[] MPEG2MPML = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x02, 0x01, 0x01, 0x00, 0x00];
    /// <summary>
    /// MPEG-2 MP-ML IEC-HDV Constrained
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 MP@ML, IEC HDV Constrained coding
    /// </remarks>
    private static readonly byte[] MPEG2MPMLIECHDVConstrained = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x04, 0x01, 0x02, 0x02, 0x01, 0x01, 0x20, 0x00];
    /// <summary>
    /// MPEG-2 MP-ML I-Frame
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 MP-ML I-Frame coding
    /// </remarks>
    private static readonly byte[] MPEG2MPMLIFrame = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x04, 0x01, 0x02, 0x02, 0x01, 0x01, 0x10, 0x00];
    /// <summary>
    /// MPEG-2 MP-ML Long GOP
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 MP-ML Long GOP coding
    /// </remarks>
    private static readonly byte[] MPEG2MPMLLongGOP = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x04, 0x01, 0x02, 0x02, 0x01, 0x01, 0x11, 0x00];
    /// <summary>
    /// MPEG-2 MP-ML No I-Frames
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 MP-ML No I-Frames coding
    /// </remarks>
    private static readonly byte[] MPEG2MPMLNoIFrames = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x04, 0x01, 0x02, 0x02, 0x01, 0x01, 0x12, 0x00];
    /// <summary>
    /// MPEG-2 Multiview H14
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 Multiview H14 coding
    /// </remarks>
    private static readonly byte[] MPEG2MultiviewH14 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x09, 0x53, 0x00];
    /// <summary>
    /// MPEG-2 Multiview HL
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 Multiview HL coding
    /// </remarks>
    private static readonly byte[] MPEG2MultiviewHL = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x09, 0x52, 0x00];
    /// <summary>
    /// MPEG-2 Multiview LL
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 Multiview LL coding
    /// </remarks>
    private static readonly byte[] MPEG2MultiviewLL = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x09, 0x50, 0x00];
    /// <summary>
    /// MPEG-2 Multiview ML
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 Multiview ML coding
    /// </remarks>
    private static readonly byte[] MPEG2MultiviewML = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x09, 0x51, 0x00];
    /// <summary>
    /// MPEG-2 Other
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 Other coding
    /// </remarks>
    private static readonly byte[] MPEG2Other = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x09, 0x00, 0x00];
    /// <summary>
    /// MPEG-2 SP H14
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 SP H14 coding
    /// </remarks>
    private static readonly byte[] MPEG2SPH14 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x09, 0x04, 0x00];
    /// <summary>
    /// MPEG-2 SP HL
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 SP HL coding
    /// </remarks>
    private static readonly byte[] MPEG2SPHL = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x09, 0x03, 0x00];
    /// <summary>
    /// MPEG-2 SP LL
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 SP LL coding
    /// </remarks>
    private static readonly byte[] MPEG2SPLL = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x09, 0x01, 0x00];
    /// <summary>
    /// MPEG-2 SP ML
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 SP ML coding
    /// </remarks>
    private static readonly byte[] MPEG2SPML = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x09, 0x02, 0x00];
    /// <summary>
    /// MPEG-2 SRNSP H14
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 SRNSP H14 coding
    /// </remarks>
    private static readonly byte[] MPEG2SRNSPH14 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x09, 0x43, 0x00];
    /// <summary>
    /// MPEG-2 SRNSP HL
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 SRNSP HL coding
    /// </remarks>
    private static readonly byte[] MPEG2SRNSPHL = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x09, 0x42, 0x00];
    /// <summary>
    /// MPEG-2 SRNSP LL
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 SRNSP LL coding
    /// </remarks>
    private static readonly byte[] MPEG2SRNSPLL = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x09, 0x40, 0x00];
    /// <summary>
    /// MPEG-2 SRNSP ML
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 SRNSP ML coding
    /// </remarks>
    private static readonly byte[] MPEG2SRNSPML = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x09, 0x41, 0x00];
    /// <summary>
    /// MPEG-2 SSP H14
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 SSP H14 coding
    /// </remarks>
    private static readonly byte[] MPEG2SSPH14 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x09, 0x32, 0x00];
    /// <summary>
    /// MPEG-2 SSP LL
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 SSP LL coding
    /// </remarks>
    private static readonly byte[] MPEG2SSPLL = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x09, 0x30, 0x00];
    /// <summary>
    /// MPEG-2 SSP ML
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 SSP ML coding
    /// </remarks>
    private static readonly byte[] MPEG2SSPML = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x01, 0x09, 0x31, 0x00];
    /// <summary>
    /// MPEG-4 Advanced Real-time Simple Profile Level 1
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-4 Advanced Real-time Simple Profile Level 1 coding
    /// </remarks>
    private static readonly byte[] MPEG4AdvancedRealTimeSimpleProfileLevel1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x04, 0x01, 0x02, 0x02, 0x01, 0x20, 0x02, 0x01];
    /// <summary>
    /// MPEG-4 Advanced Real-time Simple Profile Level 2
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-4 Advanced Real-time Simple Profile Level 2 coding
    /// </remarks>
    private static readonly byte[] MPEG4AdvancedRealTimeSimpleProfileLevel2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x04, 0x01, 0x02, 0x02, 0x01, 0x20, 0x02, 0x02];
    /// <summary>
    /// MPEG-4 Advanced Real-time Simple Profile Level 3
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-4 Advanced Real-time Simple Profile Level 3 coding
    /// </remarks>
    private static readonly byte[] MPEG4AdvancedRealTimeSimpleProfileLevel3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x04, 0x01, 0x02, 0x02, 0x01, 0x20, 0x02, 0x03];
    /// <summary>
    /// MPEG-4 Advanced Real-time Simple Profile Level 4
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-4 Advanced Real-time Simple Profile Level 4 coding
    /// </remarks>
    private static readonly byte[] MPEG4AdvancedRealTimeSimpleProfileLevel4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x04, 0x01, 0x02, 0x02, 0x01, 0x20, 0x02, 0x04];
    /// <summary>
    /// MPEG-4 Core Studio Profile Level 1
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-4 Core Studio Profile Level 1 coding
    /// </remarks>
    private static readonly byte[] MPEG4CoreStudioProfileLevel1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x04, 0x01, 0x02, 0x02, 0x01, 0x20, 0x11, 0x01];
    /// <summary>
    /// MPEG-4 Core Studio Profile Level 2
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-4 Core Studio Profile Level 2 coding
    /// </remarks>
    private static readonly byte[] MPEG4CoreStudioProfileLevel2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x04, 0x01, 0x02, 0x02, 0x01, 0x20, 0x11, 0x02];
    /// <summary>
    /// MPEG-4 Core Studio Profile Level 3
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-4 Core Studio Profile Level 3 coding
    /// </remarks>
    private static readonly byte[] MPEG4CoreStudioProfileLevel3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x04, 0x01, 0x02, 0x02, 0x01, 0x20, 0x11, 0x03];
    /// <summary>
    /// MPEG-4 Core Studio Profile Level 4
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-4 Core Studio Profile Level 4 coding
    /// </remarks>
    private static readonly byte[] MPEG4CoreStudioProfileLevel4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x04, 0x01, 0x02, 0x02, 0x01, 0x20, 0x11, 0x04];
    /// <summary>
    /// MPEG-4 Part2 Video
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-4 Part 2 Compressed Video (natural visual)
    /// </remarks>
    private static readonly byte[] MPEG4Part2Video = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x04, 0x01, 0x02, 0x02, 0x01, 0x20, 0x00, 0x00];
    /// <summary>
    /// MPEG-4 Simple Studio Profile Level 1
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-4 Simple Studio Profile Level 1 coding
    /// </remarks>
    private static readonly byte[] MPEG4SimpleStudioProfileLevel1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x04, 0x01, 0x02, 0x02, 0x01, 0x20, 0x10, 0x01];
    /// <summary>
    /// MPEG-4 Simple Studio Profile Level 2
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-4 Simple Studio Profile Level 2 coding
    /// </remarks>
    private static readonly byte[] MPEG4SimpleStudioProfileLevel2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x04, 0x01, 0x02, 0x02, 0x01, 0x20, 0x10, 0x02];
    /// <summary>
    /// MPEG-4 Simple Studio Profile Level 3
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-4 Simple Studio Profile Level 3 coding
    /// </remarks>
    private static readonly byte[] MPEG4SimpleStudioProfileLevel3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x04, 0x01, 0x02, 0x02, 0x01, 0x20, 0x10, 0x03];
    /// <summary>
    /// MPEG-4 Simple Studio Profile Level 4
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-4 Simple Studio Profile Level 4 coding
    /// </remarks>
    private static readonly byte[] MPEG4SimpleStudioProfileLevel4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x04, 0x01, 0x02, 0x02, 0x01, 0x20, 0x10, 0x04];
    /// <summary>
    /// MPEG-4 Simple Studio Profile Level 5
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-4 Simple Studio Profile Level 5 coding
    /// </remarks>
    private static readonly byte[] MPEG4SimpleStudioProfileLevel5 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x01, 0x02, 0x02, 0x01, 0x20, 0x10, 0x05];
    /// <summary>
    /// MPEG-4 Simple Studio Profile Level 6
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-4 Simple Studio Profile Level 6 coding
    /// </remarks>
    private static readonly byte[] MPEG4SimpleStudioProfileLevel6 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x01, 0x02, 0x02, 0x01, 0x20, 0x10, 0x06];
    /// <summary>
    /// MPEG Compression
    /// </summary>
    /// <remarks>
    /// Identifies MPEG Compressed Picture Coding
    /// </remarks>
    private static readonly byte[] MPEGCompression = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x02, 0x01, 0x00, 0x00, 0x00];
    /// <summary>
    /// Music and Effects
    /// </summary>
    /// <remarks>
    /// Identifies a mix of the Main Program with no dialogue
    /// </remarks>
    private static readonly byte[] MusicAndEffects = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x01, 0x03, 0x04, 0x00];
    /// <summary>
    /// MXF-GC AAC ADIF
    /// </summary>
    /// <remarks>
    /// Identifies container for MPEG-2/4 ADIF
    /// </remarks>
    private static readonly byte[] MXF_GC_AAC_ADIF = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x16, 0x00, 0x00];
    /// <summary>
    /// MXF-GC AAC ADIF Clip Wrapped
    /// </summary>
    /// <remarks>
    /// Identifies container for Clip Wrapped MPEG-2/4 ADIF
    /// </remarks>
    private static readonly byte[] MXF_GC_AAC_ADIF_Clip_Wrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x16, 0x02, 0x00];
    /// <summary>
    /// MXF-GC AAC ADIF Custom Wrapped
    /// </summary>
    /// <remarks>
    /// Identifies container for Custom Wrapped MPEG-2/4 ADIF
    /// </remarks>
    private static readonly byte[] MXF_GC_AAC_ADIF_Custom_Wrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x16, 0x03, 0x00];
    /// <summary>
    /// MXF-GC AAC ADIF Frame Wrapped
    /// </summary>
    /// <remarks>
    /// Identifies container for Frame Wrapped MPEG-2/4 ADIF
    /// </remarks>
    private static readonly byte[] MXF_GC_AAC_ADIF_Frame_Wrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x16, 0x01, 0x00];
    /// <summary>
    /// MXF-GC AAC ADTS
    /// </summary>
    /// <remarks>
    /// Identifies container for MPEG-2/4 ADTS
    /// </remarks>
    private static readonly byte[] MXF_GC_AAC_ADTS = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x17, 0x00, 0x00];
    /// <summary>
    /// MXF-GC AAC ADTS Clip Wrapped
    /// </summary>
    /// <remarks>
    /// Identifies container for Clip Wrapped MPEG-2/4 ADTS
    /// </remarks>
    private static readonly byte[] MXF_GC_AAC_ADTS_Clip_Wrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x17, 0x02, 0x00];
    /// <summary>
    /// MXF-GC AAC ADTS Custom Wrapped
    /// </summary>
    /// <remarks>
    /// Identifies container for Custom Wrapped MPEG-2/4 ADTS
    /// </remarks>
    private static readonly byte[] MXF_GC_AAC_ADTS_Custom_Wrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x17, 0x03, 0x00];
    /// <summary>
    /// MXF-GC AAC ADTS Frame Wrapped
    /// </summary>
    /// <remarks>
    /// Identifies container for Frame Wrapped MPEG-2/4 ADTS
    /// </remarks>
    private static readonly byte[] MXF_GC_AAC_ADTS_Frame_Wrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x17, 0x01, 0x00];
    /// <summary>
    /// MXF-GC AAC LATM-LOAS
    /// </summary>
    /// <remarks>
    /// Identifies container for MPEG-4 LATM/LOAS
    /// </remarks>
    private static readonly byte[] MXF_GC_AAC_LATM_LOAS = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x18, 0x00, 0x00];
    /// <summary>
    /// MXF-GC AAC LATM-LOAS Clip Wrapped
    /// </summary>
    /// <remarks>
    /// Identifies container for Clip Wrapped MPEG-4 LATM/LOAS
    /// </remarks>
    private static readonly byte[] MXF_GC_AAC_LATM_LOAS_Clip_Wrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x18, 0x02, 0x00];
    /// <summary>
    /// MXF-GC AAC LATM-LOAS Custom Wrapped
    /// </summary>
    /// <remarks>
    /// Identifies container for Custom Wrapped MPEG-4 LATM/LOAS
    /// </remarks>
    private static readonly byte[] MXF_GC_AAC_LATM_LOAS_Custom_Wrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x18, 0x03, 0x00];
    /// <summary>
    /// MXF-GC AAC LATM-LOAS Frame Wrapped
    /// </summary>
    /// <remarks>
    /// Identifies container for Frame Wrapped MPEG-4 LATM/LOAS
    /// </remarks>
    private static readonly byte[] MXF_GC_AAC_LATM_LOAS_Frame_Wrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x18, 0x01, 0x00];
    /// <summary>
    /// MXF-GC IAData Frame Wrapped
    /// </summary>
    /// <remarks>
    /// Identifies Container for Frame Wrapped Immersive Audio Data
    /// </remarks>
    private static readonly byte[] MXF_GC_IAData_Frame_Wrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x05, 0x0E, 0x09, 0x06, 0x05, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// MXF Application Metadata Schemes
    /// </summary>
    /// <remarks>
    /// Identifies MXF Application Metadata Schemes
    /// </remarks>
    private static readonly byte[] MXFApplicationMetadataSchemes = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// MXF Cryptographic DM Scheme
    /// </summary>
    /// <remarks>
    /// Identifies the MXF Cryptographic DMS
    /// </remarks>
    private static readonly byte[] MXFCryptographicDMScheme = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x07, 0x0D, 0x01, 0x04, 0x01, 0x02, 0x00, 0x00, 0x00];
    /// <summary>
    /// MXF Cryptographic Framework Label
    /// </summary>
    /// <remarks>
    /// Identifies the cryptographic framework for the DC28 MXF cryptographic DM scheme
    /// </remarks>
    private static readonly byte[] MXFCryptographicFrameworkLabel = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x07, 0x0D, 0x01, 0x04, 0x01, 0x02, 0x01, 0x01, 0x00];
    /// <summary>
    /// MXF Cryptographic Scheme Version-1
    /// </summary>
    /// <remarks>
    /// Identifies version 1 of the MXF Cryptographic DMS
    /// </remarks>
    private static readonly byte[] MXFCryptographicSchemeVersion1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x07, 0x0D, 0x01, 0x04, 0x01, 0x02, 0x01, 0x00, 0x00];
    /// <summary>
    /// MXF Descriptive Metadata Schemes
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF Descriptive Metadata
    /// </remarks>
    private static readonly byte[] MXFDescriptiveMetadataSchemes = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// MXF DMS-1
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF Descriptive Metadata Scheme 1
    /// </remarks>
    private static readonly byte[] MXFDMS1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x04, 0x01, 0x01, 0x00, 0x00, 0x00];
    /// <summary>
    /// MXF DMS-1 Clip Framework extended
    /// </summary>
    /// <remarks>
    /// Identifies the MXF DMS-1 Clip Framework constrained to the extended version
    /// </remarks>
    private static readonly byte[] MXFDMS1ClipFrameworkExtended = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x04, 0x0D, 0x01, 0x04, 0x01, 0x01, 0x02, 0x02, 0x02];
    /// <summary>
    /// MXF DMS-1 Clip Framework standard
    /// </summary>
    /// <remarks>
    /// Identifies the MXF DMS-1 Clip Framework constrained to the standard version
    /// </remarks>
    private static readonly byte[] MXFDMS1ClipFrameworkStandard = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x04, 0x0D, 0x01, 0x04, 0x01, 0x01, 0x02, 0x02, 0x01];
    /// <summary>
    /// MXF DMS-1 Production Framework extended
    /// </summary>
    /// <remarks>
    /// Identifies the MXF DMS-1 Production Framework constrained to the extended version
    /// </remarks>
    private static readonly byte[] MXFDMS1ProductionFrameworkExtended = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x04, 0x0D, 0x01, 0x04, 0x01, 0x01, 0x02, 0x01, 0x02];
    /// <summary>
    /// MXF DMS-1 Production Framework standard
    /// </summary>
    /// <remarks>
    /// Identifies the MXF DMS-1 Production Framework constrained to the standard version
    /// </remarks>
    private static readonly byte[] MXFDMS1ProductionFrameworkStandard = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x04, 0x0D, 0x01, 0x04, 0x01, 0x01, 0x02, 0x01, 0x01];
    /// <summary>
    /// MXF DMS-1 Scene Framework extended
    /// </summary>
    /// <remarks>
    /// Identifies the MXF DMS-1 Scene Framework constrained to the extended version
    /// </remarks>
    private static readonly byte[] MXFDMS1SceneFrameworkExtended = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x04, 0x0D, 0x01, 0x04, 0x01, 0x01, 0x02, 0x03, 0x02];
    /// <summary>
    /// MXF DMS-1 Scene Framework standard
    /// </summary>
    /// <remarks>
    /// Identifies the MXF DMS-1 Scene Framework constrained to the standard version
    /// </remarks>
    private static readonly byte[] MXFDMS1SceneFrameworkStandard = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x04, 0x0D, 0x01, 0x04, 0x01, 0x01, 0x02, 0x03, 0x01];
    /// <summary>
    /// MXF DMS-1 Version-1
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF DMS-1 version 1
    /// </remarks>
    private static readonly byte[] MXFDMS1Version1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x04, 0x01, 0x01, 0x01, 0x00, 0x00];
    /// <summary>
    /// MXF DMS-1 Version-1 constrained
    /// </summary>
    /// <remarks>
    /// The scheme is constrained to the defined version
    /// </remarks>
    private static readonly byte[] MXFDMS1Version1Constrained = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x04, 0x01, 0x01, 0x01, 0x01, 0x00];
    /// <summary>
    /// MXF DMS-1 Version-1 extended
    /// </summary>
    /// <remarks>
    /// The scheme has private, but backwards compatible, extensions to the defined version
    /// </remarks>
    private static readonly byte[] MXFDMS1Version1Extended = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x04, 0x01, 0x01, 0x01, 0x02, 0x00];
    /// <summary>
    /// MXF DMS-1 Version-2
    /// </summary>
    /// <remarks>
    /// Identifies the MXF DMS-1 version Version-2
    /// </remarks>
    private static readonly byte[] MXFDMS1Version2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x04, 0x0D, 0x01, 0x04, 0x01, 0x01, 0x02, 0x00, 0x00];
    /// <summary>
    /// MXF-DMS Structure Version-1
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF-DMS Structure Version 1
    /// </remarks>
    private static readonly byte[] MXFDMSStructureVersion1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x04, 0x01, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// MXF EIDR DM Scheme
    /// </summary>
    /// <remarks>
    /// Identifies the MXF EIDR DM Scheme
    /// </remarks>
    private static readonly byte[] MXFEIDRDMScheme = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x04, 0x01, 0x05, 0x00, 0x00, 0x00];
    /// <summary>
    /// MXF EIDR DM Scheme Version 1
    /// </summary>
    /// <remarks>
    /// Identifies the MXF EIDR DM Scheme Version 1
    /// </remarks>
    private static readonly byte[] MXFEIDRDMSchemeVersion1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x04, 0x01, 0x05, 0x01, 0x00, 0x00];
    /// <summary>
    /// MXF Essence Containers
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF Essence Containers
    /// </remarks>
    private static readonly byte[] MXFEssenceContainers = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// MXF Essence Containers Version-1
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF Essence Containers Version 1
    /// </remarks>
    private static readonly byte[] MXFEssenceContainersVersion1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// MXF-GC ACES Pictures
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF-GC mappings of ACES SMPTE ST 2065-4 Pictures
    /// </remarks>
    private static readonly byte[] MXFGCACESPictures = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x19, 0x00, 0x00];
    /// <summary>
    /// MXF-GC AES-BWF Audio
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF-GC Mappings of AES3 and Broadcast Wave audio data
    /// </remarks>
    private static readonly byte[] MXFGCAESBWFAudio = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x06, 0x00, 0x00];
    /// <summary>
    /// MXF-GC A-law Audio Mappings
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF-GC Mappings using A-law Compressed Audio
    /// </remarks>
    private static readonly byte[] MXFGCALawAudioMappings = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0A, 0x00, 0x00];
    /// <summary>
    /// ARRIRAW Frame-Wrapped HDE-Encoded Essence Container
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC ARRIRAW Frame-Wrapped High Density Essence Container
    /// </remarks>
    private static readonly byte[] MXFGCARRIRAWFrameWrappedHDEEncoded = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x22, 0x02, 0x00];
    /// <summary>
    /// ARRIRAW Frame-Wrapped Packed Essence Container
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC ARRIRAW Frame-Wrapped Essence Container
    /// </remarks>
    private static readonly byte[] MXFGCARRIRAWFrameWrappedPacked = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x22, 0x01, 0x00];
    /// <summary>
    /// MXF-GC  AVC Byte Stream
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStream = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x00, 0x00];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-0
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x60, 0x00];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-0 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-0 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream0SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x60, 0x02];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-0 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-0 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream0SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x60, 0x07];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-0 SID CustomFixedAudioSize-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-0 SID CustomFixedAudioSize-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream0SIDCustomFixedAudioSizeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x60, 0x05];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-0 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-0 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream0SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x60, 0x08];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-0 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-0 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream0SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x60, 0x06];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-0 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-0 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream0SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x60, 0x03];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-0 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-0 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream0SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x60, 0x7F];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-0 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-0 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream0SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x60, 0x09];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-0 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-0 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream0SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x60, 0x01];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-10
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6A, 0x00];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-10 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-10 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream10SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6A, 0x02];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-10 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-10 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream10SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6A, 0x07];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-10 SID CustomFixedAudioSize-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-10 SID CustomFixedAudioSize-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream10SIDCustomFixedAudioSizeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6A, 0x05];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-10 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-10 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream10SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6A, 0x08];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-10 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-10 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream10SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6A, 0x06];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-10 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-10 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream10SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6A, 0x03];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-10 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-10 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream10SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6A, 0x7F];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-10 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-10 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream10SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6A, 0x09];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-10 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-10 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream10SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6A, 0x01];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-11
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6B, 0x00];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-11 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-11 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream11SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6B, 0x02];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-11 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-11 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream11SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6B, 0x07];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-11 SID CustomFixedAudioSize-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-11 SID CustomFixedAudioSize-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream11SIDCustomFixedAudioSizeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6B, 0x05];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-11 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-11 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream11SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6B, 0x08];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-11 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-11 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream11SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6B, 0x06];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-11 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-11 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream11SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6B, 0x03];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-11 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-11 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream11SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6B, 0x7F];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-11 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-11 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream11SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6B, 0x09];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-11 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-11 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream11SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6B, 0x01];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-12
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6C, 0x00];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-12 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-12 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream12SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6C, 0x02];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-12 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-12 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream12SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6C, 0x07];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-12 SID CustomFixedAudioSize-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-12 SID CustomFixedAudioSize-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream12SIDCustomFixedAudioSizeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6C, 0x05];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-12 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-12 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream12SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6C, 0x08];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-12 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-12 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream12SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6C, 0x06];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-12 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-12 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream12SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6C, 0x03];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-12 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-12 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream12SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6C, 0x7F];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-12 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-12 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream12SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6C, 0x09];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-12 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-12 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream12SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6C, 0x01];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-13
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6D, 0x00];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-13 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-13 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream13SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6D, 0x02];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-13 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-13 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream13SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6D, 0x07];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-13 SID CustomFixedAudioSize-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-13 SID CustomFixedAudioSize-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream13SIDCustomFixedAudioSizeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6D, 0x05];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-13 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-13 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream13SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6D, 0x08];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-13 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-13 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream13SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6D, 0x06];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-13 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-13 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream13SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6D, 0x03];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-13 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-13 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream13SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6D, 0x7F];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-13 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-13 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream13SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6D, 0x09];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-13 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-13 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream13SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6D, 0x01];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-14
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6E, 0x00];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-14 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-14 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream14SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6E, 0x02];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-14 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-14 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream14SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6E, 0x07];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-14 SID CustomFixedAudioSize-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-14 SID CustomFixedAudioSize-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream14SIDCustomFixedAudioSizeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6E, 0x05];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-14 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-14 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream14SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6E, 0x08];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-14 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-14 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream14SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6E, 0x06];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-14 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-14 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream14SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6E, 0x03];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-14 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-14 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream14SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6E, 0x7F];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-14 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-14 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream14SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6E, 0x09];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-14 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-14 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream14SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6E, 0x01];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-15
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6F, 0x00];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-15 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-15 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream15SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6F, 0x02];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-15 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-15 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream15SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6F, 0x07];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-15 SID CustomFixedAudioSize-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-15 SID CustomFixedAudioSize-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream15SIDCustomFixedAudioSizeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6F, 0x05];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-15 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-15 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream15SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6F, 0x08];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-15 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-15 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream15SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6F, 0x06];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-15 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-15 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream15SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6F, 0x03];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-15 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-15 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream15SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6F, 0x7F];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-15 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-15 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream15SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6F, 0x09];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-15 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-15 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream15SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x6F, 0x01];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-1
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x61, 0x00];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-1 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-1 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream1SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x61, 0x02];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-1 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-1 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream1SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x61, 0x07];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-1 SID CustomFixedAudioSize-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-1 SID CustomFixedAudioSize-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream1SIDCustomFixedAudioSizeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x61, 0x05];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-1 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-1 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream1SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x61, 0x08];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-1 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-1 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream1SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x61, 0x06];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-1 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-1 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream1SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x61, 0x03];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-1 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-1 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream1SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x61, 0x7F];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-1 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-1 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream1SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x61, 0x09];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-1 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-1 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream1SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x61, 0x01];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-2
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x62, 0x00];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-2 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-2 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream2SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x62, 0x02];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-2 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-2 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream2SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x62, 0x07];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-2 SID CustomFixedAudioSize-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-2 SID CustomFixedAudioSize-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream2SIDCustomFixedAudioSizeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x62, 0x05];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-2 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-2 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream2SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x62, 0x08];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-2 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-2 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream2SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x62, 0x06];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-2 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-2 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream2SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x62, 0x03];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-2 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-2 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream2SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x62, 0x7F];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-2 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-2 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream2SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x62, 0x09];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-2 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-2 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream2SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x62, 0x01];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-3
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x63, 0x00];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-3 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-3 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream3SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x63, 0x02];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-3 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-3 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream3SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x63, 0x07];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-3 SID CustomFixedAudioSize-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-3 SID CustomFixedAudioSize-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream3SIDCustomFixedAudioSizeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x63, 0x05];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-3 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-3 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream3SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x63, 0x08];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-3 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-3 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream3SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x63, 0x06];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-3 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-3 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream3SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x63, 0x03];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-3 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-3 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream3SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x63, 0x7F];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-3 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-3 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream3SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x63, 0x09];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-3 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-3 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream3SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x63, 0x01];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-4
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x64, 0x00];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-4 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-4 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream4SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x64, 0x02];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-4 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-4 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream4SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x64, 0x07];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-4 SID CustomFixedAudioSize-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-4 SID CustomFixedAudioSize-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream4SIDCustomFixedAudioSizeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x64, 0x05];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-4 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-4 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream4SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x64, 0x08];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-4 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-4 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream4SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x64, 0x06];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-4 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-4 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream4SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x64, 0x03];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-4 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-4 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream4SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x64, 0x7F];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-4 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-4 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream4SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x64, 0x09];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-4 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-4 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream4SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x64, 0x01];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-5
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x65, 0x00];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-5 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-5 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream5SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x65, 0x02];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-5 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-5 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream5SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x65, 0x07];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-5 SID CustomFixedAudioSize-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-5 SID CustomFixedAudioSize-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream5SIDCustomFixedAudioSizeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x65, 0x05];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-5 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-5 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream5SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x65, 0x08];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-5 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-5 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream5SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x65, 0x06];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-5 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-5 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream5SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x65, 0x03];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-5 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-5 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream5SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x65, 0x7F];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-5 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-5 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream5SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x65, 0x09];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-5 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-5 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream5SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x65, 0x01];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-6
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x66, 0x00];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-6 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-6 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream6SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x66, 0x02];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-6 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-6 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream6SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x66, 0x07];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-6 SID CustomFixedAudioSize-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-6 SID CustomFixedAudioSize-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream6SIDCustomFixedAudioSizeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x66, 0x05];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-6 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-6 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream6SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x66, 0x08];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-6 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-6 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream6SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x66, 0x06];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-6 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-6 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream6SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x66, 0x03];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-6 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-6 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream6SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x66, 0x7F];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-6 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-6 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream6SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x66, 0x09];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-6 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-6 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream6SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x66, 0x01];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-7
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x67, 0x00];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-7 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-7 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream7SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x67, 0x02];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-7 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-7 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream7SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x67, 0x07];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-7 SID CustomFixedAudioSize-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-7 SID CustomFixedAudioSize-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream7SIDCustomFixedAudioSizeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x67, 0x05];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-7 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-7 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream7SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x67, 0x08];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-7 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-7 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream7SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x67, 0x06];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-7 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-7 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream7SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x67, 0x03];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-7 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-7 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream7SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x67, 0x7F];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-7 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-7 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream7SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x67, 0x09];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-7 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-7 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream7SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x67, 0x01];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-8
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x68, 0x00];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-8 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-8 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream8SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x68, 0x02];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-8 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-8 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream8SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x68, 0x07];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-8 SID CustomFixedAudioSize-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-8 SID CustomFixedAudioSize-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream8SIDCustomFixedAudioSizeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x68, 0x05];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-8 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-8 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream8SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x68, 0x08];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-8 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-8 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream8SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x68, 0x06];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-8 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-8 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream8SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x68, 0x03];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-8 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-8 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream8SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x68, 0x7F];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-8 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-8 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream8SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x68, 0x09];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-8 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-8 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream8SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x68, 0x01];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-9
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x69, 0x00];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-9 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-9 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream9SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x69, 0x02];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-9 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-9 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream9SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x69, 0x07];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-9 SID CustomFixedAudioSize-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-9 SID CustomFixedAudioSize-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream9SIDCustomFixedAudioSizeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x69, 0x05];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-9 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-9 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream9SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x69, 0x08];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-9 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-9 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream9SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x69, 0x06];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-9 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-9 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream9SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x69, 0x03];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-9 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-9 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream9SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x69, 0x7F];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-9 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-9 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream9SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x69, 0x09];
    /// <summary>
    /// MXF-GC  AVC Byte Stream With VideoStream-9 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC Byte Stream With VideoStream-9 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCByteStreamWithVideoStream9SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x10, 0x69, 0x01];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStream = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x00, 0x00];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-0 SID
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x60, 0x00];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-0 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-0 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream0SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x60, 0x02];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-0 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-0 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream0SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x60, 0x07];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-0 SID CustomFixedAudioSize-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-0 SID CustomFixedAudioSize-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream0SIDCustomFixedAudioSizeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x60, 0x05];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-0 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-0 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream0SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x60, 0x08];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-0 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-0 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream0SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x60, 0x06];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-0 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-0 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream0SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x60, 0x03];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-0 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-0 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream0SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x60, 0x7F];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-0 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-0 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream0SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x60, 0x09];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-0 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-0 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream0SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x60, 0x01];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-10 SID
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6A, 0x00];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-10 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-10 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream10SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6A, 0x02];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-10 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-10 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream10SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6A, 0x07];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-10 SID CustomFixedAudioSize-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-10 SID CustomFixedAudioSize-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream10SIDCustomFixedAudioSizeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6A, 0x05];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-10 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-10 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream10SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6A, 0x08];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-10 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-10 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream10SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6A, 0x06];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-10 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-10 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream10SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6A, 0x03];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-10 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-10 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream10SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6A, 0x7F];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-10 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-10 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream10SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6A, 0x09];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-10 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-10 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream10SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6A, 0x01];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-11 SID
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6B, 0x00];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-11 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-11 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream11SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6B, 0x02];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-11 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-11 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream11SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6B, 0x07];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-11 SID CustomFixedAudioSize-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-11 SID CustomFixedAudioSize-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream11SIDCustomFixedAudioSizeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6B, 0x05];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-11 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-11 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream11SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6B, 0x08];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-11 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-11 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream11SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6B, 0x06];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-11 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-11 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream11SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6B, 0x03];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-11 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-11 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream11SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6B, 0x7F];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-11 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-11 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream11SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6B, 0x09];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-11 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-11 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream11SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6B, 0x01];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-12 SID
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6C, 0x00];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-12 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-12 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream12SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6C, 0x02];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-12 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-12 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream12SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6C, 0x07];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-12 SID CustomFixedAudioSize-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-12 SID CustomFixedAudioSize-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream12SIDCustomFixedAudioSizeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6C, 0x05];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-12 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-12 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream12SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6C, 0x08];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-12 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-12 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream12SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6C, 0x06];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-12 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-12 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream12SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6C, 0x03];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-12 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-12 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream12SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6C, 0x7F];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-12 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-12 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream12SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6C, 0x09];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-12 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-12 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream12SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6C, 0x01];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-13 SID
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6D, 0x00];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-13 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-13 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream13SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6D, 0x02];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-13 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-13 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream13SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6D, 0x07];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-13 SID CustomFixedAudioSize-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-13 SID CustomFixedAudioSize-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream13SIDCustomFixedAudioSizeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6D, 0x05];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-13 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-13 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream13SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6D, 0x08];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-13 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-13 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream13SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6D, 0x06];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-13 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-13 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream13SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6D, 0x03];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-13 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-13 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream13SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6D, 0x7F];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-13 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-13 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream13SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6D, 0x09];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-13 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-13 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream13SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6D, 0x01];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-14 SID
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6E, 0x00];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-14 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-14 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream14SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6E, 0x02];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-14 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-14 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream14SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6E, 0x07];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-14 SID CustomFixedAudioSize-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-14 SID CustomFixedAudioSize-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream14SIDCustomFixedAudioSizeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6E, 0x05];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-14 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-14 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream14SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6E, 0x08];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-14 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-14 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream14SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6E, 0x06];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-14 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-14 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream14SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6E, 0x03];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-14 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-14 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream14SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6E, 0x7F];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-14 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-14 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream14SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6E, 0x09];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-14 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-14 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream14SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6E, 0x01];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-15 SID
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6F, 0x00];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-15 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-15 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream15SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6F, 0x02];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-15 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-15 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream15SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6F, 0x07];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-15 SID CustomFixedAudioSize-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-15 SID CustomFixedAudioSize-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream15SIDCustomFixedAudioSizeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6F, 0x05];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-15 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-15 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream15SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6F, 0x08];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-15 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-15 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream15SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6F, 0x06];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-15 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-15 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream15SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6F, 0x03];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-15 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-15 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream15SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6F, 0x7F];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-15 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-15 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream15SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6F, 0x09];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-15 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-15 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream15SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x6F, 0x01];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-1 SID
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x61, 0x00];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-1 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-1 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream1SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x61, 0x02];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-1 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-1 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream1SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x61, 0x07];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-1 SID CustomFixedAudioSize-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-1 SID CustomFixedAudioSize-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream1SIDCustomFixedAudioSizeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x61, 0x05];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-1 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-1 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream1SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x61, 0x08];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-1 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-1 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream1SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x61, 0x06];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-1 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-1 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream1SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x61, 0x03];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-1 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-1 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream1SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x61, 0x7F];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-1 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-1 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream1SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x61, 0x09];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-1 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-1 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream1SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x61, 0x01];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-2 SID
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x62, 0x00];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-2 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-2 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream2SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x62, 0x02];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-2 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-2 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream2SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x62, 0x07];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-2 SID CustomFixedAudioSize-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-2 SID CustomFixedAudioSize-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream2SIDCustomFixedAudioSizeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x62, 0x05];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-2 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-2 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream2SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x62, 0x08];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-2 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-2 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream2SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x62, 0x06];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-2 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-2 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream2SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x62, 0x03];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-2 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-2 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream2SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x62, 0x7F];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-2 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-2 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream2SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x62, 0x09];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-2 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-2 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream2SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x62, 0x01];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-3 SID
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x63, 0x00];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-3 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-3 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream3SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x63, 0x02];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-3 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-3 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream3SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x63, 0x07];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-3 SID CustomFixedAudioSize-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-3 SID CustomFixedAudioSize-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream3SIDCustomFixedAudioSizeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x63, 0x05];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-3 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-3 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream3SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x63, 0x08];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-3 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-3 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream3SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x63, 0x06];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-3 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-3 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream3SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x63, 0x03];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-3 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-3 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream3SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x63, 0x7F];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-3 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-3 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream3SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x63, 0x09];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-3 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-3 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream3SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x63, 0x01];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-4 SID
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x64, 0x00];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-4 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-4 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream4SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x64, 0x02];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-4 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-4 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream4SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x64, 0x07];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-4 SID CustomFixedAudioSize-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-4 SID CustomFixedAudioSize-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream4SIDCustomFixedAudioSizeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x64, 0x05];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-4 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-4 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream4SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x64, 0x08];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-4 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-4 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream4SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x64, 0x06];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-4 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-4 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream4SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x64, 0x03];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-4 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-4 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream4SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x64, 0x7F];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-4 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-4 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream4SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x64, 0x09];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-4 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-4 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream4SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x64, 0x01];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-5 SID
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x65, 0x00];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-5 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-5 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream5SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x65, 0x02];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-5 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-5 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream5SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x65, 0x07];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-5 SID CustomFixedAudioSize-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-5 SID CustomFixedAudioSize-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream5SIDCustomFixedAudioSizeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x65, 0x05];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-5 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-5 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream5SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x65, 0x08];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-5 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-5 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream5SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x65, 0x06];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-5 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-5 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream5SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x65, 0x03];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-5 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-5 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream5SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x65, 0x7F];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-5 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-5 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream5SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x65, 0x09];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-5 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-5 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream5SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x65, 0x01];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-6 SID
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x66, 0x00];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-6 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-6 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream6SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x66, 0x02];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-6 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-6 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream6SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x66, 0x07];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-6 SID CustomFixedAudioSize-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-6 SID CustomFixedAudioSize-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream6SIDCustomFixedAudioSizeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x66, 0x05];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-6 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-6 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream6SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x66, 0x08];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-6 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-6 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream6SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x66, 0x06];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-6 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-6 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream6SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x66, 0x03];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-6 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-6 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream6SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x66, 0x7F];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-6 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-6 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream6SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x66, 0x09];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-6 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-6 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream6SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x66, 0x01];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-7 SID
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x67, 0x00];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-7 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-7 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream7SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x67, 0x02];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-7 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-7 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream7SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x67, 0x07];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-7 SID CustomFixedAudioSize-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-7 SID CustomFixedAudioSize-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream7SIDCustomFixedAudioSizeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x67, 0x05];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-7 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-7 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream7SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x67, 0x08];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-7 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-7 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream7SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x67, 0x06];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-7 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-7 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream7SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x67, 0x03];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-7 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-7 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream7SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x67, 0x7F];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-7 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-7 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream7SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x67, 0x09];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-7 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-7 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream7SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x67, 0x01];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-8 SID
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x68, 0x00];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-8 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-8 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream8SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x68, 0x02];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-8 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-8 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream8SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x68, 0x07];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-8 SID CustomFixedAudioSize-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-8 SID CustomFixedAudioSize-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream8SIDCustomFixedAudioSizeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x68, 0x05];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-8 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-8 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream8SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x68, 0x08];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-8 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-8 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream8SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x68, 0x06];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-8 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-8 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream8SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x68, 0x03];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-8 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-8 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream8SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x68, 0x7F];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-8 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-8 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream8SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x68, 0x09];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-8 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-8 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream8SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x68, 0x01];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-9 SID
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x69, 0x00];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-9 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-9 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream9SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x69, 0x02];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-9 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-9 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream9SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x69, 0x07];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-9 SID CustomFixedAudioSize-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-9 SID CustomFixedAudioSize-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream9SIDCustomFixedAudioSizeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x69, 0x05];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-9 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-9 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream9SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x69, 0x08];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-9 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-9 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream9SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x69, 0x06];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-9 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-9 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream9SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x69, 0x03];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-9 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-9 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream9SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x69, 0x7F];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-9 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-9 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream9SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x69, 0x09];
    /// <summary>
    /// MXF-GC  AVC NAL Unit Stream With VideoStream-9 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  AVC NAL Unit Stream With VideoStream-9 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCAVCNALUnitStreamWithVideoStream9SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0F, 0x69, 0x01];
    /// <summary>
    /// MXF-GC Clip-wrapped ACES Pictures
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped ACES SMPTE ST 2065-4 images
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedACESPictures = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x19, 0x02, 0x00];
    /// <summary>
    /// MXF-GC Clip-wrapped AES3 audio data
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped AES3 audio data
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedAES3AudioData = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x06, 0x04, 0x00];
    /// <summary>
    /// MXF-GC Clip-wrapped A-law Audio
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped A-law compressed audio
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedALawAudio = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0A, 0x02, 0x00];
    /// <summary>
    /// MXF-GC Clip-wrapped Broadcast Wave audio data
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped Broadcast Wave audio data
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedBroadcastWaveAudioData = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x06, 0x02, 0x00];
    /// <summary>
    /// MXF-GC Clip-wrapped DV-based 1080x50I 100Mbps
    /// </summary>
    /// <remarks>
    /// Identifier for MXF MXF-GC Clip-wrapped compressed data of a DV-based source at 1080x50I
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedDVBased1080x50I100Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x61, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped DV-based 1080x59.94I 100Mbps
    /// </summary>
    /// <remarks>
    /// Identifier for MXF MXF-GC Clip-wrapped compressed data of a DV-based source at 1080x59.94I
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedDVBased1080x5994I100Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x60, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped DV-based 525x59.94I 25Mbps
    /// </summary>
    /// <remarks>
    /// Identifier for MXF MXF-GC Clip-wrapped compressed data of a DV-based source at 525x59.94I
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedDVBased525x5994I25Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x40, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped DV-based 525x59.94I 50Mbps
    /// </summary>
    /// <remarks>
    /// Identifier for MXF MXF-GC Clip-wrapped compressed data of a DV-based source at 525x59.94I
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedDVBased525x5994I50Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x50, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped DV-based 625x50I 25Mbps
    /// </summary>
    /// <remarks>
    /// Identifier for MXF MXF-GC Clip-wrapped compressed data of a DV-based source at 625x50I
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedDVBased625x50I25Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x41, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped DV-based 625x50I 50Mbps
    /// </summary>
    /// <remarks>
    /// Identifier for MXF MXF-GC Clip-wrapped compressed data of a DV-based source at 625x50I
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedDVBased625x50I50Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x51, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped DV-based 720x50P 100Mbps
    /// </summary>
    /// <remarks>
    /// Identifier for MXF MXF-GC Clip-wrapped compressed data of a DV-based source at 720x50P
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedDVBased720x50P100Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x63, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped DV-based 720x59.94P 100Mbps
    /// </summary>
    /// <remarks>
    /// Identifier for MXF MXF-GC Clip-wrapped compressed data of a DV-based source at 720x59.94P
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedDVBased720x5994P100Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x62, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped DV-based UndefinedSource
    /// </summary>
    /// <remarks>
    /// Identifier for MXF MXF-GC Clip-wrapped compressed data of an undefined source
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedDVBasedUndefinedSource = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x7F, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped Encrypted Data
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC, Clip-wrapped generic container encrypted according to SMPTE ST 429-6
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedEncryptedData = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0B, 0x02, 0x00];
    /// <summary>
    /// MXF-GC Clip-wrapped IEC-DV 525x59.94I 25Mbps
    /// </summary>
    /// <remarks>
    /// Identifier for MXF Clip-wrapped IEC-DV compressed data of a 525x59.94I source at 25Mbps
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedIECDV525x5994I25Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x01, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped IEC-DV 525x59.94I 25Mbps SMPTE-322M
    /// </summary>
    /// <remarks>
    /// Identifier for MXF Clip-wrapped IEC-DV compressed data of a 525x59.94I source at 25Mbps
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedIECDV525x5994I25MbpsSMPTE322M = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x03, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped IEC-DV 625x50I 25Mbps
    /// </summary>
    /// <remarks>
    /// Identifier for MXF Clip-wrapped IEC-DV compressed data of a 625x50I source at 25Mbps
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedIECDV625x50I25Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x02, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped IEC-DV 625x50I 25Mbps SMPTE-322M
    /// </summary>
    /// <remarks>
    /// Identifier for MXF Clip-wrapped IEC-DV compressed data of a 625x50I source at 25Mbps
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedIECDV625x50I25MbpsSMPTE322M = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x04, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped IEC-DV UndefinedSource 25Mbps
    /// </summary>
    /// <remarks>
    /// Identifier for MXF Clip-wrapped IEC-DV compressed data of an undefined source
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedIECDVUndefinedSource25Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x3F, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped JPEG XS Pictures
    /// </summary>
    /// <remarks>
    /// Identifies Clip-wrapping of JPEG XS pictures
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedJPEGXSPictures = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x21, 0x03, 0x00];
    /// <summary>
    /// MXF-GC Clip-wrapped MGA
    /// </summary>
    /// <remarks>
    /// Identifies a Clip-wrapped MGA signal
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMGA = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x25, 0x02, 0x00];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES 13522Stream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with 13522Stream SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGES13522StreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x73, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES AncStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with AncStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESAncStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x79, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES AudioStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with AudioStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESAudioStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x40, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES AudioStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with AudioStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESAudioStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4A, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES AudioStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with AudioStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESAudioStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4B, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES AudioStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with AudioStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESAudioStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4C, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES AudioStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with AudioStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESAudioStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4D, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES AudioStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with AudioStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESAudioStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4E, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES AudioStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with AudioStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESAudioStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4F, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES AudioStream-16 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with AudioStream-16 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESAudioStream16SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x50, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES AudioStream-17 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with AudioStream-17 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESAudioStream17SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x51, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES AudioStream-18 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with AudioStream-18 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESAudioStream18SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x52, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES AudioStream-19 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with AudioStream-19 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESAudioStream19SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x53, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES AudioStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with AudioStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESAudioStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x41, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES AudioStream-20 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with AudioStream-20 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESAudioStream20SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x54, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES AudioStream-21 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with AudioStream-21 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESAudioStream21SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x55, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES AudioStream-22 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with AudioStream-22 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESAudioStream22SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x56, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES AudioStream-23 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with AudioStream-23 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESAudioStream23SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x57, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES AudioStream-24 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with AudioStream-24 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESAudioStream24SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x58, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES AudioStream-25 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with AudioStream-25 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESAudioStream25SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x59, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES AudioStream-26 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with AudioStream-26 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESAudioStream26SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5A, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES AudioStream-27 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with AudioStream-27 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESAudioStream27SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5B, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES AudioStream-28 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with AudioStream-28 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESAudioStream28SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5C, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES AudioStream-29 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with AudioStream-29 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESAudioStream29SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5D, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES AudioStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with AudioStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESAudioStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x42, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES AudioStream-30 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with AudioStream-30 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESAudioStream30SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5E, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES AudioStream-31 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with AudioStream-31 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESAudioStream31SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5F, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES AudioStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with AudioStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESAudioStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x43, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES AudioStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with AudioStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESAudioStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x44, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES AudioStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with AudioStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESAudioStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x45, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES AudioStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with AudioStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESAudioStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x46, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES AudioStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with AudioStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESAudioStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x47, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES AudioStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with AudioStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESAudioStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x48, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES AudioStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with AudioStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESAudioStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x49, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES DSMCCStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with DSMCCStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESDSMCCStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x72, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES ECMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with ECMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESECMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x70, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES EMMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with EMMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESEMMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x71, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES FlexMuxStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with FlexMuxStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESFlexMuxStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x7B, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES ITURec222-A SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with ITURec222-A SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESITURec222ASID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x74, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES ITURec222-B SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with ITURec222-B SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESITURec222BSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x75, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES ITURec222-C SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with ITURec222-C SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESITURec222CSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x76, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES ITURec222-D SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with ITURec222-D SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESITURec222DSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x77, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES ITURec222-E SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with ITURec222-E SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESITURec222ESID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x78, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES PaddingStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with PaddingStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESPaddingStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3E, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES PrivateStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with PrivateStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESPrivateStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3D, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES PrivateStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with PrivateStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESPrivateStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3F, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES ProgStreamDir SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with ProgStreamDir SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESProgStreamDirSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x7F, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES ProgStreamMap SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with ProgStreamMap SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESProgStreamMapSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3C, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES SLPackStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with SLPackStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESSLPackStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x7A, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES VideoStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with VideoStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESVideoStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x60, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES VideoStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with VideoStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESVideoStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6A, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES VideoStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with VideoStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESVideoStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6B, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES VideoStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with VideoStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESVideoStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6C, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES VideoStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with VideoStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESVideoStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6D, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES VideoStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with VideoStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESVideoStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6E, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES VideoStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with VideoStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESVideoStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6F, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES VideoStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with VideoStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESVideoStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x61, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES VideoStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with VideoStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESVideoStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x62, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES VideoStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with VideoStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESVideoStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x63, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES VideoStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with VideoStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESVideoStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x64, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES VideoStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with VideoStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESVideoStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x65, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES VideoStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with VideoStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESVideoStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x66, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES VideoStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with VideoStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESVideoStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x67, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES VideoStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with VideoStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESVideoStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x68, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-ES VideoStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Clip-wrapped MPEG-ES with VideoStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGESVideoStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x69, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES 13522Stream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with 13522Stream SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPES13522StreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x73, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES AncStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with AncStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESAncStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x79, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES AudioStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with AudioStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESAudioStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x40, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES AudioStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with AudioStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESAudioStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4A, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES AudioStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with AudioStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESAudioStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4B, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES AudioStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with AudioStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESAudioStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4C, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES AudioStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with AudioStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESAudioStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4D, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES AudioStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with AudioStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESAudioStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4E, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES AudioStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with AudioStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESAudioStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4F, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES AudioStream-16 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with AudioStream-16 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESAudioStream16SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x50, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES AudioStream-17 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with AudioStream-17 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESAudioStream17SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x51, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES AudioStream-18 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with AudioStream-18 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESAudioStream18SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x52, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES AudioStream-19 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with AudioStream-19 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESAudioStream19SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x53, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES AudioStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with AudioStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESAudioStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x41, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES AudioStream-20 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with AudioStream-20 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESAudioStream20SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x54, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES AudioStream-21 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with AudioStream-21 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESAudioStream21SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x55, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES AudioStream-22 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with AudioStream-22 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESAudioStream22SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x56, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES AudioStream-23 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with AudioStream-23 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESAudioStream23SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x57, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES AudioStream-24 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with AudioStream-24 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESAudioStream24SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x58, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES AudioStream-25 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with AudioStream-25 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESAudioStream25SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x59, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES AudioStream-26 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with AudioStream-26 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESAudioStream26SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5A, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES AudioStream-27 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with AudioStream-27 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESAudioStream27SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5B, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES AudioStream-28 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with AudioStream-28 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESAudioStream28SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5C, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES AudioStream-29 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with AudioStream-29 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESAudioStream29SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5D, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES AudioStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with AudioStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESAudioStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x42, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES AudioStream-30 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with AudioStream-30 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESAudioStream30SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5E, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES AudioStream-31 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with AudioStream-31 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESAudioStream31SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5F, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES AudioStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with AudioStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESAudioStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x43, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES AudioStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with AudioStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESAudioStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x44, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES AudioStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with AudioStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESAudioStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x45, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES AudioStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with AudioStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESAudioStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x46, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES AudioStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with AudioStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESAudioStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x47, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES AudioStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with AudioStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESAudioStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x48, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES AudioStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with AudioStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESAudioStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x49, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES DSMCCStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with DSMCCStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESDSMCCStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x72, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES ECMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with ECMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESECMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x70, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES EMMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with EMMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESEMMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x71, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES FlexMuxStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with FlexMuxStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESFlexMuxStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x7B, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES ITURec222-A SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with ITURec222-A SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESITURec222ASID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x74, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES ITURec222-B SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with ITURec222-B SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESITURec222BSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x75, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES ITURec222-C SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with ITURec222-C SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESITURec222CSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x76, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES ITURec222-D SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with ITURec222-D SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESITURec222DSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x77, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES ITURec222-E SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with ITURec222-E SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESITURec222ESID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x78, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES PaddingStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with PaddingStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESPaddingStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3E, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES PrivateStream1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with PrivateStream1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESPrivateStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3D, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES PrivateStream2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with PrivateStream2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESPrivateStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3F, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES ProgStreamDir SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with ProgStreamDir SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESProgStreamDirSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x7F, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES ProgStreamMap SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with ProgStreamMap SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESProgStreamMapSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3C, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES SLPackStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with SLPackStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESSLPackStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x7A, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES VideoStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with VideoStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESVideoStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x60, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES VideoStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with VideoStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESVideoStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6A, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES VideoStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with VideoStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESVideoStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6B, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES VideoStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with VideoStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESVideoStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6C, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES VideoStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with VideoStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESVideoStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6D, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES VideoStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with VideoStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESVideoStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6E, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES VideoStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with VideoStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESVideoStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6F, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES VideoStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with VideoStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESVideoStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x61, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES VideoStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with VideoStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESVideoStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x62, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES VideoStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with VideoStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESVideoStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x63, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES VideoStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with VideoStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESVideoStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x64, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES VideoStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with VideoStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESVideoStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x65, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES VideoStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with VideoStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESVideoStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x66, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES VideoStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with VideoStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESVideoStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x67, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES VideoStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with VideoStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESVideoStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x68, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PES VideoStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PES with VideoStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPESVideoStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x69, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS 13522Stream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with 13522Stream SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPS13522StreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x73, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS AncStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with AncStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSAncStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x79, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS AudioStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with AudioStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSAudioStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x40, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS AudioStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with AudioStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSAudioStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x4A, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS AudioStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with AudioStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSAudioStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x4B, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS AudioStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with AudioStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSAudioStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x4C, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS AudioStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with AudioStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSAudioStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x4D, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS AudioStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with AudioStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSAudioStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x4E, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS AudioStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with AudioStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSAudioStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x4F, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS AudioStream-16 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with AudioStream-16 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSAudioStream16SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x50, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS AudioStream-17 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with AudioStream-17 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSAudioStream17SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x51, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS AudioStream-18 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with AudioStream-18 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSAudioStream18SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x52, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS AudioStream-19 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with AudioStream-19 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSAudioStream19SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x53, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS AudioStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with AudioStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSAudioStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x41, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS AudioStream-20 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with AudioStream-20 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSAudioStream20SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x54, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS AudioStream-21 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with AudioStream-21 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSAudioStream21SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x55, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS AudioStream-22 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with AudioStream-22 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSAudioStream22SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x56, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS AudioStream-23 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with AudioStream-23 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSAudioStream23SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x57, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS AudioStream-24 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with AudioStream-24 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSAudioStream24SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x58, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS AudioStream-25 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with AudioStream-25 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSAudioStream25SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x59, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS AudioStream-26 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with AudioStream-26 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSAudioStream26SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x5A, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS AudioStream-27 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with AudioStream-27 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSAudioStream27SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x5B, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS AudioStream-28 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with AudioStream-28 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSAudioStream28SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x5C, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS AudioStream-29 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with AudioStream-29 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSAudioStream29SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x5D, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS AudioStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with AudioStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSAudioStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x42, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS AudioStream-30 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with AudioStream-30 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSAudioStream30SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x5E, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS AudioStream-31 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with AudioStream-31 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSAudioStream31SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x5F, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS AudioStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with AudioStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSAudioStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x43, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS AudioStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with AudioStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSAudioStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x44, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS AudioStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with AudioStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSAudioStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x45, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS AudioStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with AudioStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSAudioStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x46, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS AudioStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with AudioStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSAudioStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x47, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS AudioStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with AudioStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSAudioStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x48, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS AudioStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with AudioStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSAudioStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x49, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS DSMCCStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with DSMCCStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSDSMCCStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x72, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS ECMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with ECMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSECMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x70, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS EMMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with EMMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSEMMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x71, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS FlexMuxStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with FlexMuxStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSFlexMuxStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x7B, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS ITURec222-A SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with ITURec222-A SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSITURec222ASID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x74, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS ITURec222-B SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with ITURec222-B SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSITURec222BSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x75, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS ITURec222-C SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with ITURec222-C SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSITURec222CSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x76, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS ITURec222-D SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with ITURec222-D SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSITURec222DSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x77, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS ITURec222-E SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with ITURec222-E SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSITURec222ESID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x78, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS PaddingStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with PaddingStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSPaddingStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x3E, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS PrivateStream1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with PrivateStream1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSPrivateStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x3D, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS PrivateStream2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with PrivateStream2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSPrivateStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x3F, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS ProgStreamDir SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with ProgStreamDir SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSProgStreamDirSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x7F, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS ProgStreamMap SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with ProgStreamMap SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSProgStreamMapSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x3C, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS SLPackStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with SLPackStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSSLPackStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x7A, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS VideoStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with VideoStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSVideoStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x60, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS VideoStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with VideoStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSVideoStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x6A, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS VideoStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with VideoStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSVideoStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x6B, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS VideoStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with VideoStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSVideoStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x6C, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS VideoStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with VideoStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSVideoStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x6D, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS VideoStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with VideoStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSVideoStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x6E, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS VideoStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with VideoStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSVideoStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x6F, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS VideoStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with VideoStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSVideoStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x61, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS VideoStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with VideoStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSVideoStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x62, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS VideoStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with VideoStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSVideoStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x63, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS VideoStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with VideoStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSVideoStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x64, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS VideoStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with VideoStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSVideoStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x65, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS VideoStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with VideoStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSVideoStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x66, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS VideoStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with VideoStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSVideoStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x67, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS VideoStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with VideoStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSVideoStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x68, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-PS VideoStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-PS with VideoStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGPSVideoStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x69, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS 13522Stream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with 13522Stream SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTS13522StreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x73, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS AncStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with AncStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSAncStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x79, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS AudioStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with AudioStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSAudioStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x40, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS AudioStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with AudioStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSAudioStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x4A, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS AudioStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with AudioStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSAudioStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x4B, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS AudioStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with AudioStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSAudioStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x4C, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS AudioStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with AudioStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSAudioStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x4D, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS AudioStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with AudioStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSAudioStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x4E, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS AudioStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with AudioStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSAudioStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x4F, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS AudioStream-16 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with AudioStream-16 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSAudioStream16SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x50, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS AudioStream-17 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with AudioStream-17 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSAudioStream17SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x51, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS AudioStream-18 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with AudioStream-18 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSAudioStream18SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x52, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS AudioStream-19 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with AudioStream-19 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSAudioStream19SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x53, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS AudioStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with AudioStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSAudioStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x41, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS AudioStream-20 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with AudioStream-20 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSAudioStream20SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x54, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS AudioStream-21 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with AudioStream-21 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSAudioStream21SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x55, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS AudioStream-22 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with AudioStream-22 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSAudioStream22SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x56, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS AudioStream-23 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with AudioStream-23 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSAudioStream23SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x57, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS AudioStream-24 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with AudioStream-24 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSAudioStream24SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x58, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS AudioStream-25 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with AudioStream-25 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSAudioStream25SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x59, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS AudioStream-26 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with AudioStream-26 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSAudioStream26SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x5A, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS AudioStream-27 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with AudioStream-27 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSAudioStream27SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x5B, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS AudioStream-28 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with AudioStream-28 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSAudioStream28SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x5C, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS AudioStream-29 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with AudioStream-29 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSAudioStream29SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x5D, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS AudioStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with AudioStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSAudioStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x42, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS AudioStream-30 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with AudioStream-30 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSAudioStream30SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x5E, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS AudioStream-31 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with AudioStream-31 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSAudioStream31SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x5F, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS AudioStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with AudioStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSAudioStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x43, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS AudioStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with AudioStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSAudioStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x44, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS AudioStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with AudioStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSAudioStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x45, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS AudioStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with AudioStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSAudioStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x46, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS AudioStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with AudioStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSAudioStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x47, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS AudioStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with AudioStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSAudioStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x48, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS AudioStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with AudioStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSAudioStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x49, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS DSMCCStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with DSMCCStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSDSMCCStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x72, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS ECMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with ECMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSECMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x70, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS EMMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with EMMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSEMMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x71, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS FlexMuxStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with FlexMuxStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSFlexMuxStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x7B, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS ITURec222-A SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with ITURec222-A SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSITURec222ASID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x74, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS ITURec222-B SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with ITURec222-B SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSITURec222BSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x75, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS ITURec222-C SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with ITURec222-C SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSITURec222CSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x76, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS ITURec222-D SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with ITURec222-D SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSITURec222DSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x77, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS ITURec222-E SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with ITURec222-E SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSITURec222ESID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x78, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS PaddingStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with PaddingStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSPaddingStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x3E, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS PrivateStream1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with PrivateStream1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSPrivateStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x3D, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS PrivateStream2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with PrivateStream2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSPrivateStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x3F, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS ProgStreamDir SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with ProgStreamDir SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSProgStreamDirSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x7F, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS ProgStreamMap SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with ProgStreamMap SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSProgStreamMapSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x3C, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS SLPackStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with SLPackStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSSLPackStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x7A, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS VideoStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with VideoStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSVideoStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x60, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS VideoStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with VideoStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSVideoStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x6A, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS VideoStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with VideoStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSVideoStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x6B, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS VideoStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with VideoStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSVideoStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x6C, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS VideoStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with VideoStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSVideoStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x6D, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS VideoStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with VideoStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSVideoStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x6E, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS VideoStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with VideoStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSVideoStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x6F, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS VideoStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with VideoStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSVideoStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x61, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS VideoStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with VideoStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSVideoStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x62, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS VideoStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with VideoStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSVideoStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x63, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS VideoStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with VideoStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSVideoStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x64, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS VideoStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with VideoStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSVideoStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x65, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS VideoStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with VideoStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSVideoStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x66, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS VideoStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with VideoStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSVideoStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x67, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS VideoStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with VideoStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSVideoStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x68, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped MPEG-TS VideoStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Clip-wrapped MPEG-TS with VideoStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedMPEGTSVideoStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x69, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped TIFF/EP Profile 2 Pictures
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped TIFF/EP Profile 2 Pictures
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedTIFFEPProfile2Pictures = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x14, 0x02, 0x00];
    /// <summary>
    /// MXF-GC Clip-wrapped Uncompressed 1080x23.98P 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped source of Uncompressed 1080x23.98P video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedUncompressed1080x2398P1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped Uncompressed 1080x23.98PsF 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped source of Uncompressed 1080x23.98PsF video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedUncompressed1080x2398PsF1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x06];
    /// <summary>
    /// MXF-GC Clip-wrapped Uncompressed 1080x24P 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped source of Uncompressed 1080x24P video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedUncompressed1080x24P1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x12];
    /// <summary>
    /// MXF-GC Clip-wrapped Uncompressed 1080x24PsF 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped source of Uncompressed 1080x24PsF video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedUncompressed1080x24PsF1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x16];
    /// <summary>
    /// MXF-GC Clip-wrapped Uncompressed 1080x25P 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped source of Uncompressed 1080x25P video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedUncompressed1080x25P1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x22];
    /// <summary>
    /// MXF-GC Clip-wrapped Uncompressed 1080x25PsF 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped source of Uncompressed 1080x25PsF video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedUncompressed1080x25PsF1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x26];
    /// <summary>
    /// MXF-GC Clip-wrapped Uncompressed 1080x29.97P 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped source of Uncompressed 1080x29.97P video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedUncompressed1080x2997P1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x32];
    /// <summary>
    /// MXF-GC Clip-wrapped Uncompressed 1080x29.97PsF 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped source of Uncompressed 1080x29.97PsF video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedUncompressed1080x2997PsF1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x36];
    /// <summary>
    /// MXF-GC Clip-wrapped Uncompressed 1080x30P 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped source of Uncompressed 1080x30P video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedUncompressed1080x30P1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x42];
    /// <summary>
    /// MXF-GC Clip-wrapped Uncompressed 1080x30PsF 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped source of Uncompressed 1080x30PsF video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedUncompressed1080x30PsF1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x46];
    /// <summary>
    /// MXF-GC Clip-wrapped Uncompressed 1080x50I 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped source of Uncompressed 1080x50I video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedUncompressed1080x50I1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x2A];
    /// <summary>
    /// MXF-GC Clip-wrapped Uncompressed 1080x50P 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped source of Uncompressed 1080x50P video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedUncompressed1080x50P1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x52];
    /// <summary>
    /// MXF-GC Clip-wrapped Uncompressed 1080x59.94I 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped source of Uncompressed 1080x59.94I video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedUncompressed1080x5994I1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x3A];
    /// <summary>
    /// MXF-GC Clip-wrapped Uncompressed 1080x59.94P 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped source of Uncompressed 1080x59.94P video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedUncompressed1080x5994P1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x5A];
    /// <summary>
    /// MXF-GC Clip-wrapped Uncompressed 1080x60I 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped source of Uncompressed 1080x60I video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedUncompressed1080x60I1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x4A];
    /// <summary>
    /// MXF-GC Clip-wrapped Uncompressed 1080x60P 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped source of Uncompressed 1080x60P video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedUncompressed1080x60P1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x62];
    /// <summary>
    /// MXF-GC Clip-wrapped Uncompressed 525x59.94I 720 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped source of Uncompressed 525x59.94I video using 720 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedUncompressed525x5994I720422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x01, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped Uncompressed 525x59.94I 960 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped source of Uncompressed 525x59.94I video using 960 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedUncompressed525x5994I960422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x01, 0x0A];
    /// <summary>
    /// MXF-GC Clip-wrapped Uncompressed 525x59.94I 960 4444
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped source of Uncompressed 525x59.94I video using 960 pixels and 4444 sampling
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedUncompressed525x5994I9604444 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x01, 0x22];
    /// <summary>
    /// MXF-GC Clip-wrapped Uncompressed 525x59.94P 960 420
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped source of Uncompressed 525x59.94P video using 960 pixels and 420 sampling
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedUncompressed525x5994P960420 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x01, 0x12];
    /// <summary>
    /// MXF-GC Clip-wrapped Uncompressed 525x59.94P 960 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped source of Uncompressed 525x59.94P video using 960 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedUncompressed525x5994P960422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x01, 0x1A];
    /// <summary>
    /// MXF-GC Clip-wrapped Uncompressed 625x50I 720 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped source of Uncompressed 625x50I video using 720 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedUncompressed625x50I720422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x01, 0x06];
    /// <summary>
    /// MXF-GC Clip-wrapped Uncompressed 625x50I 960 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped source of Uncompressed 625x50I video using 960 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedUncompressed625x50I960422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x01, 0x0E];
    /// <summary>
    /// MXF-GC Clip-wrapped Uncompressed 625x50I 960 4444
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped source of Uncompressed 625x50I video using 960 pixels and 4444 sampling
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedUncompressed625x50I9604444 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x01, 0x26];
    /// <summary>
    /// MXF-GC Clip-wrapped Uncompressed 625x50P 960 420
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped source of Uncompressed 625x50P video using 960 pixels and 420 sampling
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedUncompressed625x50P960420 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x01, 0x16];
    /// <summary>
    /// MXF-GC Clip-wrapped Uncompressed 625x50P 960 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped source of Uncompressed 625x50P video using 960 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedUncompressed625x50P960422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x01, 0x1E];
    /// <summary>
    /// MXF-GC Clip-wrapped Uncompressed 720x23.98P 1280 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped source of Uncompressed 720x23.98P video using 1280 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedUncompressed720x2398P1280422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x03, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped Uncompressed 720x24P 1280 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped source of Uncompressed 720x24P video using 1280 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedUncompressed720x24P1280422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x03, 0x06];
    /// <summary>
    /// MXF-GC Clip-wrapped Uncompressed 720x25P 1280 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped source of Uncompressed 720x25P video using 1280 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedUncompressed720x25P1280422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x03, 0x0A];
    /// <summary>
    /// MXF-GC Clip-wrapped Uncompressed 720x29.97P 1280 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped source of Uncompressed 720x29.97P video using 1280 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedUncompressed720x2997P1280422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x03, 0x12];
    /// <summary>
    /// MXF-GC Clip-wrapped Uncompressed 720x30P 1280 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped source of Uncompressed 720x30P video using 1280 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedUncompressed720x30P1280422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x03, 0x16];
    /// <summary>
    /// MXF-GC Clip-wrapped Uncompressed 720x50P 1280 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped source of Uncompressed 720x50P video using 1280 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedUncompressed720x50P1280422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x03, 0x1A];
    /// <summary>
    /// MXF-GC Clip-wrapped Uncompressed 720x59.94P 1280 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped source of Uncompressed 720x59.94P video using 1280 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedUncompressed720x5994P1280422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x03, 0x22];
    /// <summary>
    /// MXF-GC Clip-wrapped Uncompressed 720x60P 1280 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped source of Uncompressed 720x60P video using 1280 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedUncompressed720x60P1280422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x03, 0x26];
    /// <summary>
    /// MXF-GC Clip-wrapped Uncompressed Non-standard video line format
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped, Uncompressed, Non-standard video line format
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedUncompressedNonStandardVideoLineFormat = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x7F, 0x02];
    /// <summary>
    /// MXF-GC Clip-wrapped VC-1 Pictures
    /// </summary>
    /// <remarks>
    /// Essence Container Identifier for MXF-GC, Clip-wrapped VC-1 Pictures
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedVC1Pictures = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x12, 0x02, 0x00];
    /// <summary>
    /// MXF-GC Clip-wrapped VC-2 Pictures
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Clip-wrapped VC-2 Stream (as defined in SMPTE ST 2042-1)
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedVC2Pictures = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x15, 0x02, 0x00];
    /// <summary>
    /// MXF-GC Clip-wrapped VC-3 Pictures
    /// </summary>
    /// <remarks>
    /// Essence Container Identifier for MXF-GC, Clip-wrapped VC-3 Pictures
    /// </remarks>
    private static readonly byte[] MXFGCClipWrappedVC3Pictures = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x11, 0x02, 0x00];
    /// <summary>
    /// MXF-GC Cn Clip-wrapped Picture Element
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC JPEG 2000 clip wrapped picture sequence (containing a sequence of 1 or more JPEG2000 codestreams)
    /// </remarks>
    private static readonly byte[] MXFGCCnClipWrappedPictureElement = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x07, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0C, 0x02, 0x00];
    /// <summary>
    /// MXF-GC Constant duration Custom-wrapped AES3 audio data
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Constant duration Custom-wrapped AES3 audio data
    /// </remarks>
    private static readonly byte[] MXFGCConstantDurationCustomWrappedAES3AudioData = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x06, 0x0B, 0x00];
    /// <summary>
    /// MXF-GC Constant duration Custom-wrapped Broadcast Wave audio data
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Constant duration Custom-wrapped Broadcast Wave audio data
    /// </remarks>
    private static readonly byte[] MXFGCConstantDurationCustomWrappedBroadcastWaveAudioData = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x06, 0x0A, 0x00];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES 13522Stream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with 13522Stream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGES13522StreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x73, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES AncStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with AncStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESAncStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x79, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES AudioStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with AudioStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESAudioStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x40, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES AudioStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with AudioStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESAudioStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4A, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES AudioStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with AudioStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESAudioStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4B, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES AudioStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with AudioStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESAudioStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4C, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES AudioStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with AudioStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESAudioStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4D, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES AudioStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with AudioStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESAudioStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4E, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES AudioStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with AudioStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESAudioStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4F, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES AudioStream-16 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with AudioStream-16 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESAudioStream16SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x50, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES AudioStream-17 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with AudioStream-17 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESAudioStream17SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x51, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES AudioStream-18 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with AudioStream-18 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESAudioStream18SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x52, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES AudioStream-19 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with AudioStream-19 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESAudioStream19SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x53, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES AudioStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with AudioStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESAudioStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x41, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES AudioStream-20 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with AudioStream-20 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESAudioStream20SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x54, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES AudioStream-21 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with AudioStream-21 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESAudioStream21SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x55, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES AudioStream-22 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with AudioStream-22 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESAudioStream22SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x56, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES AudioStream-23 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with AudioStream-23 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESAudioStream23SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x57, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES AudioStream-24 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with AudioStream-24 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESAudioStream24SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x58, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES AudioStream-25 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with AudioStream-25 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESAudioStream25SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x59, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES AudioStream-26 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with AudioStream-26 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESAudioStream26SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5A, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES AudioStream-27 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with AudioStream-27 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESAudioStream27SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5B, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES AudioStream-28 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with AudioStream-28 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESAudioStream28SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5C, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES AudioStream-29 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with AudioStream-29 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESAudioStream29SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5D, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES AudioStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with AudioStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESAudioStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x42, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES AudioStream-30 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with AudioStream-30 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESAudioStream30SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5E, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES AudioStream-31 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with AudioStream-31 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESAudioStream31SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5F, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES AudioStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with AudioStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESAudioStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x43, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES AudioStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with AudioStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESAudioStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x44, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES AudioStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with AudioStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESAudioStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x45, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES AudioStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with AudioStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESAudioStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x46, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES AudioStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with AudioStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESAudioStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x47, 0x07];
    /// <summary>
    /// MXF-GC Custom ClosedGOP-wrapped MPEG-ES AudioStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Custom ClosedGOP-wrapped MPEG-ES with AudioStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESAudioStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x48, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES AudioStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with AudioStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESAudioStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x49, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES DSMCCStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with DSMCCStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESDSMCCStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x72, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES ECMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with ECMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESECMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x70, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES EMMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with EMMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESEMMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x71, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES FlexMuxStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with FlexMuxStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESFlexMuxStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x7B, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES ITURec222-A SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with ITURec222-A SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESITURec222ASID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x74, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES ITURec222-B SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with ITURec222-B SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESITURec222BSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x75, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES ITURec222-C SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with ITURec222-C SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESITURec222CSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x76, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES ITURec222-D SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with ITURec222-D SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESITURec222DSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x77, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES ITURec222-E SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with ITURec222-E SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESITURec222ESID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x78, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES PaddingStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with PaddingStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESPaddingStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3E, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES PrivateStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with PrivateStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESPrivateStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3D, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES PrivateStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with PrivateStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESPrivateStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3F, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES ProgStreamDir SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with ProgStreamDir SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESProgStreamDirSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x7F, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES ProgStreamMap SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with ProgStreamMap SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESProgStreamMapSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3C, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES SLPackStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with SLPackStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESSLPackStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x7A, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES VideoStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with VideoStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESVideoStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x60, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES VideoStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with VideoStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESVideoStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6A, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES VideoStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with VideoStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESVideoStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6B, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES VideoStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with VideoStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESVideoStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6C, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES VideoStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with VideoStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESVideoStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6D, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES VideoStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with VideoStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESVideoStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6E, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES VideoStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with VideoStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESVideoStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6F, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES VideoStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with VideoStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESVideoStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x61, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES VideoStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with VideoStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESVideoStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x62, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES VideoStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with VideoStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESVideoStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x63, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES VideoStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with VideoStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESVideoStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x64, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES VideoStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with VideoStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESVideoStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x65, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES VideoStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with VideoStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESVideoStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x66, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES VideoStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with VideoStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESVideoStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x67, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES VideoStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with VideoStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESVideoStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x68, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-ES VideoStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomClosedGOP-wrapped MPEG-ES with VideoStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGESVideoStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x69, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES 13522Stream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with 13522Stream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPES13522StreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x73, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES AncStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with AncStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESAncStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x79, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES AudioStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with AudioStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESAudioStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x40, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES AudioStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with AudioStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESAudioStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4A, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES AudioStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with AudioStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESAudioStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4B, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES AudioStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with AudioStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESAudioStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4C, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES AudioStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with AudioStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESAudioStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4D, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES AudioStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with AudioStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESAudioStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4E, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES AudioStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with AudioStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESAudioStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4F, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES AudioStream-16 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with AudioStream-16 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESAudioStream16SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x50, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES AudioStream-17 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with AudioStream-17 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESAudioStream17SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x51, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES AudioStream-18 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with AudioStream-18 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESAudioStream18SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x52, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES AudioStream-19 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with AudioStream-19 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESAudioStream19SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x53, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES AudioStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with AudioStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESAudioStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x41, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES AudioStream-20 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with AudioStream-20 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESAudioStream20SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x54, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES AudioStream-21 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with AudioStream-21 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESAudioStream21SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x55, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES AudioStream-22 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with AudioStream-22 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESAudioStream22SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x56, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES AudioStream-23 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with AudioStream-23 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESAudioStream23SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x57, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES AudioStream-24 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with AudioStream-24 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESAudioStream24SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x58, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES AudioStream-25 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with AudioStream-25 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESAudioStream25SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x59, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES AudioStream-26 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with AudioStream-26 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESAudioStream26SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5A, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES AudioStream-27 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with AudioStream-27 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESAudioStream27SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5B, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES AudioStream-28 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with AudioStream-28 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESAudioStream28SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5C, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES AudioStream-29 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with AudioStream-29 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESAudioStream29SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5D, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES AudioStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with AudioStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESAudioStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x42, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES AudioStream-30 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with AudioStream-30 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESAudioStream30SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5E, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES AudioStream-31 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with AudioStream-31 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESAudioStream31SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5F, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES AudioStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with AudioStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESAudioStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x43, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES AudioStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with AudioStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESAudioStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x44, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES AudioStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with AudioStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESAudioStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x45, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES AudioStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with AudioStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESAudioStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x46, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES AudioStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with AudioStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESAudioStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x47, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES AudioStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with AudioStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESAudioStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x48, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES AudioStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with AudioStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESAudioStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x49, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES DSMCCStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with DSMCCStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESDSMCCStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x72, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES ECMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with ECMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESECMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x70, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES EMMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with EMMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESEMMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x71, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES FlexMuxStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with FlexMuxStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESFlexMuxStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x7B, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES ITURec222-A SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with ITURec222-A SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESITURec222ASID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x74, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES ITURec222-B SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with ITURec222-B SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESITURec222BSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x75, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES ITURec222-C SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with ITURec222-C SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESITURec222CSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x76, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES ITURec222-D SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with ITURec222-D SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESITURec222DSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x77, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES ITURec222-E SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with ITURec222-E SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESITURec222ESID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x78, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES PaddingStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with PaddingStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESPaddingStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3E, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES PrivateStream1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with PrivateStream1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESPrivateStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3D, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES PrivateStream2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with PrivateStream2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESPrivateStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3F, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES ProgStreamDir SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with ProgStreamDir SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESProgStreamDirSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x7F, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES ProgStreamMap SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with ProgStreamMap SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESProgStreamMapSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3C, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES SLPackStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with SLPackStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESSLPackStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x7A, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES VideoStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with VideoStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESVideoStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x60, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES VideoStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with VideoStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESVideoStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6A, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES VideoStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with VideoStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESVideoStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6B, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES VideoStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with VideoStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESVideoStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6C, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES VideoStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with VideoStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESVideoStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6D, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES VideoStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with VideoStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESVideoStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6E, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES VideoStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with VideoStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESVideoStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6F, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES VideoStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with VideoStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESVideoStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x61, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES VideoStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with VideoStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESVideoStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x62, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES VideoStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with VideoStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESVideoStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x63, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES VideoStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with VideoStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESVideoStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x64, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES VideoStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with VideoStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESVideoStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x65, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES VideoStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with VideoStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESVideoStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x66, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES VideoStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with VideoStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESVideoStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x67, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES VideoStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with VideoStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESVideoStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x68, 0x07];
    /// <summary>
    /// MXF-GC CustomClosedGOP-wrapped MPEG-PES VideoStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomClosedGOP-wrapped MPEG-PES with VideoStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomClosedGOPWrappedMPEGPESVideoStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x69, 0x07];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES 13522Stream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with 13522Stream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGES13522StreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x73, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES AncStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with AncStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESAncStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x79, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES AudioStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with AudioStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESAudioStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x40, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES AudioStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with AudioStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESAudioStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4A, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES AudioStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with AudioStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESAudioStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4B, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES AudioStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with AudioStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESAudioStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4C, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES AudioStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with AudioStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESAudioStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4D, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES AudioStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with AudioStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESAudioStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4E, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES AudioStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with AudioStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESAudioStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4F, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES AudioStream-16 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with AudioStream-16 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESAudioStream16SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x50, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES AudioStream-17 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with AudioStream-17 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESAudioStream17SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x51, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES AudioStream-18 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with AudioStream-18 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESAudioStream18SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x52, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES AudioStream-19 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with AudioStream-19 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESAudioStream19SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x53, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES AudioStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with AudioStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESAudioStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x41, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES AudioStream-20 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with AudioStream-20 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESAudioStream20SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x54, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES AudioStream-21 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with AudioStream-21 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESAudioStream21SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x55, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES AudioStream-22 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with AudioStream-22 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESAudioStream22SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x56, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES AudioStream-23 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with AudioStream-23 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESAudioStream23SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x57, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES AudioStream-24 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with AudioStream-24 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESAudioStream24SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x58, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES AudioStream-25 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with AudioStream-25 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESAudioStream25SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x59, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES AudioStream-26 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with AudioStream-26 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESAudioStream26SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5A, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES AudioStream-27 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with AudioStream-27 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESAudioStream27SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5B, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES AudioStream-28 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with AudioStream-28 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESAudioStream28SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5C, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES AudioStream-29 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with AudioStream-29 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESAudioStream29SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5D, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES AudioStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with AudioStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESAudioStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x42, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES AudioStream-30 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with AudioStream-30 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESAudioStream30SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5E, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES AudioStream-31 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with AudioStream-31 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESAudioStream31SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5F, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES AudioStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with AudioStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESAudioStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x43, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES AudioStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with AudioStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESAudioStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x44, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES AudioStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with AudioStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESAudioStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x45, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES AudioStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with AudioStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESAudioStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x46, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES AudioStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with AudioStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESAudioStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x47, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES AudioStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with AudioStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESAudioStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x48, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES AudioStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with AudioStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESAudioStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x49, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES DSMCCStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with DSMCCStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESDSMCCStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x72, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES ECMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with ECMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESECMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x70, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES EMMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with EMMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESEMMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x71, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES FlexMuxStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with FlexMuxStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESFlexMuxStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x7B, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES ITURec222-A SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with ITURec222-A SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESITURec222ASID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x74, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES ITURec222-B SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with ITURec222-B SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESITURec222BSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x75, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES ITURec222-C SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with ITURec222-C SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESITURec222CSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x76, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES ITURec222-D SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with ITURec222-D SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESITURec222DSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x77, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES ITURec222-E SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with ITURec222-E SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESITURec222ESID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x78, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES PaddingStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with PaddingStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESPaddingStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3E, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES PrivateStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with PrivateStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESPrivateStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3D, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES PrivateStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with PrivateStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESPrivateStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3F, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES ProgStreamDir SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with ProgStreamDir SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESProgStreamDirSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x7F, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES ProgStreamMap SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with ProgStreamMap SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESProgStreamMapSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3C, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES SLPackStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with SLPackStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESSLPackStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x7A, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES VideoStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with VideoStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESVideoStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x60, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES VideoStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with VideoStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESVideoStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6A, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES VideoStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with VideoStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESVideoStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6B, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES VideoStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with VideoStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESVideoStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6C, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES VideoStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with VideoStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESVideoStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6D, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES VideoStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with VideoStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESVideoStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6E, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES VideoStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with VideoStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESVideoStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6F, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES VideoStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with VideoStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESVideoStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x61, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES VideoStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with VideoStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESVideoStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x62, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES VideoStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with VideoStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESVideoStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x63, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES VideoStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with VideoStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESVideoStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x64, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES VideoStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with VideoStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESVideoStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x65, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES VideoStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with VideoStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESVideoStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x66, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES VideoStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with VideoStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESVideoStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x67, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES VideoStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with VideoStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESVideoStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x68, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-ES VideoStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomFixedAudioSize-wrapped MPEG-ES with VideoStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGESVideoStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x69, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES 13522Stream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with 13522Stream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPES13522StreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x73, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES AncStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with AncStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESAncStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x79, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES AudioStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with AudioStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESAudioStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x40, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES AudioStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with AudioStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESAudioStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4A, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES AudioStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with AudioStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESAudioStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4B, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES AudioStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with AudioStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESAudioStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4C, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES AudioStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with AudioStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESAudioStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4D, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES AudioStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with AudioStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESAudioStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4E, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES AudioStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with AudioStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESAudioStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4F, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES AudioStream-16 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with AudioStream-16 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESAudioStream16SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x50, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES AudioStream-17 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with AudioStream-17 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESAudioStream17SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x51, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES AudioStream-18 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with AudioStream-18 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESAudioStream18SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x52, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES AudioStream-19 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with AudioStream-19 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESAudioStream19SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x53, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES AudioStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with AudioStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESAudioStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x41, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES AudioStream-20 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with AudioStream-20 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESAudioStream20SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x54, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES AudioStream-21 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with AudioStream-21 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESAudioStream21SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x55, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES AudioStream-22 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with AudioStream-22 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESAudioStream22SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x56, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES AudioStream-23 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with AudioStream-23 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESAudioStream23SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x57, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES AudioStream-24 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with AudioStream-24 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESAudioStream24SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x58, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES AudioStream-25 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with AudioStream-25 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESAudioStream25SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x59, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES AudioStream-26 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with AudioStream-26 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESAudioStream26SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5A, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES AudioStream-27 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with AudioStream-27 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESAudioStream27SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5B, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES AudioStream-28 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with AudioStream-28 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESAudioStream28SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5C, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES AudioStream-29 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with AudioStream-29 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESAudioStream29SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5D, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES AudioStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with AudioStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESAudioStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x42, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES AudioStream-30 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with AudioStream-30 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESAudioStream30SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5E, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES AudioStream-31 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with AudioStream-31 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESAudioStream31SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5F, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES AudioStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with AudioStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESAudioStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x43, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES AudioStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with AudioStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESAudioStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x44, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES AudioStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with AudioStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESAudioStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x45, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES AudioStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with AudioStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESAudioStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x46, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES AudioStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with AudioStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESAudioStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x47, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES AudioStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with AudioStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESAudioStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x48, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES AudioStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with AudioStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESAudioStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x49, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES DSMCCStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with DSMCCStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESDSMCCStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x72, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES ECMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with ECMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESECMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x70, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES EMMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with EMMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESEMMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x71, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES FlexMuxStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with FlexMuxStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESFlexMuxStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x7B, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES ITURec222-A SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with ITURec222-A SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESITURec222ASID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x74, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES ITURec222-B SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with ITURec222-B SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESITURec222BSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x75, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES ITURec222-C SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with ITURec222-C SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESITURec222CSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x76, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES ITURec222-D SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with ITURec222-D SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESITURec222DSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x77, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES ITURec222-E SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with ITURec222-E SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESITURec222ESID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x78, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES PaddingStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with PaddingStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESPaddingStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3E, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES PrivateStream1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with PrivateStream1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESPrivateStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3D, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES PrivateStream2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with PrivateStream2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESPrivateStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3F, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES ProgStreamDir SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with ProgStreamDir SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESProgStreamDirSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x7F, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES ProgStreamMap SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with ProgStreamMap SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESProgStreamMapSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3C, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES SLPackStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with SLPackStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESSLPackStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x7A, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES VideoStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with VideoStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESVideoStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x60, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES VideoStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with VideoStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESVideoStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6A, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES VideoStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with VideoStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESVideoStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6B, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES VideoStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with VideoStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESVideoStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6C, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES VideoStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with VideoStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESVideoStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6D, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES VideoStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with VideoStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESVideoStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6E, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES VideoStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with VideoStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESVideoStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6F, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES VideoStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with VideoStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESVideoStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x61, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES VideoStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with VideoStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESVideoStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x62, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES VideoStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with VideoStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESVideoStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x63, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES VideoStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with VideoStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESVideoStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x64, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES VideoStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with VideoStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESVideoStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x65, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES VideoStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with VideoStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESVideoStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x66, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES VideoStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with VideoStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESVideoStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x67, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES VideoStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with VideoStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESVideoStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x68, 0x05];
    /// <summary>
    /// MXF-GC CustomFixedAudioSize-wrapped MPEG-PES VideoStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomFixedAudioSize-wrapped MPEG-PES with VideoStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomFixedAudioSizeWrappedMPEGPESVideoStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x69, 0x05];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES 13522Stream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with 13522Stream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGES13522StreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x73, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES AncStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with AncStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESAncStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x79, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES AudioStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with AudioStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESAudioStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x40, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES AudioStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with AudioStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESAudioStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4A, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES AudioStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with AudioStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESAudioStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4B, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES AudioStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with AudioStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESAudioStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4C, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES AudioStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with AudioStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESAudioStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4D, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES AudioStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with AudioStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESAudioStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4E, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES AudioStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with AudioStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESAudioStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4F, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES AudioStream-16 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with AudioStream-16 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESAudioStream16SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x50, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES AudioStream-17 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with AudioStream-17 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESAudioStream17SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x51, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES AudioStream-18 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with AudioStream-18 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESAudioStream18SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x52, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES AudioStream-19 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with AudioStream-19 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESAudioStream19SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x53, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES AudioStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with AudioStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESAudioStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x41, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES AudioStream-20 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with AudioStream-20 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESAudioStream20SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x54, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES AudioStream-21 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with AudioStream-21 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESAudioStream21SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x55, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES AudioStream-22 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with AudioStream-22 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESAudioStream22SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x56, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES AudioStream-23 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with AudioStream-23 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESAudioStream23SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x57, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES AudioStream-24 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with AudioStream-24 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESAudioStream24SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x58, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES AudioStream-25 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with AudioStream-25 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESAudioStream25SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x59, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES AudioStream-26 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with AudioStream-26 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESAudioStream26SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5A, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES AudioStream-27 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with AudioStream-27 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESAudioStream27SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5B, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES AudioStream-28 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with AudioStream-28 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESAudioStream28SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5C, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES AudioStream-29 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with AudioStream-29 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESAudioStream29SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5D, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES AudioStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with AudioStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESAudioStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x42, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES AudioStream-30 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with AudioStream-30 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESAudioStream30SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5E, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES AudioStream-31 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with AudioStream-31 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESAudioStream31SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5F, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES AudioStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with AudioStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESAudioStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x43, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES AudioStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with AudioStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESAudioStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x44, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES AudioStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with AudioStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESAudioStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x45, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES AudioStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with AudioStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESAudioStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x46, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES AudioStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with AudioStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESAudioStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x47, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES AudioStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with AudioStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESAudioStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x48, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES AudioStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with AudioStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESAudioStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x49, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES DSMCCStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with DSMCCStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESDSMCCStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x72, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES ECMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with ECMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESECMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x70, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES EMMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with EMMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESEMMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x71, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES FlexMuxStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with FlexMuxStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESFlexMuxStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x7B, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES ITURec222-A SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with ITURec222-A SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESITURec222ASID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x74, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES ITURec222-B SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with ITURec222-B SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESITURec222BSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x75, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES ITURec222-C SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with ITURec222-C SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESITURec222CSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x76, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES ITURec222-D SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with ITURec222-D SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESITURec222DSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x77, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES ITURec222-E SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with ITURec222-E SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESITURec222ESID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x78, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES PaddingStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with PaddingStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESPaddingStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3E, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES PrivateStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with PrivateStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESPrivateStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3D, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES PrivateStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with PrivateStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESPrivateStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3F, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES ProgStreamDir SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with ProgStreamDir SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESProgStreamDirSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x7F, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES ProgStreamMap SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with ProgStreamMap SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESProgStreamMapSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3C, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES SLPackStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with SLPackStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESSLPackStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x7A, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES VideoStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with VideoStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESVideoStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x60, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES VideoStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with VideoStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESVideoStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6A, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES VideoStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with VideoStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESVideoStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6B, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES VideoStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with VideoStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESVideoStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6C, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES VideoStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with VideoStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESVideoStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6D, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES VideoStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with VideoStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESVideoStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6E, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES VideoStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with VideoStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESVideoStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6F, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES VideoStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with VideoStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESVideoStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x61, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES VideoStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with VideoStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESVideoStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x62, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES VideoStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with VideoStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESVideoStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x63, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES VideoStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with VideoStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESVideoStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x64, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES VideoStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with VideoStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESVideoStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x65, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES VideoStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with VideoStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESVideoStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x66, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES VideoStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with VideoStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESVideoStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x67, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES VideoStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with VideoStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESVideoStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x68, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-ES VideoStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomPES-wrapped MPEG-ES with VideoStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGESVideoStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x69, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES 13522Stream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with 13522Stream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPES13522StreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x73, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES AncStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with AncStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESAncStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x79, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES AudioStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with AudioStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESAudioStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x40, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES AudioStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with AudioStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESAudioStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4A, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES AudioStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with AudioStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESAudioStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4B, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES AudioStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with AudioStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESAudioStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4C, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES AudioStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with AudioStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESAudioStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4D, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES AudioStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with AudioStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESAudioStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4E, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES AudioStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with AudioStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESAudioStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4F, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES AudioStream-16 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with AudioStream-16 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESAudioStream16SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x50, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES AudioStream-17 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with AudioStream-17 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESAudioStream17SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x51, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES AudioStream-18 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with AudioStream-18 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESAudioStream18SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x52, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES AudioStream-19 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with AudioStream-19 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESAudioStream19SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x53, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES AudioStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with AudioStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESAudioStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x41, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES AudioStream-20 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with AudioStream-20 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESAudioStream20SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x54, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES AudioStream-21 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with AudioStream-21 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESAudioStream21SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x55, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES AudioStream-22 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with AudioStream-22 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESAudioStream22SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x56, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES AudioStream-23 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with AudioStream-23 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESAudioStream23SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x57, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES AudioStream-24 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with AudioStream-24 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESAudioStream24SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x58, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES AudioStream-25 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with AudioStream-25 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESAudioStream25SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x59, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES AudioStream-26 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with AudioStream-26 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESAudioStream26SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5A, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES AudioStream-27 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with AudioStream-27 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESAudioStream27SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5B, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES AudioStream-28 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with AudioStream-28 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESAudioStream28SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5C, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES AudioStream-29 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with AudioStream-29 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESAudioStream29SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5D, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES AudioStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with AudioStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESAudioStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x42, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES AudioStream-30 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with AudioStream-30 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESAudioStream30SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5E, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES AudioStream-31 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with AudioStream-31 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESAudioStream31SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5F, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES AudioStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with AudioStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESAudioStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x43, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES AudioStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with AudioStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESAudioStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x44, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES AudioStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with AudioStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESAudioStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x45, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES AudioStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with AudioStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESAudioStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x46, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES AudioStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with AudioStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESAudioStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x47, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES AudioStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with AudioStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESAudioStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x48, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES AudioStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with AudioStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESAudioStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x49, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES DSMCCStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with DSMCCStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESDSMCCStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x72, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES ECMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with ECMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESECMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x70, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES EMMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with EMMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESEMMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x71, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES FlexMuxStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with FlexMuxStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESFlexMuxStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x7B, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES ITURec222-A SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with ITURec222-A SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESITURec222ASID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x74, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES ITURec222-B SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with ITURec222-B SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESITURec222BSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x75, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES ITURec222-C SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with ITURec222-C SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESITURec222CSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x76, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES ITURec222-D SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with ITURec222-D SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESITURec222DSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x77, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES ITURec222-E SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with ITURec222-E SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESITURec222ESID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x78, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES PaddingStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with PaddingStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESPaddingStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3E, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES PrivateStream1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with PrivateStream1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESPrivateStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3D, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES PrivateStream2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with PrivateStream2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESPrivateStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3F, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES ProgStreamDir SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with ProgStreamDir SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESProgStreamDirSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x7F, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES ProgStreamMap SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with ProgStreamMap SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESProgStreamMapSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3C, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES SLPackStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with SLPackStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESSLPackStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x7A, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES VideoStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with VideoStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESVideoStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x60, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES VideoStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with VideoStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESVideoStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6A, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES VideoStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with VideoStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESVideoStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6B, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES VideoStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with VideoStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESVideoStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6C, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES VideoStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with VideoStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESVideoStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6D, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES VideoStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with VideoStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESVideoStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6E, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES VideoStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with VideoStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESVideoStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6F, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES VideoStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with VideoStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESVideoStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x61, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES VideoStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with VideoStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESVideoStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x62, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES VideoStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with VideoStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESVideoStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x63, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES VideoStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with VideoStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESVideoStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x64, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES VideoStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with VideoStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESVideoStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x65, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES VideoStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with VideoStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESVideoStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x66, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES VideoStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with VideoStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESVideoStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x67, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES VideoStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with VideoStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESVideoStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x68, 0x04];
    /// <summary>
    /// MXF-GC CustomPES-wrapped MPEG-PES VideoStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomPES-wrapped MPEG-PES with VideoStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomPESWrappedMPEGPESVideoStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x69, 0x04];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES 13522Stream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with 13522Stream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGES13522StreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x73, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES AncStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with AncStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESAncStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x79, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES AudioStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with AudioStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESAudioStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x40, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES AudioStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with AudioStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESAudioStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4A, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES AudioStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with AudioStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESAudioStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4B, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES AudioStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with AudioStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESAudioStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4C, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES AudioStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with AudioStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESAudioStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4D, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES AudioStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with AudioStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESAudioStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4E, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES AudioStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with AudioStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESAudioStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4F, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES AudioStream-16 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with AudioStream-16 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESAudioStream16SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x50, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES AudioStream-17 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with AudioStream-17 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESAudioStream17SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x51, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES AudioStream-18 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with AudioStream-18 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESAudioStream18SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x52, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES AudioStream-19 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with AudioStream-19 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESAudioStream19SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x53, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES AudioStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with AudioStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESAudioStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x41, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES AudioStream-20 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with AudioStream-20 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESAudioStream20SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x54, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES AudioStream-21 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with AudioStream-21 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESAudioStream21SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x55, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES AudioStream-22 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with AudioStream-22 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESAudioStream22SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x56, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES AudioStream-23 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with AudioStream-23 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESAudioStream23SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x57, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES AudioStream-24 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with AudioStream-24 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESAudioStream24SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x58, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES AudioStream-25 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with AudioStream-25 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESAudioStream25SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x59, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES AudioStream-26 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with AudioStream-26 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESAudioStream26SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5A, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES AudioStream-27 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with AudioStream-27 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESAudioStream27SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5B, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES AudioStream-28 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with AudioStream-28 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESAudioStream28SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5C, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES AudioStream-29 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with AudioStream-29 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESAudioStream29SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5D, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES AudioStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with AudioStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESAudioStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x42, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES AudioStream-30 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with AudioStream-30 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESAudioStream30SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5E, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES AudioStream-31 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with AudioStream-31 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESAudioStream31SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5F, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES AudioStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with AudioStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESAudioStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x43, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES AudioStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with AudioStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESAudioStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x44, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES AudioStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with AudioStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESAudioStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x45, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES AudioStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with AudioStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESAudioStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x46, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES AudioStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with AudioStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESAudioStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x47, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES AudioStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with AudioStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESAudioStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x48, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES AudioStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with AudioStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESAudioStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x49, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES DSMCCStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with DSMCCStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESDSMCCStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x72, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES ECMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with ECMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESECMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x70, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES EMMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with EMMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESEMMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x71, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES FlexMuxStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with FlexMuxStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESFlexMuxStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x7B, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES ITURec222-A SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with ITURec222-A SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESITURec222ASID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x74, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES ITURec222-B SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with ITURec222-B SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESITURec222BSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x75, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES ITURec222-C SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with ITURec222-C SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESITURec222CSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x76, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES ITURec222-D SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with ITURec222-D SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESITURec222DSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x77, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES ITURec222-E SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with ITURec222-E SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESITURec222ESID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x78, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES PaddingStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with PaddingStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESPaddingStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3E, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES PrivateStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with PrivateStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESPrivateStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3D, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES PrivateStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with PrivateStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESPrivateStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3F, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES ProgStreamDir SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with ProgStreamDir SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESProgStreamDirSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x7F, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES ProgStreamMap SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with ProgStreamMap SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESProgStreamMapSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3C, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES SLPackStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with SLPackStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESSLPackStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x7A, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES VideoStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with VideoStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESVideoStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x60, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES VideoStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with VideoStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESVideoStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6A, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES VideoStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with VideoStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESVideoStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6B, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES VideoStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with VideoStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESVideoStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6C, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES VideoStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with VideoStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESVideoStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6D, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES VideoStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with VideoStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESVideoStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6E, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES VideoStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with VideoStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESVideoStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6F, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES VideoStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with VideoStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESVideoStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x61, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES VideoStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with VideoStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESVideoStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x62, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES VideoStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with VideoStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESVideoStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x63, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES VideoStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with VideoStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESVideoStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x64, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES VideoStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with VideoStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESVideoStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x65, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES VideoStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with VideoStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESVideoStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x66, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES VideoStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with VideoStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESVideoStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x67, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES VideoStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with VideoStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESVideoStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x68, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-ES VideoStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSlave-wrapped MPEG-ES with VideoStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGESVideoStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x69, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES 13522Stream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with 13522Stream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPES13522StreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x73, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES AncStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with AncStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESAncStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x79, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES AudioStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with AudioStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESAudioStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x40, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES AudioStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with AudioStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESAudioStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4A, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES AudioStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with AudioStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESAudioStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4B, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES AudioStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with AudioStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESAudioStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4C, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES AudioStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with AudioStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESAudioStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4D, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES AudioStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with AudioStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESAudioStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4E, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES AudioStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with AudioStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESAudioStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4F, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES AudioStream-16 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with AudioStream-16 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESAudioStream16SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x50, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES AudioStream-17 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with AudioStream-17 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESAudioStream17SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x51, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES AudioStream-18 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with AudioStream-18 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESAudioStream18SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x52, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES AudioStream-19 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with AudioStream-19 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESAudioStream19SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x53, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES AudioStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with AudioStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESAudioStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x41, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES AudioStream-20 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with AudioStream-20 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESAudioStream20SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x54, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES AudioStream-21 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with AudioStream-21 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESAudioStream21SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x55, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES AudioStream-22 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with AudioStream-22 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESAudioStream22SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x56, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES AudioStream-23 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with AudioStream-23 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESAudioStream23SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x57, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES AudioStream-24 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with AudioStream-24 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESAudioStream24SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x58, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES AudioStream-25 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with AudioStream-25 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESAudioStream25SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x59, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES AudioStream-26 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with AudioStream-26 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESAudioStream26SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5A, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES AudioStream-27 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with AudioStream-27 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESAudioStream27SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5B, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES AudioStream-28 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with AudioStream-28 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESAudioStream28SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5C, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES AudioStream-29 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with AudioStream-29 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESAudioStream29SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5D, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES AudioStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with AudioStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESAudioStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x42, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES AudioStream-30 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with AudioStream-30 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESAudioStream30SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5E, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES AudioStream-31 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with AudioStream-31 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESAudioStream31SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5F, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES AudioStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with AudioStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESAudioStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x43, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES AudioStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with AudioStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESAudioStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x44, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES AudioStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with AudioStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESAudioStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x45, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES AudioStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with AudioStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESAudioStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x46, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES AudioStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with AudioStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESAudioStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x47, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES AudioStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with AudioStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESAudioStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x48, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES AudioStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with AudioStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESAudioStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x49, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES DSMCCStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with DSMCCStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESDSMCCStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x72, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES ECMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with ECMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESECMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x70, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES EMMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with EMMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESEMMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x71, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES FlexMuxStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with FlexMuxStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESFlexMuxStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x7B, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES ITURec222-A SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with ITURec222-A SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESITURec222ASID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x74, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES ITURec222-B SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with ITURec222-B SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESITURec222BSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x75, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES ITURec222-C SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with ITURec222-C SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESITURec222CSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x76, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES ITURec222-D SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with ITURec222-D SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESITURec222DSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x77, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES ITURec222-E SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with ITURec222-E SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESITURec222ESID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x78, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES PaddingStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with PaddingStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESPaddingStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3E, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES PrivateStream1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with PrivateStream1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESPrivateStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3D, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES PrivateStream2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with PrivateStream2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESPrivateStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3F, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES ProgStreamDir SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with ProgStreamDir SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESProgStreamDirSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x7F, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES ProgStreamMap SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with ProgStreamMap SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESProgStreamMapSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3C, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES SLPackStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with SLPackStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESSLPackStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x7A, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES VideoStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with VideoStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESVideoStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x60, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES VideoStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with VideoStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESVideoStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6A, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES VideoStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with VideoStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESVideoStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6B, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES VideoStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with VideoStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESVideoStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6C, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES VideoStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with VideoStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESVideoStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6D, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES VideoStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with VideoStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESVideoStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6E, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES VideoStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with VideoStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESVideoStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6F, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES VideoStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with VideoStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESVideoStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x61, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES VideoStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with VideoStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESVideoStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x62, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES VideoStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with VideoStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESVideoStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x63, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES VideoStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with VideoStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESVideoStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x64, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES VideoStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with VideoStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESVideoStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x65, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES VideoStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with VideoStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESVideoStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x66, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES VideoStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with VideoStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESVideoStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x67, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES VideoStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with VideoStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESVideoStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x68, 0x08];
    /// <summary>
    /// MXF-GC CustomSlave-wrapped MPEG-PES VideoStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSlave-wrapped MPEG-PES with VideoStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSlaveWrappedMPEGPESVideoStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x69, 0x08];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES 13522Stream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with 13522Stream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPES13522StreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x73, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES AncStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with AncStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESAncStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x79, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES AudioStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with AudioStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESAudioStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x40, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES AudioStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with AudioStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESAudioStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4A, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES AudioStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with AudioStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESAudioStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4B, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES AudioStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with AudioStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESAudioStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4C, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES AudioStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with AudioStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESAudioStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4D, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES AudioStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with AudioStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESAudioStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4E, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES AudioStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with AudioStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESAudioStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4F, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES AudioStream-16 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with AudioStream-16 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESAudioStream16SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x50, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES AudioStream-17 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with AudioStream-17 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESAudioStream17SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x51, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES AudioStream-18 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with AudioStream-18 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESAudioStream18SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x52, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES AudioStream-19 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with AudioStream-19 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESAudioStream19SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x53, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES AudioStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with AudioStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESAudioStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x41, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES AudioStream-20 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with AudioStream-20 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESAudioStream20SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x54, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES AudioStream-21 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with AudioStream-21 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESAudioStream21SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x55, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES AudioStream-22 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with AudioStream-22 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESAudioStream22SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x56, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES AudioStream-23 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with AudioStream-23 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESAudioStream23SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x57, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES AudioStream-24 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with AudioStream-24 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESAudioStream24SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x58, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES AudioStream-25 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with AudioStream-25 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESAudioStream25SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x59, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES AudioStream-26 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with AudioStream-26 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESAudioStream26SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5A, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES AudioStream-27 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with AudioStream-27 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESAudioStream27SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5B, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES AudioStream-28 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with AudioStream-28 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESAudioStream28SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5C, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES AudioStream-29 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with AudioStream-29 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESAudioStream29SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5D, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES AudioStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with AudioStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESAudioStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x42, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES AudioStream-30 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with AudioStream-30 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESAudioStream30SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5E, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES AudioStream-31 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with AudioStream-31 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESAudioStream31SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5F, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES AudioStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with AudioStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESAudioStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x43, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES AudioStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with AudioStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESAudioStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x44, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES AudioStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with AudioStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESAudioStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x45, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES AudioStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with AudioStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESAudioStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x46, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES AudioStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with AudioStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESAudioStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x47, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES AudioStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with AudioStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESAudioStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x48, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES AudioStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with AudioStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESAudioStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x49, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES DSMCCStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with DSMCCStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESDSMCCStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x72, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES ECMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with ECMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESECMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x70, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES EMMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with EMMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESEMMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x71, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES FlexMuxStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with FlexMuxStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESFlexMuxStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x7B, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES ITURec222-A SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with ITURec222-A SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESITURec222ASID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x74, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES ITURec222-B SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with ITURec222-B SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESITURec222BSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x75, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES ITURec222-C SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with ITURec222-C SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESITURec222CSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x76, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES ITURec222-D SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with ITURec222-D SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESITURec222DSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x77, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES ITURec222-E SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with ITURec222-E SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESITURec222ESID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x78, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES PaddingStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with PaddingStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESPaddingStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3E, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES PrivateStream1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with PrivateStream1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESPrivateStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3D, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES PrivateStream2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with PrivateStream2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESPrivateStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3F, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES ProgStreamDir SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with ProgStreamDir SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESProgStreamDirSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x7F, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES ProgStreamMap SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with ProgStreamMap SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESProgStreamMapSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3C, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES SLPackStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with SLPackStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESSLPackStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x7A, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES VideoStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with VideoStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESVideoStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x60, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES VideoStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with VideoStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESVideoStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6A, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES VideoStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with VideoStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESVideoStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6B, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES VideoStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with VideoStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESVideoStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6C, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES VideoStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with VideoStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESVideoStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6D, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES VideoStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with VideoStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESVideoStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6E, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES VideoStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with VideoStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESVideoStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6F, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES VideoStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with VideoStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESVideoStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x61, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES VideoStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with VideoStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESVideoStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x62, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES VideoStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with VideoStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESVideoStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x63, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES VideoStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with VideoStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESVideoStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x64, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES VideoStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with VideoStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESVideoStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x65, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES VideoStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with VideoStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESVideoStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x66, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES VideoStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with VideoStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESVideoStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x67, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES VideoStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with VideoStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESVideoStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x68, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice MPEG-PES VideoStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomSplice MPEG-PES with VideoStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceMPEGPESVideoStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x69, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES 13522Stream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with 13522Stream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGES13522StreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x73, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES AncStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with AncStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESAncStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x79, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES AudioStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with AudioStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESAudioStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x40, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES AudioStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with AudioStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESAudioStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4A, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES AudioStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with AudioStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESAudioStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4B, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES AudioStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with AudioStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESAudioStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4C, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES AudioStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with AudioStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESAudioStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4D, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES AudioStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with AudioStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESAudioStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4E, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES AudioStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with AudioStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESAudioStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4F, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES AudioStream-16 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with AudioStream-16 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESAudioStream16SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x50, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES AudioStream-17 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with AudioStream-17 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESAudioStream17SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x51, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES AudioStream-18 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with AudioStream-18 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESAudioStream18SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x52, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES AudioStream-19 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with AudioStream-19 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESAudioStream19SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x53, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES AudioStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with AudioStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESAudioStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x41, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES AudioStream-20 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with AudioStream-20 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESAudioStream20SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x54, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES AudioStream-21 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with AudioStream-21 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESAudioStream21SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x55, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES AudioStream-22 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with AudioStream-22 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESAudioStream22SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x56, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES AudioStream-23 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with AudioStream-23 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESAudioStream23SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x57, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES AudioStream-24 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with AudioStream-24 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESAudioStream24SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x58, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES AudioStream-25 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with AudioStream-25 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESAudioStream25SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x59, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES AudioStream-26 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with AudioStream-26 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESAudioStream26SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5A, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES AudioStream-27 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with AudioStream-27 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESAudioStream27SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5B, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES AudioStream-28 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with AudioStream-28 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESAudioStream28SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5C, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES AudioStream-29 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with AudioStream-29 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESAudioStream29SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5D, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES AudioStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with AudioStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESAudioStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x42, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES AudioStream-30 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with AudioStream-30 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESAudioStream30SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5E, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES AudioStream-31 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with AudioStream-31 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESAudioStream31SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5F, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES AudioStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with AudioStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESAudioStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x43, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES AudioStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with AudioStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESAudioStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x44, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES AudioStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with AudioStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESAudioStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x45, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES AudioStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with AudioStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESAudioStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x46, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES AudioStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with AudioStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESAudioStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x47, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES AudioStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with AudioStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESAudioStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x48, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES AudioStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with AudioStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESAudioStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x49, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES DSMCCStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with DSMCCStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESDSMCCStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x72, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES ECMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with ECMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESECMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x70, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES EMMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with EMMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESEMMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x71, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES FlexMuxStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with FlexMuxStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESFlexMuxStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x7B, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES ITURec222-A SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with ITURec222-A SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESITURec222ASID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x74, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES ITURec222-B SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with ITURec222-B SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESITURec222BSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x75, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES ITURec222-C SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with ITURec222-C SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESITURec222CSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x76, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES ITURec222-D SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with ITURec222-D SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESITURec222DSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x77, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES ITURec222-E SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with ITURec222-E SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESITURec222ESID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x78, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES PaddingStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with PaddingStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESPaddingStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3E, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES PrivateStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with PrivateStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESPrivateStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3D, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES PrivateStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with PrivateStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESPrivateStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3F, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES ProgStreamDir SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with ProgStreamDir SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESProgStreamDirSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x7F, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES ProgStreamMap SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with ProgStreamMap SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESProgStreamMapSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3C, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES SLPackStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with SLPackStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESSLPackStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x7A, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES VideoStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with VideoStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESVideoStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x60, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES VideoStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with VideoStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESVideoStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6A, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES VideoStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with VideoStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESVideoStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6B, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES VideoStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with VideoStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESVideoStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6C, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES VideoStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with VideoStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESVideoStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6D, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES VideoStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with VideoStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESVideoStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6E, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES VideoStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with VideoStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESVideoStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6F, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES VideoStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with VideoStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESVideoStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x61, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES VideoStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with VideoStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESVideoStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x62, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES VideoStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with VideoStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESVideoStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x63, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES VideoStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with VideoStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESVideoStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x64, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES VideoStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with VideoStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESVideoStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x65, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES VideoStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with VideoStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESVideoStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x66, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES VideoStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with VideoStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESVideoStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x67, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES VideoStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with VideoStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESVideoStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x68, 0x06];
    /// <summary>
    /// MXF-GC CustomSplice-wrapped MPEG-ES VideoStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomSplice-wrapped MPEG-ES with VideoStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomSpliceWrappedMPEGESVideoStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x69, 0x06];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES 13522Stream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with 13522Stream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGES13522StreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x73, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES AncStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with AncStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESAncStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x79, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES AudioStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with AudioStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESAudioStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x40, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES AudioStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with AudioStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESAudioStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4A, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES AudioStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with AudioStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESAudioStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4B, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES AudioStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with AudioStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESAudioStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4C, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES AudioStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with AudioStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESAudioStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4D, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES AudioStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with AudioStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESAudioStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4E, 0x03];
    /// <summary>
    /// MXF-GC Custom Stripe-wrapped MPEG-ES AudioStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Custom Stripe-wrapped MPEG-ES with AudioStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESAudioStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4F, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES AudioStream-16 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with AudioStream-16 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESAudioStream16SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x50, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES AudioStream-17 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with AudioStream-17 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESAudioStream17SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x51, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES AudioStream-18 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with AudioStream-18 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESAudioStream18SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x52, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES AudioStream-19 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with AudioStream-19 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESAudioStream19SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x53, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES AudioStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with AudioStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESAudioStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x41, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES AudioStream-20 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with AudioStream-20 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESAudioStream20SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x54, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES AudioStream-21 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with AudioStream-21 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESAudioStream21SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x55, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES AudioStream-22 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with AudioStream-22 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESAudioStream22SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x56, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES AudioStream-23 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with AudioStream-23 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESAudioStream23SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x57, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES AudioStream-24 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with AudioStream-24 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESAudioStream24SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x58, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES AudioStream-25 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with AudioStream-25 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESAudioStream25SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x59, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES AudioStream-26 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with AudioStream-26 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESAudioStream26SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5A, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES AudioStream-27 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with AudioStream-27 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESAudioStream27SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5B, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES AudioStream-28 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with AudioStream-28 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESAudioStream28SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5C, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES AudioStream-29 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with AudioStream-29 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESAudioStream29SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5D, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES AudioStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with AudioStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESAudioStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x42, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES AudioStream-30 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with AudioStream-30 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESAudioStream30SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5E, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES AudioStream-31 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with AudioStream-31 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESAudioStream31SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5F, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES AudioStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with AudioStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESAudioStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x43, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES AudioStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with AudioStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESAudioStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x44, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES AudioStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with AudioStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESAudioStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x45, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES AudioStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with AudioStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESAudioStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x46, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES AudioStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with AudioStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESAudioStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x47, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES AudioStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with AudioStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESAudioStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x48, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES AudioStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with AudioStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESAudioStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x49, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES DSMCCStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with DSMCCStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESDSMCCStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x72, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES ECMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with ECMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESECMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x70, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES EMMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with EMMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESEMMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x71, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES FlexMuxStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with FlexMuxStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESFlexMuxStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x7B, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES ITURec222-A SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with ITURec222-A SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESITURec222ASID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x74, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES ITURec222-B SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with ITURec222-B SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESITURec222BSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x75, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES ITURec222-C SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with ITURec222-C SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESITURec222CSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x76, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES ITURec222-D SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with ITURec222-D SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESITURec222DSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x77, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES ITURec222-E SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with ITURec222-E SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESITURec222ESID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x78, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES PaddingStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with PaddingStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESPaddingStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3E, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES PrivateStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with PrivateStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESPrivateStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3D, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES PrivateStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with PrivateStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESPrivateStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3F, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES ProgStreamDir SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with ProgStreamDir SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESProgStreamDirSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x7F, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES ProgStreamMap SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with ProgStreamMap SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESProgStreamMapSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3C, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES SLPackStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with SLPackStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESSLPackStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x7A, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES VideoStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with VideoStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESVideoStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x60, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES VideoStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with VideoStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESVideoStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6A, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES VideoStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with VideoStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESVideoStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6B, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES VideoStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with VideoStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESVideoStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6C, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES VideoStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with VideoStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESVideoStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6D, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES VideoStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with VideoStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESVideoStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6E, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES VideoStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with VideoStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESVideoStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6F, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES VideoStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with VideoStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESVideoStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x61, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES VideoStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with VideoStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESVideoStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x62, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES VideoStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with VideoStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESVideoStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x63, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES VideoStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with VideoStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESVideoStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x64, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES VideoStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with VideoStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESVideoStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x65, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES VideoStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with VideoStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESVideoStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x66, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES VideoStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with VideoStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESVideoStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x67, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES VideoStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with VideoStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESVideoStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x68, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-ES VideoStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomStripe-wrapped MPEG-ES with VideoStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGESVideoStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x69, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES 13522Stream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with 13522Stream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPES13522StreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x73, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES AncStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with AncStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESAncStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x79, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES AudioStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with AudioStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESAudioStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x40, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES AudioStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with AudioStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESAudioStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4A, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES AudioStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with AudioStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESAudioStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4B, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES AudioStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with AudioStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESAudioStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4C, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES AudioStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with AudioStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESAudioStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4D, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES AudioStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with AudioStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESAudioStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4E, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES AudioStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with AudioStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESAudioStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4F, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES AudioStream-16 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with AudioStream-16 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESAudioStream16SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x50, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES AudioStream-17 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with AudioStream-17 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESAudioStream17SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x51, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES AudioStream-18 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with AudioStream-18 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESAudioStream18SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x52, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES AudioStream-19 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with AudioStream-19 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESAudioStream19SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x53, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES AudioStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with AudioStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESAudioStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x41, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES AudioStream-20 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with AudioStream-20 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESAudioStream20SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x54, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES AudioStream-21 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with AudioStream-21 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESAudioStream21SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x55, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES AudioStream-22 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with AudioStream-22 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESAudioStream22SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x56, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES AudioStream-23 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with AudioStream-23 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESAudioStream23SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x57, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES AudioStream-24 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with AudioStream-24 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESAudioStream24SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x58, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES AudioStream-25 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with AudioStream-25 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESAudioStream25SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x59, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES AudioStream-26 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with AudioStream-26 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESAudioStream26SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5A, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES AudioStream-27 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with AudioStream-27 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESAudioStream27SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5B, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES AudioStream-28 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with AudioStream-28 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESAudioStream28SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5C, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES AudioStream-29 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with AudioStream-29 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESAudioStream29SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5D, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES AudioStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with AudioStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESAudioStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x42, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES AudioStream-30 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with AudioStream-30 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESAudioStream30SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5E, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES AudioStream-31 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with AudioStream-31 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESAudioStream31SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5F, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES AudioStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with AudioStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESAudioStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x43, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES AudioStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with AudioStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESAudioStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x44, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES AudioStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with AudioStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESAudioStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x45, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES AudioStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with AudioStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESAudioStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x46, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES AudioStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with AudioStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESAudioStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x47, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES AudioStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with AudioStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESAudioStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x48, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES AudioStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with AudioStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESAudioStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x49, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES DSMCCStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with DSMCCStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESDSMCCStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x72, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES ECMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with ECMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESECMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x70, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES EMMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with EMMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESEMMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x71, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES FlexMuxStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with FlexMuxStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESFlexMuxStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x7B, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES ITURec222-A SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with ITURec222-A SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESITURec222ASID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x74, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES ITURec222-B SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with ITURec222-B SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESITURec222BSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x75, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES ITURec222-C SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with ITURec222-C SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESITURec222CSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x76, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES ITURec222-D SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with ITURec222-D SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESITURec222DSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x77, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES ITURec222-E SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with ITURec222-E SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESITURec222ESID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x78, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES PaddingStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with PaddingStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESPaddingStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3E, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES PrivateStream1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with PrivateStream1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESPrivateStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3D, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES PrivateStream2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with PrivateStream2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESPrivateStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3F, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES ProgStreamDir SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with ProgStreamDir SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESProgStreamDirSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x7F, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES ProgStreamMap SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with ProgStreamMap SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESProgStreamMapSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3C, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES SLPackStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with SLPackStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESSLPackStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x7A, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES VideoStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with VideoStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESVideoStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x60, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES VideoStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with VideoStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESVideoStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6A, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES VideoStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with VideoStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESVideoStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6B, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES VideoStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with VideoStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESVideoStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6C, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES VideoStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with VideoStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESVideoStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6D, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES VideoStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with VideoStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESVideoStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6E, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES VideoStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with VideoStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESVideoStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6F, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES VideoStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with VideoStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESVideoStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x61, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES VideoStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with VideoStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESVideoStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x62, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES VideoStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with VideoStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESVideoStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x63, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES VideoStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with VideoStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESVideoStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x64, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES VideoStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with VideoStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESVideoStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x65, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES VideoStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with VideoStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESVideoStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x66, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES VideoStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with VideoStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESVideoStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x67, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES VideoStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with VideoStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESVideoStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x68, 0x03];
    /// <summary>
    /// MXF-GC CustomStripe-wrapped MPEG-PES VideoStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomStripe-wrapped MPEG-PES with VideoStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomStripeWrappedMPEGPESVideoStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x69, 0x03];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES 13522Stream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with 13522Stream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGES13522StreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x73, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES AncStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with AncStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESAncStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x79, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES AudioStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with AudioStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESAudioStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x40, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES AudioStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with AudioStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESAudioStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4A, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES AudioStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with AudioStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESAudioStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4B, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES AudioStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with AudioStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESAudioStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4C, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES AudioStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with AudioStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESAudioStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4D, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES AudioStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with AudioStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESAudioStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4E, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES AudioStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with AudioStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESAudioStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4F, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES AudioStream-16 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with AudioStream-16 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESAudioStream16SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x50, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES AudioStream-17 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with AudioStream-17 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESAudioStream17SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x51, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES AudioStream-18 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with AudioStream-18 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESAudioStream18SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x52, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES AudioStream-19 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with AudioStream-19 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESAudioStream19SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x53, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES AudioStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with AudioStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESAudioStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x41, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES AudioStream-20 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with AudioStream-20 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESAudioStream20SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x54, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES AudioStream-21 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with AudioStream-21 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESAudioStream21SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x55, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES AudioStream-22 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with AudioStream-22 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESAudioStream22SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x56, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES AudioStream-23 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with AudioStream-23 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESAudioStream23SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x57, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES AudioStream-24 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with AudioStream-24 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESAudioStream24SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x58, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES AudioStream-25 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with AudioStream-25 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESAudioStream25SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x59, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES AudioStream-26 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with AudioStream-26 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESAudioStream26SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5A, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES AudioStream-27 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with AudioStream-27 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESAudioStream27SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5B, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES AudioStream-28 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with AudioStream-28 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESAudioStream28SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5C, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES AudioStream-29 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with AudioStream-29 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESAudioStream29SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5D, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES AudioStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with AudioStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESAudioStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x42, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES AudioStream-30 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with AudioStream-30 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESAudioStream30SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5E, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES AudioStream-31 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with AudioStream-31 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESAudioStream31SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5F, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES AudioStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with AudioStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESAudioStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x43, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES AudioStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with AudioStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESAudioStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x44, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES AudioStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with AudioStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESAudioStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x45, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES AudioStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with AudioStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESAudioStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x46, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES AudioStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with AudioStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESAudioStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x47, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES AudioStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with AudioStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESAudioStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x48, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES AudioStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with AudioStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESAudioStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x49, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES DSMCCStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with DSMCCStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESDSMCCStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x72, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES ECMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with ECMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESECMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x70, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES EMMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with EMMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESEMMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x71, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES FlexMuxStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with FlexMuxStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESFlexMuxStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x7B, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES ITURec222-A SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with ITURec222-A SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESITURec222ASID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x74, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES ITURec222-B SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with ITURec222-B SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESITURec222BSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x75, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES ITURec222-C SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with ITURec222-C SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESITURec222CSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x76, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES ITURec222-D SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with ITURec222-D SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESITURec222DSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x77, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES ITURec222-E SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with ITURec222-E SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESITURec222ESID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x78, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES PaddingStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with PaddingStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESPaddingStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3E, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES PrivateStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with PrivateStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESPrivateStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3D, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES PrivateStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with PrivateStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESPrivateStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3F, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES ProgStreamDir SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with ProgStreamDir SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESProgStreamDirSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x7F, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES ProgStreamMap SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with ProgStreamMap SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESProgStreamMapSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3C, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES SLPackStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with SLPackStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESSLPackStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x7A, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES VideoStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with VideoStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESVideoStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x60, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES VideoStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with VideoStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESVideoStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6A, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES VideoStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with VideoStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESVideoStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6B, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES VideoStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with VideoStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESVideoStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6C, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES VideoStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with VideoStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESVideoStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6D, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES VideoStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with VideoStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESVideoStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6E, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES VideoStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with VideoStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESVideoStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6F, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES VideoStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with VideoStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESVideoStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x61, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES VideoStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with VideoStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESVideoStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x62, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES VideoStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with VideoStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESVideoStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x63, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES VideoStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with VideoStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESVideoStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x64, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES VideoStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with VideoStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESVideoStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x65, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES VideoStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with VideoStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESVideoStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x66, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES VideoStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with VideoStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESVideoStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x67, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES VideoStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with VideoStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESVideoStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x68, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-ES VideoStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC CustomUnconstrained-wrapped MPEG-ES with VideoStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGESVideoStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x69, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES 13522Stream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with 13522Stream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPES13522StreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x73, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES AncStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with AncStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESAncStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x79, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES AudioStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with AudioStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESAudioStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x40, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES AudioStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with AudioStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESAudioStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4A, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES AudioStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with AudioStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESAudioStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4B, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES AudioStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with AudioStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESAudioStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4C, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES AudioStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with AudioStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESAudioStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4D, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES AudioStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with AudioStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESAudioStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4E, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES AudioStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with AudioStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESAudioStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4F, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES AudioStream-16 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with AudioStream-16 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESAudioStream16SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x50, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES AudioStream-17 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with AudioStream-17 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESAudioStream17SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x51, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES AudioStream-18 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with AudioStream-18 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESAudioStream18SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x52, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES AudioStream-19 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with AudioStream-19 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESAudioStream19SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x53, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES AudioStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with AudioStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESAudioStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x41, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES AudioStream-20 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with AudioStream-20 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESAudioStream20SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x54, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES AudioStream-21 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with AudioStream-21 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESAudioStream21SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x55, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES AudioStream-22 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with AudioStream-22 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESAudioStream22SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x56, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES AudioStream-23 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with AudioStream-23 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESAudioStream23SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x57, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES AudioStream-24 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with AudioStream-24 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESAudioStream24SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x58, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES AudioStream-25 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with AudioStream-25 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESAudioStream25SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x59, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES AudioStream-26 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with AudioStream-26 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESAudioStream26SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5A, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES AudioStream-27 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with AudioStream-27 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESAudioStream27SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5B, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES AudioStream-28 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with AudioStream-28 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESAudioStream28SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5C, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES AudioStream-29 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with AudioStream-29 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESAudioStream29SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5D, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES AudioStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with AudioStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESAudioStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x42, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES AudioStream-30 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with AudioStream-30 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESAudioStream30SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5E, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES AudioStream-31 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with AudioStream-31 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESAudioStream31SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5F, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES AudioStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with AudioStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESAudioStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x43, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES AudioStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with AudioStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESAudioStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x44, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES AudioStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with AudioStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESAudioStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x45, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES AudioStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with AudioStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESAudioStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x46, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES AudioStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with AudioStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESAudioStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x47, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES AudioStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with AudioStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESAudioStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x48, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES AudioStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with AudioStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESAudioStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x49, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES DSMCCStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with DSMCCStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESDSMCCStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x72, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES ECMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with ECMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESECMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x70, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES EMMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with EMMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESEMMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x71, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES FlexMuxStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with FlexMuxStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESFlexMuxStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x7B, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES ITURec222-A SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with ITURec222-A SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESITURec222ASID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x74, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES ITURec222-B SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with ITURec222-B SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESITURec222BSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x75, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES ITURec222-C SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with ITURec222-C SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESITURec222CSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x76, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES ITURec222-D SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with ITURec222-D SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESITURec222DSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x77, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES ITURec222-E SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with ITURec222-E SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESITURec222ESID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x78, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES PaddingStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with PaddingStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESPaddingStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3E, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES PrivateStream1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with PrivateStream1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESPrivateStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3D, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES PrivateStream2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with PrivateStream2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESPrivateStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3F, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES ProgStreamDir SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with ProgStreamDir SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESProgStreamDirSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x7F, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES ProgStreamMap SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with ProgStreamMap SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESProgStreamMapSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3C, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES SLPackStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with SLPackStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESSLPackStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x7A, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES VideoStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with VideoStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESVideoStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x60, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES VideoStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with VideoStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESVideoStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6A, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES VideoStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with VideoStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESVideoStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6B, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES VideoStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with VideoStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESVideoStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6C, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES VideoStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with VideoStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESVideoStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6D, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES VideoStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with VideoStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESVideoStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6E, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES VideoStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with VideoStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESVideoStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6F, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES VideoStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with VideoStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESVideoStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x61, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES VideoStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with VideoStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESVideoStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x62, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES VideoStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with VideoStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESVideoStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x63, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES VideoStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with VideoStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESVideoStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x64, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES VideoStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with VideoStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESVideoStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x65, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES VideoStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with VideoStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESVideoStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x66, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES VideoStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with VideoStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESVideoStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x67, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES VideoStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with VideoStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESVideoStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x68, 0x7F];
    /// <summary>
    /// MXF-GC CustomUnconstrained-wrapped MPEG-PES VideoStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, CustomUnconstrained-wrapped MPEG-PES with VideoStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCCustomUnconstrainedWrappedMPEGPESVideoStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x69, 0x7F];
    /// <summary>
    /// MXF-GC Custom-wrapped AES3 audio data
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Custom-wrapped AES3 audio data
    /// </remarks>
    private static readonly byte[] MXFGCCustomWrappedAES3AudioData = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x05, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x06, 0x09, 0x00];
    /// <summary>
    /// MXF-GC Custom-wrapped A-law Audio
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Custom-wrapped A-law compressed audio
    /// </remarks>
    private static readonly byte[] MXFGCCustomWrappedALawAudio = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0A, 0x03, 0x00];
    /// <summary>
    /// MXF-GC Custom-wrapped Broadcast Wave audio data
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Custom-wrapped Broadcast Wave audio data
    /// </remarks>
    private static readonly byte[] MXFGCCustomWrappedBroadcastWaveAudioData = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x05, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x06, 0x08, 0x00];
    /// <summary>
    /// MXF-GC D-Cinema Aux Data Essence
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC D-Cinema Aux Data Essence
    /// </remarks>
    private static readonly byte[] MXFGCDCinemaAuxDataEssence = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x13, 0x02, 0x01];
    /// <summary>
    /// MXF-GC D-Cinema Timed Text Stream
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC D-Cinema Timed Text Stream
    /// </remarks>
    private static readonly byte[] MXFGCDCinemaTimedTextStream = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x13, 0x01, 0x01];
    /// <summary>
    /// MXF-GC DMCVT Data
    /// </summary>
    /// <remarks>
    /// Identifies MXF-GC DMCVT Data
    /// </remarks>
    private static readonly byte[] MXFGCDMCVTData = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1A, 0x00, 0x00];
    /// <summary>
    /// MXF-GC DV-based 1080x50I 100Mbps
    /// </summary>
    /// <remarks>
    /// Identifiers for mappings using the MXF-GC DV-based compression of a 1080x50I source at 100Mbps
    /// </remarks>
    private static readonly byte[] MXFGCDVBased1080x50I100Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x61, 0x00];
    /// <summary>
    /// MXF-GC DV-based 1080x59.94I 100Mbps
    /// </summary>
    /// <remarks>
    /// Identifiers for mappings using the MXF-GC DV-based compression of a 1080x59.94I source at 100Mbps
    /// </remarks>
    private static readonly byte[] MXFGCDVBased1080x5994I100Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x60, 0x00];
    /// <summary>
    /// MXF-GC DV-based 525x59.94I 25Mbps
    /// </summary>
    /// <remarks>
    /// Identifiers for mappings using the MXF-GC DV-based compression of a 525x59.94I source at 25Mbps
    /// </remarks>
    private static readonly byte[] MXFGCDVBased525x5994I25Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x40, 0x00];
    /// <summary>
    /// MXF-GC DV-based 525x59.94I 50Mbps
    /// </summary>
    /// <remarks>
    /// Identifiers for mappings using the MXF-GC DV-based compression of a 525x59.94I source at 50Mbps
    /// </remarks>
    private static readonly byte[] MXFGCDVBased525x5994I50Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x50, 0x00];
    /// <summary>
    /// MXF-GC DV-based 625x50I 25Mbps
    /// </summary>
    /// <remarks>
    /// Identifiers for mappings using the MXF-GC DV-based compression of a 625x50I source at 25Mbps
    /// </remarks>
    private static readonly byte[] MXFGCDVBased625x50I25Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x41, 0x00];
    /// <summary>
    /// MXF-GC DV-based 625x50I 50Mbps
    /// </summary>
    /// <remarks>
    /// Identifiers for mappings using the MXF-GC DV-based compression of a 625x50I source at 50Mbps
    /// </remarks>
    private static readonly byte[] MXFGCDVBased625x50I50Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x51, 0x00];
    /// <summary>
    /// MXF-GC DV-based 720x50P 100Mbps
    /// </summary>
    /// <remarks>
    /// Identifiers for mappings using the MXF-GC DV-based compression of a 720x50P source at 100Mbps
    /// </remarks>
    private static readonly byte[] MXFGCDVBased720x50P100Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x63, 0x00];
    /// <summary>
    /// MXF-GC DV-based 720x59.94P 100Mbps
    /// </summary>
    /// <remarks>
    /// Identifiers for mappings using the MXF-GC DV-based compression of a 720x59.94P source at 100Mbps
    /// </remarks>
    private static readonly byte[] MXFGCDVBased720x5994P100Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x62, 0x00];
    /// <summary>
    /// MXF-GC DV-based UndefinedSource
    /// </summary>
    /// <remarks>
    /// Identifiers for mappings using the MXF-GC DV-based compression of an undefined source
    /// </remarks>
    private static readonly byte[] MXFGCDVBasedUndefinedSource = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x7F, 0x00];
    /// <summary>
    /// MXF-GC DV-DIF Mappings
    /// </summary>
    /// <remarks>
    /// Identifiers for mappings using the MXF-GC: DV-DIF
    /// </remarks>
    private static readonly byte[] MXFGCDVDIFMappings = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x00, 0x00];
    /// <summary>
    /// MXF-GC Encrypted Data Mappings
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF Encrypted Generic Container
    /// </remarks>
    private static readonly byte[] MXFGCEncryptedDataMappings = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x07, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0B, 0x00, 0x00];
    /// <summary>
    /// MXF-GC Essence Container DNxPacked
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Essence Container DNxPacked
    /// </remarks>
    private static readonly byte[] MXFGCEssenceContainerDNxPacked = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1E, 0x00, 0x00];
    /// <summary>
    /// MXF-GC Essence Container DNxPacked Clip Wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Essence Container DNxPacked Clip Wrapped
    /// </remarks>
    private static readonly byte[] MXFGCEssenceContainerDNxPackedClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1E, 0x02, 0x00];
    /// <summary>
    /// MXF-GC Essence Container DNxPacked Frame Wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Essence Container DNxPacked Frame Wrapped
    /// </remarks>
    private static readonly byte[] MXFGCEssenceContainerDNxPackedFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1E, 0x01, 0x00];
    /// <summary>
    /// MXF-GC Essence Container ProRes Picture
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Essence Container ProRes Picture
    /// </remarks>
    private static readonly byte[] MXFGCEssenceContainerProResPicture = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1C, 0x00, 0x00];
    /// <summary>
    /// MXF-GC F1 Field-Wrapped Picture Element
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC F1 Field-Wrapped Picture Element JPEG 2000 mapping
    /// </remarks>
    private static readonly byte[] MXFGCF1FieldWrappedPictureElement = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0C, 0x05, 0x00];
    /// <summary>
    /// MXFGCFFV1Pictures
    /// </summary>
    /// <remarks>
    /// MXF-GC FFV1 Essence Container Labels
    /// </remarks>
    private static readonly byte[] MXFGCFFV1Pictures = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x23, 0x00, 0x00];
    /// <summary>
    /// MXFGCFFV1PicturesClip
    /// </summary>
    /// <remarks>
    /// MXF-GC FFV1 Essence Container Label, Clip-wrapped Picture Element
    /// </remarks>
    private static readonly byte[] MXFGCFFV1PicturesClip = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x23, 0x02, 0x00];
    /// <summary>
    /// MXFGCFFV1PicturesFrame
    /// </summary>
    /// <remarks>
    /// MXF-GC FFV1 Essence Container Label, Frame-wrapped Picture Element
    /// </remarks>
    private static readonly byte[] MXFGCFFV1PicturesFrame = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x23, 0x01, 0x00];
    /// <summary>
    /// MXF-GC Frame-wrapped ACES Pictures
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped ACES SMPTE ST 2065-4 images
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedACESPictures = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x19, 0x01, 0x00];
    /// <summary>
    /// MXF-GC Frame-wrapped AES3 audio data
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped AES3 audio data
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedAES3AudioData = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x06, 0x03, 0x00];
    /// <summary>
    /// MXF-GC Frame-wrapped A-law Audio
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped A-law compressed audio
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedALawAudio = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0A, 0x01, 0x00];
    /// <summary>
    /// MXF-GC Frame-wrapped Broadcast Wave audio data
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped Broadcast Wave audio data
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedBroadcastWaveAudioData = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x06, 0x01, 0x00];
    /// <summary>
    /// MXF-GC Frame-Wrapped DMCVT Data
    /// </summary>
    /// <remarks>
    /// Identifies MXF-GC Frame-Wrapped DMCVT Data
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedDMCVTData = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1A, 0x01, 0x00];
    /// <summary>
    /// MXF-GC Frame-wrapped DV-based 1080x50I 100Mbps
    /// </summary>
    /// <remarks>
    /// Identifier for MXF MXF-GC Frame-wrapped compressed data of a DV-based source at 1080x50I
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedDVBased1080x50I100Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x61, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped DV-based 1080x59.94I 100Mbps
    /// </summary>
    /// <remarks>
    /// Identifier for MXF MXF-GC Frame-wrapped compressed data of a DV-based source at 1080x59.94I
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedDVBased1080x5994I100Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x60, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped DV-based 525x59.94I 25Mbps
    /// </summary>
    /// <remarks>
    /// Identifier for MXF MXF-GC Frame-wrapped compressed data of a DV-based source at 525x59.94I
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedDVBased525x5994I25Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x40, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped DV-based 525x59.94I 50Mbps
    /// </summary>
    /// <remarks>
    /// Identifier for MXF MXF-GC Frame-wrapped compressed data of a DV-based source at 525x59.94I
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedDVBased525x5994I50Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x50, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped DV-based 625x50I 25Mbps
    /// </summary>
    /// <remarks>
    /// Identifier for MXF MXF-GC Frame-wrapped compressed data of a DV-based source at 625x50I
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedDVBased625x50I25Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x41, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped DV-based 625x50I 50Mbps
    /// </summary>
    /// <remarks>
    /// Identifier for MXF MXF-GC Frame-wrapped compressed data of a DV-based source at 625x50I
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedDVBased625x50I50Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x51, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped DV-based 720x50P 100Mbps
    /// </summary>
    /// <remarks>
    /// Identifier for MXF MXF-GC Frame-wrapped compressed data of a DV-based source at 720x50P
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedDVBased720x50P100Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x63, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped DV-based 720x59.94P 100Mbps
    /// </summary>
    /// <remarks>
    /// Identifier for MXF MXF-GC Frame-wrapped compressed data of a DV-based source at 720x59.94P
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedDVBased720x5994P100Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x62, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped DV-based UndefinedSource
    /// </summary>
    /// <remarks>
    /// Identifier for MXF MXF-GC Frame-wrapped compressed data of an undefined source
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedDVBasedUndefinedSource = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x7F, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped Encrypted Data
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC, Frame wrapped generic container encrypted according to the DC28 specification
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedEncryptedData = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x07, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0B, 0x01, 0x00];
    /// <summary>
    /// MXF-GC Frame-Wrapped Essence Container ProRes Picture
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-Wrapped Essence Container ProRes Picture
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedEssenceContainerProResPicture = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1C, 0x01, 0x00];
    /// <summary>
    /// MXF-GC Frame-wrapped IEC-DV 525x59.94I 25Mbps
    /// </summary>
    /// <remarks>
    /// Identifier for MXF Frame-wrapped IEC-DV compressed data of a 525x59.94I source at 25Mbps
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedIECDV525x5994I25Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x01, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped IEC-DV 525x59.94I 25Mbps SMPTE-322M
    /// </summary>
    /// <remarks>
    /// Identifier for MXF Frame-wrapped IEC-DV compressed data of a 525x59.94I source at 25Mbps
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedIECDV525x5994I25MbpsSMPTE322M = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x03, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped IEC-DV 625x50I 25Mbps
    /// </summary>
    /// <remarks>
    /// Identifier for MXF Frame-wrapped IEC-DV compressed data of a 625x50I source at 25Mbps
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedIECDV625x50I25Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x02, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped IEC-DV 625x50I 25Mbps SMPTE-322M
    /// </summary>
    /// <remarks>
    /// Identifier for MXF Frame-wrapped IEC-DV compressed data of a 625x50I source at 25Mbps
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedIECDV625x50I25MbpsSMPTE322M = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x04, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped IEC-DV UndefinedSource 25Mbps
    /// </summary>
    /// <remarks>
    /// Identifier for MXF Frame-wrapped IEC-DV compressed data of an undefined source
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedIECDVUndefinedSource25Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x3F, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped Interlaced JPEG XS Pictures
    /// </summary>
    /// <remarks>
    /// Identifies Frame-wrapping of Interlaced JPEG XS pictures
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedInterlacedJPEGXSPictures = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x21, 0x02, 0x00];
    /// <summary>
    /// MXF-GC Frame-wrapped MGA
    /// </summary>
    /// <remarks>
    /// Identifies a Frame-wrapped MGA signal
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMGA = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x25, 0x01, 0x00];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES 13522Stream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with 13522Stream SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGES13522StreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x73, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES AncStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with AncStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESAncStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x79, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES AudioStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with AudioStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESAudioStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x40, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES AudioStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with AudioStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESAudioStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4A, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES AudioStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with AudioStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESAudioStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4B, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES AudioStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with AudioStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESAudioStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4C, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES AudioStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with AudioStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESAudioStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4D, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES AudioStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with AudioStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESAudioStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4E, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES AudioStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with AudioStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESAudioStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4F, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES AudioStream-16 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with AudioStream-16 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESAudioStream16SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x50, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES AudioStream-17 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with AudioStream-17 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESAudioStream17SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x51, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES AudioStream-18 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with AudioStream-18 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESAudioStream18SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x52, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES AudioStream-19 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with AudioStream-19 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESAudioStream19SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x53, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES AudioStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with AudioStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESAudioStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x41, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES AudioStream-20 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with AudioStream-20 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESAudioStream20SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x54, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES AudioStream-21 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with AudioStream-21 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESAudioStream21SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x55, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES AudioStream-22 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with AudioStream-22 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESAudioStream22SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x56, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES AudioStream-23 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with AudioStream-23 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESAudioStream23SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x57, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES AudioStream-24 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with AudioStream-24 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESAudioStream24SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x58, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES AudioStream-25 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with AudioStream-25 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESAudioStream25SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x59, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES AudioStream-26 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with AudioStream-26 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESAudioStream26SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5A, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES AudioStream-27 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with AudioStream-27 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESAudioStream27SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5B, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES AudioStream-28 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with AudioStream-28 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESAudioStream28SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5C, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES AudioStream-29 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with AudioStream-29 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESAudioStream29SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5D, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES AudioStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with AudioStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESAudioStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x42, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES AudioStream-30 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with AudioStream-30 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESAudioStream30SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5E, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES AudioStream-31 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with AudioStream-31 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESAudioStream31SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5F, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES AudioStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with AudioStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESAudioStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x43, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES AudioStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with AudioStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESAudioStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x44, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES AudioStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with AudioStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESAudioStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x45, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES AudioStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with AudioStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESAudioStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x46, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES AudioStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with AudioStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESAudioStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x47, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES AudioStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with AudioStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESAudioStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x48, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES AudioStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with AudioStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESAudioStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x49, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES DSMCCStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with DSMCCStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESDSMCCStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x72, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES ECMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with ECMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESECMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x70, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES EMMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with EMMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESEMMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x71, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES FlexMuxStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with FlexMuxStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESFlexMuxStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x7B, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES ITURec222-A SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with ITURec222-A SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESITURec222ASID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x74, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES ITURec222-B SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with ITURec222-B SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESITURec222BSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x75, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES ITURec222-C SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with ITURec222-C SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESITURec222CSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x76, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES ITURec222-D SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with ITURec222-D SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESITURec222DSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x77, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES ITURec222-E SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with ITURec222-E SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESITURec222ESID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x78, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES PaddingStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with PaddingStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESPaddingStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3E, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES PrivateStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with PrivateStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESPrivateStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3D, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES PrivateStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with PrivateStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESPrivateStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3F, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES ProgStreamDir SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with ProgStreamDir SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESProgStreamDirSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x7F, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES ProgStreamMap SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with ProgStreamMap SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESProgStreamMapSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3C, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES SLPackStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with SLPackStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESSLPackStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x7A, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES VideoStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with VideoStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESVideoStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x60, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES VideoStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with VideoStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESVideoStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6A, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES VideoStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with VideoStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESVideoStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6B, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES VideoStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with VideoStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESVideoStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6C, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES VideoStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with VideoStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESVideoStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6D, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES VideoStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with VideoStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESVideoStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6E, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES VideoStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with VideoStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESVideoStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6F, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES VideoStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with VideoStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESVideoStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x61, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES VideoStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with VideoStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESVideoStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x62, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES VideoStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with VideoStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESVideoStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x63, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES VideoStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with VideoStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESVideoStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x64, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES VideoStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with VideoStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESVideoStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x65, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES VideoStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with VideoStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESVideoStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x66, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES VideoStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with VideoStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESVideoStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x67, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES VideoStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with VideoStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESVideoStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x68, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-ES VideoStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped MPEG-ES with VideoStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGESVideoStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x69, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES 13522Stream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with 13522Stream SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPES13522StreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x73, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES AncStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with AncStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESAncStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x79, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES AudioStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with AudioStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESAudioStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x40, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES AudioStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with AudioStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESAudioStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4A, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES AudioStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with AudioStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESAudioStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4B, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES AudioStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with AudioStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESAudioStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4C, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES AudioStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with AudioStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESAudioStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4D, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES AudioStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with AudioStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESAudioStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4E, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES AudioStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with AudioStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESAudioStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4F, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES AudioStream-16 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with AudioStream-16 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESAudioStream16SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x50, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES AudioStream-17 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with AudioStream-17 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESAudioStream17SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x51, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES AudioStream-18 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with AudioStream-18 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESAudioStream18SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x52, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES AudioStream-19 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with AudioStream-19 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESAudioStream19SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x53, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES AudioStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with AudioStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESAudioStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x41, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES AudioStream-20 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with AudioStream-20 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESAudioStream20SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x54, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES AudioStream-21 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with AudioStream-21 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESAudioStream21SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x55, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES AudioStream-22 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with AudioStream-22 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESAudioStream22SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x56, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES AudioStream-23 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with AudioStream-23 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESAudioStream23SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x57, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES AudioStream-24 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with AudioStream-24 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESAudioStream24SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x58, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES AudioStream-25 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with AudioStream-25 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESAudioStream25SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x59, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES AudioStream-26 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with AudioStream-26 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESAudioStream26SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5A, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES AudioStream-27 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with AudioStream-27 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESAudioStream27SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5B, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES AudioStream-28 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with AudioStream-28 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESAudioStream28SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5C, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES AudioStream-29 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with AudioStream-29 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESAudioStream29SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5D, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES AudioStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with AudioStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESAudioStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x42, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES AudioStream-30 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with AudioStream-30 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESAudioStream30SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5E, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES AudioStream-31 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with AudioStream-31 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESAudioStream31SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5F, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES AudioStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with AudioStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESAudioStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x43, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES AudioStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with AudioStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESAudioStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x44, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES AudioStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with AudioStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESAudioStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x45, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES AudioStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with AudioStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESAudioStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x46, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES AudioStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with AudioStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESAudioStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x47, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES AudioStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with AudioStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESAudioStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x48, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES AudioStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with AudioStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESAudioStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x49, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES DSMCCStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with DSMCCStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESDSMCCStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x72, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES ECMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with ECMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESECMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x70, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES EMMStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with EMMStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESEMMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x71, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES FlexMuxStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with FlexMuxStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESFlexMuxStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x7B, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES ITURec222-A SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with ITURec222-A SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESITURec222ASID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x74, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES ITURec222-B SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with ITURec222-B SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESITURec222BSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x75, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES ITURec222-C SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with ITURec222-C SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESITURec222CSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x76, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES ITURec222-D SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with ITURec222-D SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESITURec222DSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x77, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES ITURec222-E SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with ITURec222-E SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESITURec222ESID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x78, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES PaddingStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with PaddingStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESPaddingStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3E, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES PrivateStream1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with PrivateStream1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESPrivateStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3D, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES PrivateStream2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with PrivateStream2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESPrivateStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3F, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES ProgStreamDir SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with ProgStreamDir SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESProgStreamDirSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x7F, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES ProgStreamMap SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with ProgStreamMap SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESProgStreamMapSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3C, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES SLPackStream SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with SLPackStream SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESSLPackStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x7A, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES VideoStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with VideoStream-0 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESVideoStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x60, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES VideoStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with VideoStream-10 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESVideoStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6A, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES VideoStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with VideoStream-11 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESVideoStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6B, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES VideoStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with VideoStream-12 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESVideoStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6C, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES VideoStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with VideoStream-13 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESVideoStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6D, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES VideoStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with VideoStream-14 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESVideoStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6E, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES VideoStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with VideoStream-15 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESVideoStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6F, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES VideoStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with VideoStream-1 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESVideoStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x61, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES VideoStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with VideoStream-2 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESVideoStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x62, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES VideoStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with VideoStream-3 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESVideoStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x63, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES VideoStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with VideoStream-4 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESVideoStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x64, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES VideoStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with VideoStream-5 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESVideoStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x65, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES VideoStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with VideoStream-6 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESVideoStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x66, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES VideoStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with VideoStream-7 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESVideoStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x67, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES VideoStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with VideoStream-8 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESVideoStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x68, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped MPEG-PES VideoStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC, Frame-wrapped MPEG-PES with VideoStream-9 SID value
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedMPEGPESVideoStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x69, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped Progressive JPEG XS Pictures
    /// </summary>
    /// <remarks>
    /// Identifies Frame-wrapping of Progressive JPEG XS pictures
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedProgressiveJPEGXSPictures = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x21, 0x01, 0x00];
    /// <summary>
    /// MXF-GC Frame-wrapped SMPTE D-10 525x59.94I 30Mbps DefinedTemplate
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped SMPTE mapping of D-10 at 525x59.94I using the defined template
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedSMPTED10525x5994I30MbpsDefinedTemplate = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x01, 0x06, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped SMPTE D-10 525x59.94I 30Mbps ExtendedTemplate
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped SMPTE mapping of D-10 at 525x59.94I using the extended template
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedSMPTED10525x5994I30MbpsExtendedTemplate = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x01, 0x06, 0x02];
    /// <summary>
    /// MXF-GC Frame-wrapped SMPTE D-10 525x59.94I 30Mbps PictureOnly
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped SMPTE mapping of D-10 at 525x59.94I using the picture-only
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedSMPTED10525x5994I30MbpsPictureOnly = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x01, 0x06, 0x7F];
    /// <summary>
    /// MXF-GC Frame-wrapped SMPTE D-10 525x59.94I 40Mbps DefinedTemplate
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped SMPTE mapping of D-10 at 525x59.94I using the defined template
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedSMPTED10525x5994I40MbpsDefinedTemplate = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x01, 0x04, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped SMPTE D-10 525x59.94I 40Mbps ExtendedTemplate
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped SMPTE mapping of D-10 at 525x59.94I using the extended template
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedSMPTED10525x5994I40MbpsExtendedTemplate = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x01, 0x04, 0x02];
    /// <summary>
    /// MXF-GC Frame-wrapped SMPTE D-10 525x59.94I 40Mbps PictureOnly
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped SMPTE mapping of D-10 at 525x59.94I using the picture-only
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedSMPTED10525x5994I40MbpsPictureOnly = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x01, 0x04, 0x7F];
    /// <summary>
    /// MXF-GC Frame-wrapped SMPTE D-10 525x59.94I 50Mbps DefinedTemplate
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped SMPTE mapping of D-10 at 525x59.94I using the defined template
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedSMPTED10525x5994I50MbpsDefinedTemplate = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x01, 0x02, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped SMPTE D-10 525x59.94I 50Mbps ExtendedTemplate
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped SMPTE mapping of D-10 at 525x59.94I using the extended template
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedSMPTED10525x5994I50MbpsExtendedTemplate = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x01, 0x02, 0x02];
    /// <summary>
    /// MXF-GC Frame-wrapped SMPTE D-10 525x59.94I 50Mbps PictureOnly
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped SMPTE mapping of D-10 at 525x59.94I using the picture-only
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedSMPTED10525x5994I50MbpsPictureOnly = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x01, 0x02, 0x7F];
    /// <summary>
    /// MXF-GC Frame-wrapped SMPTE D-10 625x50I 30Mbps DefinedTemplate
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped SMPTE mapping of D-10 at 625x50I using the defined template
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedSMPTED10625x50I30MbpsDefinedTemplate = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x01, 0x05, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped SMPTE D-10 625x50I 30Mbps ExtendedTemplate
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped SMPTE mapping of D-10 at 625x50I using the extended template
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedSMPTED10625x50I30MbpsExtendedTemplate = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x01, 0x05, 0x02];
    /// <summary>
    /// MXF-GC Frame-wrapped SMPTE D-10 625x50I 30Mbps PictureOnly
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped SMPTE mapping of D-10 at 625x50I using the picture-only
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedSMPTED10625x50I30MbpsPictureOnly = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x01, 0x05, 0x7F];
    /// <summary>
    /// MXF-GC Frame-wrapped SMPTE D-10 625x50I 40Mbps DefinedTemplate
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped SMPTE mapping of D-10 at 625x50I using the defined template
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedSMPTED10625x50I40MbpsDefinedTemplate = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x01, 0x03, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped SMPTE D-10 625x50I 40Mbps ExtendedTemplate
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped SMPTE mapping of D-10 at 625x50I using the extended template
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedSMPTED10625x50I40MbpsExtendedTemplate = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x01, 0x03, 0x02];
    /// <summary>
    /// MXF-GC Frame-wrapped SMPTE D-10 625x50I 40Mbps PictureOnly
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped SMPTE mapping of D-10 at 625x50I using the picture-only
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedSMPTED10625x50I40MbpsPictureOnly = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x01, 0x03, 0x7F];
    /// <summary>
    /// MXF-GC Frame-wrapped SMPTE D-10 625x50I 50Mbps DefinedTemplate
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped SMPTE mapping of D-10 at 625x50I using the defined template
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedSMPTED10625x50I50MbpsDefinedTemplate = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x01, 0x01, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped SMPTE D-10 625x50I 50Mbps ExtendedTemplate
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped SMPTE mapping of D-10 at 625x50I using the extended template
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedSMPTED10625x50I50MbpsExtendedTemplate = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x01, 0x01, 0x02];
    /// <summary>
    /// MXF-GC Frame-wrapped SMPTE D-10 625x50I 50Mbps PictureOnly
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped SMPTE mapping of D-10 at 625x50I using the picture-only
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedSMPTED10625x50I50MbpsPictureOnly = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x01, 0x01, 0x7F];
    /// <summary>
    /// MXF-GC Frame-wrapped SMPTE D-11 1080x23.98PsF Defined Template
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped SMPTE of D-11 1080x23.98PsF using the defined template
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedSMPTED111080x2398PsFDefinedTemplate = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x03, 0x01, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped SMPTE D-11 1080x23.98PsF Extended Template
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped SMPTE of D-11 1080x23.98PsF using the extended template
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedSMPTED111080x2398PsFExtendedTemplate = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x03, 0x01, 0x02];
    /// <summary>
    /// MXF-GC Frame-wrapped SMPTE D-11 1080x23.98PsF Picture Only
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped SMPTE of D-11 1080x23.98PsF using the picture only template
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedSMPTED111080x2398PsFPictureOnly = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x03, 0x01, 0x7F];
    /// <summary>
    /// MXF-GC Frame-wrapped SMPTE D-11 1080x24PsF Defined Template
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped SMPTE of D-11 1080x24PsF using the defined template
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedSMPTED111080x24PsFDefinedTemplate = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x03, 0x02, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped SMPTE D-11 1080x24PsF Extended Template
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped SMPTE of D-11 1080x24PsF using the extended template
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedSMPTED111080x24PsFExtendedTemplate = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x03, 0x02, 0x02];
    /// <summary>
    /// MXF-GC Frame-wrapped SMPTE D-11 1080x24PsF Picture Only
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped SMPTE of D-11 1080x24PsF using the picture only template
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedSMPTED111080x24PsFPictureOnly = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x03, 0x02, 0x7F];
    /// <summary>
    /// MXF-GC Frame-wrapped SMPTE D-11 1080x25PsF Defined Template
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped SMPTE of D-11 1080x25PsF using the defined template
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedSMPTED111080x25PsFDefinedTemplate = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x03, 0x03, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped SMPTE D-11 1080x25PsF Extended Template
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped SMPTE of D-11 1080x25PsF using the extended template
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedSMPTED111080x25PsFExtendedTemplate = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x03, 0x03, 0x02];
    /// <summary>
    /// MXF-GC Frame-wrapped SMPTE D-11 1080x25PsF Picture Only
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped SMPTE of D-11 1080x25PsF using the picture only template
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedSMPTED111080x25PsFPictureOnly = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x03, 0x03, 0x7F];
    /// <summary>
    /// MXF-GC Frame-wrapped SMPTE D-11 1080x29.97PsF Defined Template
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped SMPTE of D-11 1080x29.97PsF using the defined template
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedSMPTED111080x2997PsFDefinedTemplate = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x03, 0x04, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped SMPTE D-11 1080x29.97PsF Extended Template
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped SMPTE of D-11 1080x29.97PsF using the extended template
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedSMPTED111080x2997PsFExtendedTemplate = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x03, 0x04, 0x02];
    /// <summary>
    /// MXF-GC Frame-wrapped SMPTE D-11 1080x29.97PsF Picture Only
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped SMPTE of D-11 1080x29.97PsF using the picture only template
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedSMPTED111080x2997PsFPictureOnly = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x03, 0x04, 0x7F];
    /// <summary>
    /// MXF-GC Frame-wrapped SMPTE D-11 1080x50I Defined Template
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped SMPTE of D-11 1080x50I using the defined template
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedSMPTED111080x50IDefinedTemplate = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x03, 0x05, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped SMPTE D-11 1080x50I Extended Template
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped SMPTE of D-11 1080x50I using the extended template
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedSMPTED111080x50IExtendedTemplate = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x03, 0x05, 0x02];
    /// <summary>
    /// MXF-GC Frame-wrapped SMPTE D-11 1080x50I Picture Only
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped SMPTE of D-11 1080x50I using the picture only template
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedSMPTED111080x50IPictureOnly = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x03, 0x05, 0x7F];
    /// <summary>
    /// MXF-GC Frame-wrapped SMPTE D-11 1080x59.94I Defined Template
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped SMPTE of D-11 1080x59.94I using the defined template
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedSMPTED111080x5994IDefinedTemplate = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x03, 0x06, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped SMPTE D-11 1080x59.94I Extended Template
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped SMPTE of D-11 1080x59.94I using the extended template
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedSMPTED111080x5994IExtendedTemplate = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x03, 0x06, 0x02];
    /// <summary>
    /// MXF-GC Frame-wrapped SMPTE D-11 1080x59.94I Picture Only
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC Frame-wrapped SMPTE of D-11 1080x59.94I using the picture only template
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedSMPTED111080x5994IPictureOnly = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x03, 0x06, 0x7F];
    /// <summary>
    /// MXF-GC Frame-wrapped TIFF/EP Profile 2 Pictures
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped TIFF/EP Profile 2 Pictures
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedTIFFEPProfile2Pictures = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x14, 0x01, 0x00];
    /// <summary>
    /// MXF-GC Frame-wrapped Uncompressed 1080x23.98P 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped source of Uncompressed 1080x23.98P video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedUncompressed1080x2398P1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped Uncompressed 1080x23.98PsF 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped source of Uncompressed 1080x23.98PsF video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedUncompressed1080x2398PsF1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x05];
    /// <summary>
    /// MXF-GC Frame-wrapped Uncompressed 1080x24P 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped source of Uncompressed 1080x24P video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedUncompressed1080x24P1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x11];
    /// <summary>
    /// MXF-GC Frame-wrapped Uncompressed 1080x24PsF 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped source of Uncompressed 1080x24PsF video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedUncompressed1080x24PsF1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x15];
    /// <summary>
    /// MXF-GC Frame-wrapped Uncompressed 1080x25P 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped source of Uncompressed 1080x25P video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedUncompressed1080x25P1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x21];
    /// <summary>
    /// MXF-GC Frame-wrapped Uncompressed 1080x25PsF 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped source of Uncompressed 1080x25PsF video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedUncompressed1080x25PsF1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x25];
    /// <summary>
    /// MXF-GC Frame-wrapped Uncompressed 1080x29.97P 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped source of Uncompressed 1080x29.97P video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedUncompressed1080x2997P1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x31];
    /// <summary>
    /// MXF-GC Frame-wrapped Uncompressed 1080x29.97PsF 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped source of Uncompressed 1080x29.97PsF video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedUncompressed1080x2997PsF1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x35];
    /// <summary>
    /// MXF-GC Frame-wrapped Uncompressed 1080x30P 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped source of Uncompressed 1080x30P video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedUncompressed1080x30P1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x41];
    /// <summary>
    /// MXF-GC Frame-wrapped Uncompressed 1080x30PsF 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped source of Uncompressed 1080x30PsF video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedUncompressed1080x30PsF1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x45];
    /// <summary>
    /// MXF-GC Frame-wrapped Uncompressed 1080x50I 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped source of Uncompressed 1080x50I video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedUncompressed1080x50I1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x29];
    /// <summary>
    /// MXF-GC Frame-wrapped Uncompressed 1080x50P 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped source of Uncompressed 1080x50P video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedUncompressed1080x50P1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x51];
    /// <summary>
    /// MXF-GC Frame-wrapped Uncompressed 1080x59.94I 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped source of Uncompressed 1080x59.94I video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedUncompressed1080x5994I1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x39];
    /// <summary>
    /// MXF-GC Frame-wrapped Uncompressed 1080x59.94P 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped source of Uncompressed 1080x59.94P video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedUncompressed1080x5994P1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x59];
    /// <summary>
    /// MXF-GC Frame-wrapped Uncompressed 1080x60I 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped source of Uncompressed 1080x60I video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedUncompressed1080x60I1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x49];
    /// <summary>
    /// MXF-GC Frame-wrapped Uncompressed 1080x60P 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped source of Uncompressed 1080x60P video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedUncompressed1080x60P1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x61];
    /// <summary>
    /// MXF-GC Frame-wrapped Uncompressed 525x59.94I 720 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped source of Uncompressed 525x59.94I video using 720 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedUncompressed525x5994I720422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x01, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped Uncompressed 525x59.94I 960 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped source of Uncompressed 525x59.94I video using 960 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedUncompressed525x5994I960422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x01, 0x09];
    /// <summary>
    /// MXF-GC Frame-wrapped Uncompressed 525x59.94I 960 4444
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped source of Uncompressed 525x59.94I video using 960 pixels and 4444 sampling
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedUncompressed525x5994I9604444 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x01, 0x21];
    /// <summary>
    /// MXF-GC Frame-wrapped Uncompressed 525x59.94P 960 420
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped source of Uncompressed 525x59.94P video using 960 pixels and 420 sampling
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedUncompressed525x5994P960420 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x01, 0x11];
    /// <summary>
    /// MXF-GC Frame-wrapped Uncompressed 525x59.94P 960 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped source of Uncompressed 525x59.94P video using 960 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedUncompressed525x5994P960422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x01, 0x19];
    /// <summary>
    /// MXF-GC Frame-wrapped Uncompressed 625x50I 720 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped source of Uncompressed 625x50I video using 720 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedUncompressed625x50I720422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x01, 0x05];
    /// <summary>
    /// MXF-GC Frame-wrapped Uncompressed 625x50I 960 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped source of Uncompressed 625x50I video using 960 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedUncompressed625x50I960422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x01, 0x0D];
    /// <summary>
    /// MXF-GC Frame-wrapped Uncompressed 625x50I 960 4444
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped source of Uncompressed 625x50I video using 960 pixels and 4444 sampling
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedUncompressed625x50I9604444 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x01, 0x25];
    /// <summary>
    /// MXF-GC Frame-wrapped Uncompressed 625x50P 960 420
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped source of Uncompressed 625x50P video using 960 pixels and 420 sampling
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedUncompressed625x50P960420 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x01, 0x15];
    /// <summary>
    /// MXF-GC Frame-wrapped Uncompressed 625x50P 960 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped source of Uncompressed 625x50P video using 960 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedUncompressed625x50P960422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x01, 0x1D];
    /// <summary>
    /// MXF-GC Frame-wrapped Uncompressed 720x23.98P 1280 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped source of Uncompressed 720x23.98P video using 1280 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedUncompressed720x2398P1280422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x03, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped Uncompressed 720x24P 1280 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped source of Uncompressed 720x24P video using 1280 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedUncompressed720x24P1280422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x03, 0x05];
    /// <summary>
    /// MXF-GC Frame-wrapped Uncompressed 720x25P 1280 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped source of Uncompressed 720x25P video using 1280 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedUncompressed720x25P1280422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x03, 0x09];
    /// <summary>
    /// MXF-GC Frame-wrapped Uncompressed 720x29.97P 1280 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped source of Uncompressed 720x29.97P video using 1280 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedUncompressed720x2997P1280422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x03, 0x11];
    /// <summary>
    /// MXF-GC Frame-wrapped Uncompressed 720x30P 1280 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped source of Uncompressed 720x30P video using 1280 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedUncompressed720x30P1280422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x03, 0x15];
    /// <summary>
    /// MXF-GC Frame-wrapped Uncompressed 720x50P 1280 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped source of Uncompressed 720x50P video using 1280 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedUncompressed720x50P1280422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x03, 0x19];
    /// <summary>
    /// MXF-GC Frame-wrapped Uncompressed 720x59.94P 1280 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped source of Uncompressed 720x59.94P video using 1280 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedUncompressed720x5994P1280422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x03, 0x21];
    /// <summary>
    /// MXF-GC Frame-wrapped Uncompressed 720x60P 1280 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped source of Uncompressed 720x60P video using 1280 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedUncompressed720x60P1280422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x03, 0x25];
    /// <summary>
    /// MXF-GC Frame-wrapped Uncompressed Non-standard video line format
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped, Uncompressed, Non-standard video line format
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedUncompressedNonStandardVideoLineFormat = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x7F, 0x01];
    /// <summary>
    /// MXF-GC Frame-wrapped VC-1 Pictures
    /// </summary>
    /// <remarks>
    /// Essence Container Identifier for MXF-GC, Frame-wrapped VC-1 Pictures
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedVC1Pictures = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x12, 0x01, 0x00];
    /// <summary>
    /// MXF-GC Frame-wrapped VC-2 Pictures
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Frame-wrapped VC-2 Stream (as defined in SMPTE ST 2042-1)
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedVC2Pictures = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x15, 0x01, 0x00];
    /// <summary>
    /// MXF-GC Frame-wrapped VC-3 Pictures
    /// </summary>
    /// <remarks>
    /// Essence Container Identifier for MXF-GC, Frame-wrapped VC-3 Pictures
    /// </remarks>
    private static readonly byte[] MXFGCFrameWrappedVC3Pictures = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x11, 0x01, 0x00];
    /// <summary>
    /// MXF-GC FU Frame-wrapped Undefined Interlace Picture Element
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC JPEG 2000 frame wrapped pictures (each frame comprising a single JPEG 2000 codestream)
    /// </remarks>
    private static readonly byte[] MXFGCFUFrameWrappedUndefinedInterlacePictureElement = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x07, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0C, 0x01, 0x00];
    /// <summary>
    /// MXF-GC Generic ANC Data Mapping Undefined Payload
    /// </summary>
    /// <remarks>
    /// Identifier for the MXF-GC frame wrapped Generic Anc data mapping. Payload identification is defined within the Anc Packet data structure.
    /// </remarks>
    private static readonly byte[] MXFGCGenericANCDataMappingUndefinedPayload = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x09, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0E, 0x00, 0x00];
    /// <summary>
    /// MXF-GC Generic Data
    /// </summary>
    /// <remarks>
    /// Essence Identifier Node for MXF-GC Generic Data
    /// </remarks>
    private static readonly byte[] MXFGCGenericData = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x13, 0x00, 0x00];
    /// <summary>
    /// MXF-GC Generic Data Streams
    /// </summary>
    /// <remarks>
    /// Essence Identifier Node for MXF-GC Generic Data Streams
    /// </remarks>
    private static readonly byte[] MXFGCGenericDataStreams = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x13, 0x02, 0x00];
    /// <summary>
    /// MXF-GC Generic Essence Mappings
    /// </summary>
    /// <remarks>
    /// Identifiers for any combination of essence and metadata elements not otherwise covered under the MXF Generic Container node
    /// </remarks>
    private static readonly byte[] MXFGCGenericEssenceMappings = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x7F, 0x00, 0x00];
    /// <summary>
    /// MXF-GC Generic Essence Multiple Mappings
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GC multiple wrappings not otherwise covered under the MXF Generic Container node
    /// </remarks>
    private static readonly byte[] MXFGCGenericEssenceMultipleMappings = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x7F, 0x01, 0x00];
    /// <summary>
    /// MXF-GC Generic Text Streams
    /// </summary>
    /// <remarks>
    /// Essence Identifier Node for MXF-GC Generic Text Streams
    /// </remarks>
    private static readonly byte[] MXFGCGenericTextStreams = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x13, 0x01, 0x00];
    /// <summary>
    /// MXF-GC Generic VBI Data Mapping Undefined Payload
    /// </summary>
    /// <remarks>
    /// Identifier for the MXF-GC frame wrapped Generic VBI data mapping with an undefined payload
    /// </remarks>
    private static readonly byte[] MXFGCGenericVBIDataMappingUndefinedPayload = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x09, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0D, 0x00, 0x00];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStream = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x00, 0x00];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-0
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x60, 0x00];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-0 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-0 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream0SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x60, 0x02];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-0 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-0 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream0SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x60, 0x07];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-0 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-0 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream0SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x60, 0x08];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-0 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-0 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream0SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x60, 0x06];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-0 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-0 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream0SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x60, 0x03];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-0 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-0 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream0SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x60, 0x7F];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-0 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-0 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream0SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x60, 0x09];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-0 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-0 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream0SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x60, 0x01];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-10
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6A, 0x00];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-10 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-10 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream10SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6A, 0x02];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-10 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-10 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream10SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6A, 0x07];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-10 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-10 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream10SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6A, 0x08];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-10 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-10 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream10SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6A, 0x06];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-10 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-10 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream10SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6A, 0x03];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-10 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-10 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream10SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6A, 0x7F];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-10 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-10 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream10SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6A, 0x09];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-10 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-10 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream10SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6A, 0x01];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-11
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6B, 0x00];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-11 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-11 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream11SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6B, 0x02];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-11 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-11 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream11SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6B, 0x07];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-11 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-11 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream11SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6B, 0x08];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-11 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-11 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream11SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6B, 0x06];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-11 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-11 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream11SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6B, 0x03];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-11 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-11 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream11SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6B, 0x7F];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-11 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-11 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream11SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6B, 0x09];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-11 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-11 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream11SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6B, 0x01];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-12
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6C, 0x00];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-12 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-12 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream12SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6C, 0x02];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-12 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-12 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream12SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6C, 0x07];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-12 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-12 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream12SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6C, 0x08];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-12 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-12 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream12SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6C, 0x06];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-12 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-12 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream12SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6C, 0x03];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-12 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-12 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream12SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6C, 0x7F];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-12 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-12 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream12SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6C, 0x09];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-12 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-12 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream12SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6C, 0x01];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-13
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6D, 0x00];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-13 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-13 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream13SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6D, 0x02];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-13 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-13 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream13SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6D, 0x07];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-13 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-13 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream13SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6D, 0x08];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-13 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-13 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream13SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6D, 0x06];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-13 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-13 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream13SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6D, 0x03];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-13 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-13 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream13SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6D, 0x7F];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-13 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-13 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream13SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6D, 0x09];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-13 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-13 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream13SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6D, 0x01];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-14
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6E, 0x00];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-14 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-14 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream14SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6E, 0x02];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-14 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-14 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream14SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6E, 0x07];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-14 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-14 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream14SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6E, 0x08];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-14 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-14 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream14SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6E, 0x06];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-14 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-14 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream14SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6E, 0x03];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-14 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-14 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream14SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6E, 0x7F];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-14 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-14 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream14SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6E, 0x09];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-14 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-14 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream14SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6E, 0x01];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-15
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6F, 0x00];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-15 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-15 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream15SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6F, 0x02];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-15 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-15 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream15SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6F, 0x07];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-15 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-15 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream15SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6F, 0x08];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-15 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-15 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream15SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6F, 0x06];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-15 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-15 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream15SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6F, 0x03];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-15 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-15 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream15SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6F, 0x7F];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-15 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-15 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream15SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6F, 0x09];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-15 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-15 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream15SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x6F, 0x01];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-1
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x61, 0x00];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-1 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-1 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream1SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x61, 0x02];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-1 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-1 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream1SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x61, 0x07];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-1 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-1 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream1SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x61, 0x08];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-1 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-1 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream1SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x61, 0x06];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-1 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-1 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream1SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x61, 0x03];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-1 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-1 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream1SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x61, 0x7F];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-1 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-1 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream1SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x61, 0x09];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-1 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-1 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream1SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x61, 0x01];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-2
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x62, 0x00];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-2 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-2 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream2SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x62, 0x02];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-2 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-2 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream2SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x62, 0x07];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-2 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-2 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream2SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x62, 0x08];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-2 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-2 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream2SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x62, 0x06];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-2 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-2 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream2SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x62, 0x03];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-2 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-2 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream2SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x62, 0x7F];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-2 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-2 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream2SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x62, 0x09];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-2 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-2 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream2SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x62, 0x01];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-3
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x63, 0x00];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-3 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-3 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream3SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x63, 0x02];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-3 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-3 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream3SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x63, 0x07];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-3 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-3 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream3SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x63, 0x08];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-3 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-3 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream3SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x63, 0x06];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-3 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-3 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream3SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x63, 0x03];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-3 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-3 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream3SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x63, 0x7F];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-3 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-3 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream3SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x63, 0x09];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-3 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-3 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream3SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x63, 0x01];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-4
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x64, 0x00];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-4 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-4 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream4SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x64, 0x02];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-4 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-4 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream4SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x64, 0x07];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-4 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-4 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream4SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x64, 0x08];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-4 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-4 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream4SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x64, 0x06];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-4 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-4 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream4SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x64, 0x03];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-4 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-4 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream4SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x64, 0x7F];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-4 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-4 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream4SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x64, 0x09];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-4 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-4 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream4SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x64, 0x01];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-5
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x65, 0x00];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-5 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-5 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream5SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x65, 0x02];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-5 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-5 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream5SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x65, 0x07];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-5 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-5 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream5SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x65, 0x08];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-5 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-5 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream5SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x65, 0x06];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-5 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-5 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream5SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x65, 0x03];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-5 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-5 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream5SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x65, 0x7F];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-5 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-5 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream5SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x65, 0x09];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-5 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-5 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream5SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x65, 0x01];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-6
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x66, 0x00];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-6 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-6 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream6SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x66, 0x02];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-6 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-6 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream6SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x66, 0x07];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-6 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-6 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream6SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x66, 0x08];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-6 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-6 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream6SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x66, 0x06];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-6 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-6 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream6SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x66, 0x03];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-6 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-6 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream6SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x66, 0x7F];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-6 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-6 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream6SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x66, 0x09];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-6 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-6 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream6SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x66, 0x01];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-7
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x67, 0x00];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-7 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-7 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream7SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x67, 0x02];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-7 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-7 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream7SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x67, 0x07];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-7 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-7 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream7SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x67, 0x08];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-7 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-7 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream7SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x67, 0x06];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-7 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-7 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream7SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x67, 0x03];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-7 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-7 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream7SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x67, 0x7F];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-7 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-7 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream7SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x67, 0x09];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-7 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-7 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream7SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x67, 0x01];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-8
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x68, 0x00];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-8 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-8 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream8SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x68, 0x02];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-8 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-8 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream8SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x68, 0x07];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-8 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-8 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream8SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x68, 0x08];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-8 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-8 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream8SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x68, 0x06];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-8 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-8 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream8SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x68, 0x03];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-8 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-8 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream8SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x68, 0x7F];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-8 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-8 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream8SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x68, 0x09];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-8 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-8 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream8SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x68, 0x01];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-9
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x69, 0x00];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-9 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-9 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream9SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x69, 0x02];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-9 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-9 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream9SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x69, 0x07];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-9 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-9 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream9SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x69, 0x08];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-9 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-9 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream9SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x69, 0x06];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-9 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-9 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream9SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x69, 0x03];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-9 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-9 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream9SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x69, 0x7F];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-9 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-9 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream9SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x69, 0x09];
    /// <summary>
    /// MXF-GC  HEVC Byte Stream With VideoStream-9 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC Byte Stream With VideoStream-9 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCByteStreamWithVideoStream9SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x20, 0x69, 0x01];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStream = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x00, 0x00];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-0 SID
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x60, 0x00];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-0 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-0 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream0SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x60, 0x02];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-0 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-0 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream0SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x60, 0x07];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-0 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-0 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream0SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x60, 0x08];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-0 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-0 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream0SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x60, 0x06];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-0 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-0 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream0SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x60, 0x03];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-0 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-0 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream0SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x60, 0x7F];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-0 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-0 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream0SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x60, 0x09];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-0 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-0 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream0SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x60, 0x01];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-10 SID
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6A, 0x00];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-10 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-10 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream10SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6A, 0x02];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-10 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-10 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream10SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6A, 0x07];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-10 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-10 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream10SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6A, 0x08];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-10 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-10 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream10SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6A, 0x06];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-10 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-10 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream10SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6A, 0x03];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-10 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-10 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream10SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6A, 0x7F];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-10 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-10 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream10SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6A, 0x09];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-10 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-10 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream10SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6A, 0x01];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-11 SID
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6B, 0x00];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-11 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-11 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream11SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6B, 0x02];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-11 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-11 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream11SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6B, 0x07];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-11 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-11 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream11SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6B, 0x08];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-11 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-11 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream11SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6B, 0x06];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-11 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-11 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream11SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6B, 0x03];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-11 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-11 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream11SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6B, 0x7F];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-11 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-11 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream11SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6B, 0x09];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-11 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-11 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream11SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6B, 0x01];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-12 SID
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6C, 0x00];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-12 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-12 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream12SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6C, 0x02];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-12 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-12 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream12SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6C, 0x07];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-12 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-12 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream12SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6C, 0x08];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-12 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-12 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream12SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6C, 0x06];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-12 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-12 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream12SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6C, 0x03];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-12 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-12 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream12SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6C, 0x7F];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-12 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-12 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream12SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6C, 0x09];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-12 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-12 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream12SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6C, 0x01];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-13 SID
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6D, 0x00];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-13 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-13 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream13SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6D, 0x02];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-13 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-13 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream13SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6D, 0x07];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-13 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-13 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream13SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6D, 0x08];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-13 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-13 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream13SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6D, 0x06];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-13 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-13 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream13SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6D, 0x03];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-13 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-13 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream13SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6D, 0x7F];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-13 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-13 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream13SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6D, 0x09];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-13 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-13 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream13SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6D, 0x01];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-14 SID
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6E, 0x00];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-14 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-14 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream14SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6E, 0x02];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-14 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-14 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream14SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6E, 0x07];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-14 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-14 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream14SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6E, 0x08];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-14 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-14 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream14SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6E, 0x06];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-14 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-14 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream14SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6E, 0x03];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-14 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-14 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream14SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6E, 0x7F];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-14 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-14 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream14SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6E, 0x09];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-14 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-14 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream14SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6E, 0x01];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-15 SID
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6F, 0x00];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-15 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-15 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream15SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6F, 0x02];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-15 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-15 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream15SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6F, 0x07];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-15 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-15 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream15SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6F, 0x08];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-15 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-15 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream15SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6F, 0x06];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-15 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-15 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream15SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6F, 0x03];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-15 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-15 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream15SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6F, 0x7F];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-15 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-15 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream15SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6F, 0x09];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-15 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-15 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream15SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x6F, 0x01];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-1 SID
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x61, 0x00];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-1 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-1 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream1SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x61, 0x02];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-1 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-1 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream1SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x61, 0x07];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-1 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-1 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream1SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x61, 0x08];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-1 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-1 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream1SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x61, 0x06];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-1 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-1 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream1SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x61, 0x03];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-1 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-1 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream1SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x61, 0x7F];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-1 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-1 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream1SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x61, 0x09];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-1 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-1 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream1SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x61, 0x01];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-2 SID
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x62, 0x00];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-2 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-2 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream2SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x62, 0x02];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-2 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-2 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream2SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x62, 0x07];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-2 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-2 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream2SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x62, 0x08];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-2 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-2 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream2SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x62, 0x06];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-2 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-2 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream2SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x62, 0x03];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-2 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-2 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream2SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x62, 0x7F];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-2 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-2 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream2SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x62, 0x09];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-2 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-2 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream2SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x62, 0x01];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-3 SID
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x63, 0x00];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-3 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-3 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream3SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x63, 0x02];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-3 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-3 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream3SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x63, 0x07];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-3 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-3 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream3SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x63, 0x08];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-3 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-3 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream3SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x63, 0x06];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-3 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-3 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream3SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x63, 0x03];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-3 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-3 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream3SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x63, 0x7F];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-3 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-3 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream3SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x63, 0x09];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-3 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-3 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream3SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x63, 0x01];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-4 SID
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x64, 0x00];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-4 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-4 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream4SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x64, 0x02];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-4 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-4 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream4SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x64, 0x07];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-4 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-4 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream4SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x64, 0x08];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-4 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-4 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream4SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x64, 0x06];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-4 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-4 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream4SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x64, 0x03];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-4 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-4 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream4SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x64, 0x7F];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-4 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-4 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream4SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x64, 0x09];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-4 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-4 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream4SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x64, 0x01];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-5 SID
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x65, 0x00];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-5 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-5 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream5SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x65, 0x02];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-5 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-5 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream5SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x65, 0x07];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-5 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-5 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream5SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x65, 0x08];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-5 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-5 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream5SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x65, 0x06];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-5 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-5 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream5SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x65, 0x03];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-5 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-5 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream5SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x65, 0x7F];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-5 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-5 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream5SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x65, 0x09];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-5 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-5 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream5SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x65, 0x01];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-6 SID
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x66, 0x00];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-6 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-6 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream6SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x66, 0x02];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-6 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-6 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream6SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x66, 0x07];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-6 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-6 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream6SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x66, 0x08];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-6 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-6 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream6SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x66, 0x06];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-6 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-6 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream6SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x66, 0x03];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-6 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-6 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream6SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x66, 0x7F];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-6 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-6 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream6SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x66, 0x09];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-6 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-6 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream6SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x66, 0x01];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-7 SID
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x67, 0x00];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-7 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-7 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream7SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x67, 0x02];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-7 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-7 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream7SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x67, 0x07];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-7 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-7 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream7SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x67, 0x08];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-7 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-7 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream7SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x67, 0x06];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-7 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-7 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream7SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x67, 0x03];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-7 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-7 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream7SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x67, 0x7F];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-7 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-7 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream7SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x67, 0x09];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-7 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-7 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream7SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x67, 0x01];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-8 SID
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x68, 0x00];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-8 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-8 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream8SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x68, 0x02];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-8 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-8 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream8SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x68, 0x07];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-8 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-8 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream8SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x68, 0x08];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-8 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-8 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream8SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x68, 0x06];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-8 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-8 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream8SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x68, 0x03];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-8 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-8 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream8SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x68, 0x7F];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-8 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-8 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream8SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x68, 0x09];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-8 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-8 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream8SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x68, 0x01];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-9 SID
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x69, 0x00];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-9 SID Clip-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-9 SID Clip-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream9SIDClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x69, 0x02];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-9 SID CustomClosedGOP-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-9 SID CustomClosedGOP-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream9SIDCustomClosedGOPWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x69, 0x07];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-9 SID CustomSlave-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-9 SID CustomSlave-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream9SIDCustomSlaveWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x69, 0x08];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-9 SID CustomSplice-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-9 SID CustomSplice-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream9SIDCustomSpliceWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x69, 0x06];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-9 SID CustomStripe-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-9 SID CustomStripe-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream9SIDCustomStripeWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x69, 0x03];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-9 SID CustomUnconstrained-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-9 SID CustomUnconstrained-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream9SIDCustomUnconstrainedWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x69, 0x7F];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-9 SID Field-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-9 SID Field-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream9SIDFieldWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x69, 0x09];
    /// <summary>
    /// MXF-GC  HEVC NAL Unit Stream With VideoStream-9 SID Frame-wrapped
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC  HEVC NAL Unit Stream With VideoStream-9 SID Frame-wrapped
    /// </remarks>
    private static readonly byte[] MXFGCHEVCNALUnitStreamWithVideoStream9SIDFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1F, 0x69, 0x01];
    /// <summary>
    /// MXF-GC I1 Interlaced Frame 1 field/KLV
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC I1 Interlaced Frame 1 field/KLV JPEG 2000 mapping
    /// </remarks>
    private static readonly byte[] MXFGCI1InterlacedFrame1FieldKLV = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0C, 0x03, 0x00];
    /// <summary>
    /// MXF-GC I2 Interlaced Frame 2 fields/KLV
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC I2 Interlaced Frame 2 fields/KLV JPEG 2000 mapping
    /// </remarks>
    private static readonly byte[] MXFGCI2InterlacedFrame2FieldsKLV = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0C, 0x04, 0x00];
    /// <summary>
    /// MXF-GC IAB Audio
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF-GC Mappings of Immersive Audio Bitstream (SMPTE ST 2098-2) audio data
    /// </remarks>
    private static readonly byte[] MXFGCIABAudio = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1D, 0x01, 0x00];
    /// <summary>
    /// MXF-GC IEC-DV 525x59.94I 25Mbps
    /// </summary>
    /// <remarks>
    /// Identifiers for mappings using the MXF-GC IEC-DV compression of a 525x59.94I source at 25Mbps
    /// </remarks>
    private static readonly byte[] MXFGCIECDV525x5994I25Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x01, 0x00];
    /// <summary>
    /// MXF-GC IEC DV 525x59.94I 25Mbps SMPTE-322M
    /// </summary>
    /// <remarks>
    /// Identifiers for mappings using the MXF-GC IEC DV compression of a 525x59.94I source at 25Mbps
    /// </remarks>
    private static readonly byte[] MXFGCIECDV525x5994I25MbpsSMPTE322M = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x03, 0x00];
    /// <summary>
    /// MXF-GC IEC DV 625x50I 25Mbps
    /// </summary>
    /// <remarks>
    /// Identifiers for mappings using the MXF-GC IEC DV compression of a 625x50I source at 25Mbps
    /// </remarks>
    private static readonly byte[] MXFGCIECDV625x50I25Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x02, 0x00];
    /// <summary>
    /// MXF-GC IEC DV 625x50I 25Mbps SMPTE-322M
    /// </summary>
    /// <remarks>
    /// Identifiers for mappings using the MXF-GC IEC DV compression of a 625x50I source at 25Mbps
    /// </remarks>
    private static readonly byte[] MXFGCIECDV625x50I25MbpsSMPTE322M = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x04, 0x00];
    /// <summary>
    /// MXF-GC IEC DV UndefinedSource
    /// </summary>
    /// <remarks>
    /// Identifiers for mappings using the MXF-GC IEC DV compression of an undefined source
    /// </remarks>
    private static readonly byte[] MXFGCIECDVUndefinedSource = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x02, 0x3F, 0x00];
    /// <summary>
    /// MXF-GC Immersive Audio
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF-GC Mappings of immersive audio data
    /// </remarks>
    private static readonly byte[] MXFGCImmersiveAudio = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1D, 0x00, 0x00];
    /// <summary>
    /// MXF-GC JPEG-2000 Picture Mappings
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF-GC Mappings using JPEG2000 compressed pictures
    /// </remarks>
    private static readonly byte[] MXFGCJPEG2000PictureMappings = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x07, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0C, 0x00, 0x00];
    /// <summary>
    /// MXF-GC JPEG XS Pictures
    /// </summary>
    /// <remarks>
    /// Identifies JPEG XS Picture Mappings
    /// </remarks>
    private static readonly byte[] MXFGCJPEGXSPictures = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x21, 0x00, 0x00];
    /// <summary>
    /// MXF-GC Line-wrapped Uncompressed 1080x23.98P 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Line-wrapped source of Uncompressed 1080x23.98P video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCLineWrappedUncompressed1080x2398P1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x03];
    /// <summary>
    /// MXF-GC Line-wrapped Uncompressed 1080x23.98PsF 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Line-wrapped source of Uncompressed 1080x23.98PsF video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCLineWrappedUncompressed1080x2398PsF1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x07];
    /// <summary>
    /// MXF-GC Line-wrapped Uncompressed 1080x24P 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Line-wrapped source of Uncompressed 1080x24P video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCLineWrappedUncompressed1080x24P1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x13];
    /// <summary>
    /// MXF-GC Line-wrapped Uncompressed 1080x24PsF 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Line-wrapped source of Uncompressed 1080x24PsF video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCLineWrappedUncompressed1080x24PsF1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x17];
    /// <summary>
    /// MXF-GC Line-wrapped Uncompressed 1080x25P 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Line-wrapped source of Uncompressed 1080x25P video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCLineWrappedUncompressed1080x25P1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x23];
    /// <summary>
    /// MXF-GC Line-wrapped Uncompressed 1080x25PsF 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Line-wrapped source of Uncompressed 1080x25PsF video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCLineWrappedUncompressed1080x25PsF1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x27];
    /// <summary>
    /// MXF-GC Line-wrapped Uncompressed 1080x29.97P 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Line-wrapped source of Uncompressed 1080x29.97P video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCLineWrappedUncompressed1080x2997P1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x33];
    /// <summary>
    /// MXF-GC Line-wrapped Uncompressed 1080x29.97PsF 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Line-wrapped source of Uncompressed 1080x29.97PsF video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCLineWrappedUncompressed1080x2997PsF1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x37];
    /// <summary>
    /// MXF-GC Line-wrapped Uncompressed 1080x30P 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Line-wrapped source of Uncompressed 1080x30P video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCLineWrappedUncompressed1080x30P1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x43];
    /// <summary>
    /// MXF-GC Line-wrapped Uncompressed 1080x30PsF 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Line-wrapped source of Uncompressed 1080x30PsF video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCLineWrappedUncompressed1080x30PsF1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x47];
    /// <summary>
    /// MXF-GC Line-wrapped Uncompressed 1080x50I 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Line-wrapped source of Uncompressed 1080x50I video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCLineWrappedUncompressed1080x50I1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x2B];
    /// <summary>
    /// MXF-GC Line-wrapped Uncompressed 1080x50P 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Line-wrapped source of Uncompressed 1080x50P video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCLineWrappedUncompressed1080x50P1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x53];
    /// <summary>
    /// MXF-GC Line-wrapped Uncompressed 1080x59.94I 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Line-wrapped source of Uncompressed 1080x59.94I video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCLineWrappedUncompressed1080x5994I1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x3B];
    /// <summary>
    /// MXF-GC Line-wrapped Uncompressed 1080x59.94P 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Line-wrapped source of Uncompressed 1080x59.94P video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCLineWrappedUncompressed1080x5994P1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x5B];
    /// <summary>
    /// MXF-GC Line-wrapped Uncompressed 1080x60I 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Line-wrapped source of Uncompressed 1080x60I video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCLineWrappedUncompressed1080x60I1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x4B];
    /// <summary>
    /// MXF-GC Line-wrapped Uncompressed 1080x60P 1920 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Line-wrapped source of Uncompressed 1080x60P video using 1920 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCLineWrappedUncompressed1080x60P1920422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x63];
    /// <summary>
    /// MXF-GC Line-wrapped Uncompressed 525x59.94I 720 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Line-wrapped source of Uncompressed 525x59.94I video using 720 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCLineWrappedUncompressed525x5994I720422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x01, 0x03];
    /// <summary>
    /// MXF-GC Line-wrapped Uncompressed 525x59.94I 960 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Line-wrapped source of Uncompressed 525x59.94I video using 960 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCLineWrappedUncompressed525x5994I960422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x01, 0x0B];
    /// <summary>
    /// MXF-GC Line-wrapped Uncompressed 525x59.94I 960 4444
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Line-wrapped source of Uncompressed 525x59.94I video using 960 pixels and 4444 sampling
    /// </remarks>
    private static readonly byte[] MXFGCLineWrappedUncompressed525x5994I9604444 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x01, 0x23];
    /// <summary>
    /// MXF-GC Line-wrapped Uncompressed 525x59.94P 960 420
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Line-wrapped source of Uncompressed 525x59.94P video using 960 pixels and 420 sampling
    /// </remarks>
    private static readonly byte[] MXFGCLineWrappedUncompressed525x5994P960420 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x01, 0x13];
    /// <summary>
    /// MXF-GC Line-wrapped Uncompressed 525x59.94P 960 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Line-wrapped source of Uncompressed 525x59.94P video using 960 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCLineWrappedUncompressed525x5994P960422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x01, 0x1B];
    /// <summary>
    /// MXF-GC Line-wrapped Uncompressed 625x50I 720 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Line-wrapped source of Uncompressed 625x50I video using 720 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCLineWrappedUncompressed625x50I720422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x01, 0x07];
    /// <summary>
    /// MXF-GC Line-wrapped Uncompressed 625x50I 960 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Line-wrapped source of Uncompressed 625x50I video using 960 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCLineWrappedUncompressed625x50I960422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x01, 0x0F];
    /// <summary>
    /// MXF-GC Line-wrapped Uncompressed 625x50I 960 4444
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Line-wrapped source of Uncompressed 625x50I video using 960 pixels and 4444 sampling
    /// </remarks>
    private static readonly byte[] MXFGCLineWrappedUncompressed625x50I9604444 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x01, 0x27];
    /// <summary>
    /// MXF-GC Line-wrapped Uncompressed 625x50P 960 420
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Line-wrapped source of Uncompressed 625x50P video using 960 pixels and 420 sampling
    /// </remarks>
    private static readonly byte[] MXFGCLineWrappedUncompressed625x50P960420 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x01, 0x17];
    /// <summary>
    /// MXF-GC Line-wrapped Uncompressed 625x50P 960 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Line-wrapped source of Uncompressed 625x50P video using 960 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCLineWrappedUncompressed625x50P960422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x01, 0x1F];
    /// <summary>
    /// MXF-GC Line-wrapped Uncompressed 720x23.98P 1280 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Line-wrapped source of Uncompressed 720x23.98P video using 1280 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCLineWrappedUncompressed720x2398P1280422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x03, 0x03];
    /// <summary>
    /// MXF-GC Line-wrapped Uncompressed 720x24P 1280 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Line-wrapped source of Uncompressed 720x24P video using 1280 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCLineWrappedUncompressed720x24P1280422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x03, 0x07];
    /// <summary>
    /// MXF-GC Line-wrapped Uncompressed 720x25P 1280 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Line-wrapped source of Uncompressed 720x25P video using 1280 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCLineWrappedUncompressed720x25P1280422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x03, 0x0B];
    /// <summary>
    /// MXF-GC Line-wrapped Uncompressed 720x29.97P 1280 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Line-wrapped source of Uncompressed 720x29.97P video using 1280 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCLineWrappedUncompressed720x2997P1280422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x03, 0x13];
    /// <summary>
    /// MXF-GC Line-wrapped Uncompressed 720x30P 1280 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Line-wrapped source of Uncompressed 720x30P video using 1280 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCLineWrappedUncompressed720x30P1280422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x03, 0x17];
    /// <summary>
    /// MXF-GC Line-wrapped Uncompressed 720x50P 1280 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Line-wrapped source of Uncompressed 720x50P video using 1280 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCLineWrappedUncompressed720x50P1280422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x03, 0x1B];
    /// <summary>
    /// MXF-GC Line-wrapped Uncompressed 720x59.94P 1280 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Line-wrapped source of Uncompressed 720x59.94P video using 1280 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCLineWrappedUncompressed720x5994P1280422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x03, 0x23];
    /// <summary>
    /// MXF-GC Line-wrapped Uncompressed 720x60P 1280 422
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Line-wrapped source of Uncompressed 720x60P video using 1280 pixels and 422 sampling
    /// </remarks>
    private static readonly byte[] MXFGCLineWrappedUncompressed720x60P1280422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x03, 0x27];
    /// <summary>
    /// MXF-GC Line-wrapped Uncompressed Non-standard video line format
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC Line-wrapped, Uncompressed, Non-standard video line format
    /// </remarks>
    private static readonly byte[] MXFGCLineWrappedUncompressedNonStandardVideoLineFormat = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x7F, 0x03];
    /// <summary>
    /// MXF-GC MGA Audio Mappings
    /// </summary>
    /// <remarks>
    /// Identifies MXF GC MGA Audio Mappings
    /// </remarks>
    private static readonly byte[] MXFGCMGAAudioMappings = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x25, 0x00, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF Mappings of MPEG Elementary Streams
    /// </remarks>
    private static readonly byte[] MXFGCMPEGES = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x00, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES 13522Stream SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a 13522Stream SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGES13522StreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x73, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES AncStream SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a AncStream SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESAncStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x79, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES AudioStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a AudioStream-0 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESAudioStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x40, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES AudioStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a AudioStream-10 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESAudioStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4A, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES AudioStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a AudioStream-11 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESAudioStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4B, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES AudioStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a AudioStream-12 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESAudioStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4C, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES AudioStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a AudioStream-13 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESAudioStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4D, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES AudioStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a AudioStream-14 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESAudioStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4E, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES AudioStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a AudioStream-15 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESAudioStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x4F, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES AudioStream-16 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a AudioStream-16 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESAudioStream16SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x50, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES AudioStream-17 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a AudioStream-17 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESAudioStream17SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x51, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES AudioStream-18 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a AudioStream-18 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESAudioStream18SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x52, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES AudioStream-19 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a AudioStream-19 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESAudioStream19SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x53, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES AudioStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a AudioStream-1 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESAudioStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x41, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES AudioStream-20 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a AudioStream-20 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESAudioStream20SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x54, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES AudioStream-21 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a AudioStream-21 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESAudioStream21SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x55, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES AudioStream-22 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a AudioStream-22 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESAudioStream22SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x56, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES AudioStream-23 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a AudioStream-23 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESAudioStream23SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x57, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES AudioStream-24 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a AudioStream-24 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESAudioStream24SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x58, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES AudioStream-25 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a AudioStream-25 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESAudioStream25SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x59, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES AudioStream-26 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a AudioStream-26 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESAudioStream26SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5A, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES AudioStream-27 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a AudioStream-27 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESAudioStream27SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5B, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES AudioStream-28 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a AudioStream-28 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESAudioStream28SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5C, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES AudioStream-29 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a AudioStream-29 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESAudioStream29SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5D, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES AudioStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a AudioStream-2 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESAudioStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x42, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES AudioStream-30 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a AudioStream-30 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESAudioStream30SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5E, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES AudioStream-31 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a AudioStream-31 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESAudioStream31SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x5F, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES AudioStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a AudioStream-3 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESAudioStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x43, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES AudioStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a AudioStream-4 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESAudioStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x44, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES AudioStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a AudioStream-5 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESAudioStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x45, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES AudioStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a AudioStream-6 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESAudioStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x46, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES AudioStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a AudioStream-7 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESAudioStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x47, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES AudioStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a AudioStream-8 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESAudioStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x48, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES AudioStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a AudioStream-9 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESAudioStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x49, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES DSMCCStream SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a DSMCCStream SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESDSMCCStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x72, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES ECMStream SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a ECMStream SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESECMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x70, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES EMMStream SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a EMMStream SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESEMMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x71, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES FlexMuxStream SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a FlexMuxStream SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESFlexMuxStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x7B, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES ITURec222-A SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a ITURec222-A SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESITURec222ASID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x74, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES ITURec222-B SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a ITURec222-B SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESITURec222BSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x75, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES ITURec222-C SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a ITURec222-C SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESITURec222CSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x76, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES ITURec222-D SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a ITURec222-D SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESITURec222DSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x77, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES ITURec222-E SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a ITURec222-E SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESITURec222ESID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x78, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES PaddingStream SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a PaddingStream SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESPaddingStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3E, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES PrivateStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a PrivateStream-1 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESPrivateStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3D, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES PrivateStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a PrivateStream-2 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESPrivateStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3F, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES ProgStreamDir SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a ProgStreamDir SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESProgStreamDirSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x7F, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES ProgStreamMap SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a ProgStreamMap SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESProgStreamMapSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x3C, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES SLPackStream SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a SLPackStream SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESSLPackStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x7A, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES VideoStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a VideoStream-0 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESVideoStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x60, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES VideoStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a VideoStream-10 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESVideoStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6A, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES VideoStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a VideoStream-11 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESVideoStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6B, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES VideoStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a VideoStream-12 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESVideoStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6C, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES VideoStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a VideoStream-13 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESVideoStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6D, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES VideoStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a VideoStream-14 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESVideoStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6E, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES VideoStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a VideoStream-15 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESVideoStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x6F, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES VideoStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a VideoStream-1 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESVideoStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x61, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES VideoStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a VideoStream-2 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESVideoStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x62, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES VideoStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a VideoStream-3 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESVideoStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x63, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES VideoStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a VideoStream-4 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESVideoStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x64, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES VideoStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a VideoStream-5 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESVideoStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x65, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES VideoStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a VideoStream-6 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESVideoStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x66, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES VideoStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a VideoStream-7 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESVideoStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x67, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES VideoStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a VideoStream-8 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESVideoStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x68, 0x00];
    /// <summary>
    /// MXF-GC MPEG ES VideoStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG ES with a VideoStream-9 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGESVideoStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x04, 0x69, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES
    /// </summary>
    /// <remarks>
    /// Identifiers for Mappings using MPEG Packetised Elementary Streams
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPES = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x00, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES 13522Stream SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a 13522Stream SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPES13522StreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x73, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES AncStream SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a AncStream SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESAncStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x79, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES AudioStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a AudioStream-0 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESAudioStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x40, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES AudioStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a AudioStream-10 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESAudioStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4A, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES AudioStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a AudioStream-11 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESAudioStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4B, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES AudioStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a AudioStream-12 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESAudioStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4C, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES AudioStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a AudioStream-13 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESAudioStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4D, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES AudioStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a AudioStream-14 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESAudioStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4E, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES AudioStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a AudioStream-15 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESAudioStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x4F, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES AudioStream-16 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a AudioStream-16 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESAudioStream16SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x50, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES AudioStream-17 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a AudioStream-17 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESAudioStream17SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x51, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES AudioStream-18 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a AudioStream-18 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESAudioStream18SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x52, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES AudioStream-19 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a AudioStream-19 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESAudioStream19SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x53, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES AudioStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a AudioStream-1 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESAudioStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x41, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES AudioStream-20 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a AudioStream-20 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESAudioStream20SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x54, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES AudioStream-21 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a AudioStream-21 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESAudioStream21SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x55, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES AudioStream-22 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a AudioStream-22 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESAudioStream22SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x56, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES AudioStream-23 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a AudioStream-23 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESAudioStream23SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x57, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES AudioStream-24 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a AudioStream-24 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESAudioStream24SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x58, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES AudioStream-25 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a AudioStream-25 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESAudioStream25SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x59, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES AudioStream-26 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a AudioStream-26 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESAudioStream26SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5A, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES AudioStream-27 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a AudioStream-27 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESAudioStream27SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5B, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES AudioStream-28 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a AudioStream-28 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESAudioStream28SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5C, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES AudioStream-29 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a AudioStream-29 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESAudioStream29SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5D, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES AudioStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a AudioStream-2 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESAudioStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x42, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES AudioStream-30 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a AudioStream-30 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESAudioStream30SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5E, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES AudioStream-31 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a AudioStream-31 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESAudioStream31SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x5F, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES AudioStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a AudioStream-3 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESAudioStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x43, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES AudioStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a AudioStream-4 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESAudioStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x44, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES AudioStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a AudioStream-5 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESAudioStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x45, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES AudioStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a AudioStream-6 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESAudioStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x46, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES AudioStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a AudioStream-7 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESAudioStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x47, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES AudioStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a AudioStream-8 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESAudioStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x48, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES AudioStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a AudioStream-9 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESAudioStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x49, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES DSMCCStream SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a DSMCCStream SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESDSMCCStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x72, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES ECMStream SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a ECMStream SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESECMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x70, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES EMMStream SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a EMMStream SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESEMMStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x71, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES FlexMuxStream SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a FlexMuxStream SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESFlexMuxStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x7B, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES ITURec222-A SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a ITURec222-A SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESITURec222ASID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x74, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES ITURec222-B SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a ITURec222-B SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESITURec222BSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x75, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES ITURec222-C SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a ITURec222-C SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESITURec222CSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x76, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES ITURec222-D SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a ITURec222-D SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESITURec222DSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x77, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES ITURec222-E SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a ITURec222-E SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESITURec222ESID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x78, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES PaddingStream SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a PaddingStream SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESPaddingStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3E, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES PrivateStream1 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a PrivateStream1 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESPrivateStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3D, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES PrivateStream2 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a PrivateStream2 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESPrivateStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3F, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES ProgStreamDir SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a ProgStreamDir SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESProgStreamDirSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x7F, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES ProgStreamMap
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a ProgStreamMap SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESProgStreamMap = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x3C, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES SLPackStream SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a SLPackStream SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESSLPackStreamSID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x7A, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES VideoStream-0 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a VideoStream-0 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESVideoStream0SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x60, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES VideoStream-10 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a VideoStream-10 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESVideoStream10SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6A, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES VideoStream-11 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a VideoStream-11 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESVideoStream11SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6B, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES VideoStream-12 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a VideoStream-12 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESVideoStream12SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6C, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES VideoStream-13 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a VideoStream-13 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESVideoStream13SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6D, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES VideoStream-14 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a VideoStream-14 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESVideoStream14SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6E, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES VideoStream-15 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a VideoStream-15 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESVideoStream15SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x6F, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES VideoStream-1 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a VideoStream-1 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESVideoStream1SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x61, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES VideoStream-2 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a VideoStream-2 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESVideoStream2SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x62, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES VideoStream-3 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a VideoStream-3 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESVideoStream3SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x63, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES VideoStream-4 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a VideoStream-4 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESVideoStream4SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x64, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES VideoStream-5 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a VideoStream-5 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESVideoStream5SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x65, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES VideoStream-6 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a VideoStream-6 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESVideoStream6SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x66, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES VideoStream-7 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a VideoStream-7 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESVideoStream7SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x67, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES VideoStream-8 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a VideoStream-8 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESVideoStream8SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x68, 0x00];
    /// <summary>
    /// MXF-GC MPEG PES VideoStream-9 SID
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of MPEG PES with a VideoStream-9 SID value as defined in ISO/IEC 13818-1 (MPEG-2 Systems)
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPESVideoStream9SID = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x07, 0x69, 0x00];
    /// <summary>
    /// MXF-GC MPEG PS
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF-GC Mappings using MPEG Programme Streams
    /// </remarks>
    private static readonly byte[] MXFGCMPEGPS = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x08, 0x00, 0x00];
    /// <summary>
    /// MXF-GC MPEG TS
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF-GC Mappings using MPEG Transport Streams
    /// </remarks>
    private static readonly byte[] MXFGCMPEGTS = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x09, 0x00, 0x00];
    /// <summary>
    /// MXF-GC P1 Frame-Wrapped Picture Element
    /// </summary>
    /// <remarks>
    /// Identifier for a MXF-GC P1 Frame-Wrapped Picture Element JPEG 2000 mapping
    /// </remarks>
    private static readonly byte[] MXFGCP1FrameWrappedPictureElement = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x0C, 0x06, 0x00];
    /// <summary>
    /// MXF-GC SMPTE D-10 625x50I 50Mbps
    /// </summary>
    /// <remarks>
    /// Identifiers for mapping SMPTE D-10 with 625x50I at 50Mbps
    /// </remarks>
    private static readonly byte[] MXFGCSMPTED10625x50I50Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x01, 0x01, 0x00];
    /// <summary>
    /// MXF-GC SMPTE D-10 Mappings
    /// </summary>
    /// <remarks>
    /// Identifiers for mappings using the MXF-GC SMPTE D-10
    /// </remarks>
    private static readonly byte[] MXFGCSMPTED10Mappings = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x01, 0x00, 0x00];
    /// <summary>
    /// MXF-GC SMPTE D-11 1080x23.98PsF
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mapping of SMPTE D-11 for 1080x23.98PsF
    /// </remarks>
    private static readonly byte[] MXFGCSMPTED111080x2398PsF = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x03, 0x01, 0x00];
    /// <summary>
    /// MXF-GC SMPTE D-11 Mappings
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mappings of SMPTE 367M (Type D11)
    /// </remarks>
    private static readonly byte[] MXFGCSMPTED11Mappings = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x03, 0x00, 0x00];
    /// <summary>
    /// MXF-GC SMPTE Type-D10 525x59.94I 30Mbps
    /// </summary>
    /// <remarks>
    /// Identifiers for mapping SMPTE Type-D10 with 525x59.94I at 30Mbps
    /// </remarks>
    private static readonly byte[] MXFGCSMPTETypeD10525x5994I30Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x01, 0x06, 0x00];
    /// <summary>
    /// MXF-GC SMPTE Type-D10 525x59.94I 40Mbps
    /// </summary>
    /// <remarks>
    /// Identifiers for mapping SMPTE Type-D10 with 525x59.94I at 40Mbps
    /// </remarks>
    private static readonly byte[] MXFGCSMPTETypeD10525x5994I40Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x01, 0x04, 0x00];
    /// <summary>
    /// MXF-GC SMPTE Type-D10 525x59.94I 50Mbps
    /// </summary>
    /// <remarks>
    /// Identifiers for mapping SMPTE Type-D10 with 525x59.94I at 50Mbps
    /// </remarks>
    private static readonly byte[] MXFGCSMPTETypeD10525x5994I50Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x01, 0x02, 0x00];
    /// <summary>
    /// MXF-GC SMPTE Type-D10 625x50I 30Mbps
    /// </summary>
    /// <remarks>
    /// Identifiers for mapping SMPTE Type-D10 with 625x50I at 30Mbps
    /// </remarks>
    private static readonly byte[] MXFGCSMPTETypeD10625x50I30Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x01, 0x05, 0x00];
    /// <summary>
    /// MXF-GC SMPTE Type-D10 625x50I 40Mbps
    /// </summary>
    /// <remarks>
    /// Identifiers for mapping SMPTE Type-D10 with 625x50I at 40Mbps
    /// </remarks>
    private static readonly byte[] MXFGCSMPTETypeD10625x50I40Mbps = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x01, 0x03, 0x00];
    /// <summary>
    /// MXF-GC SMPTE Type-D11 1080x23.98PsF
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mapping of SMPTE Type-D11 for 1080x23.98PsF
    /// </remarks>
    private static readonly byte[] MXFGCSMPTETypeD111080x2398PsF = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x03, 0x02, 0x00];
    /// <summary>
    /// MXF-GC SMPTE Type-D11 1080x25PsF
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mapping of SMPTE Type-D11 for 1080x25PsF
    /// </remarks>
    private static readonly byte[] MXFGCSMPTETypeD111080x25PsF = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x03, 0x03, 0x00];
    /// <summary>
    /// MXF-GC SMPTE Type-D11 1080x29.97PsF
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mapping of SMPTE Type-D11 for 1080x29.97PsF
    /// </remarks>
    private static readonly byte[] MXFGCSMPTETypeD111080x2997PsF = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x03, 0x04, 0x00];
    /// <summary>
    /// MXF-GC SMPTE Type-D11 1080x50I
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mapping of SMPTE Type-D11 for 1080x50I
    /// </remarks>
    private static readonly byte[] MXFGCSMPTETypeD111080x50I = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x03, 0x05, 0x00];
    /// <summary>
    /// MXF-GC SMPTE Type-D11 1080x59.94I
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF mapping of SMPTE Type-D11 for 1080x59.94I
    /// </remarks>
    private static readonly byte[] MXFGCSMPTETypeD111080x5994I = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x03, 0x06, 0x00];
    /// <summary>
    /// Supplemental Data Essence Container
    /// </summary>
    /// <remarks>
    /// Identifies an MXF-GC Supplemental Data Element Frame-Wrapped Essence Container
    /// </remarks>
    private static readonly byte[] MXFGCSupplementalDataFrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x26, 0x01, 0x00];
    /// <summary>
    /// MXF-GC TIFF/EP
    /// </summary>
    /// <remarks>
    /// Essence Identifier Node for MXF-GC TIFF/EP
    /// </remarks>
    private static readonly byte[] MXFGCTIFFEP = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x14, 0x00, 0x00];
    /// <summary>
    /// MXF-GC Uncompressed 1080 HD
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF-GC Uncompressed High Definition video using 1080 active lines
    /// </remarks>
    private static readonly byte[] MXFGCUncompressed1080HD = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x02, 0x00];
    /// <summary>
    /// MXF-GC Uncompressed 525+625 SD
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF-GC Uncompressed Standard Definition video
    /// </remarks>
    private static readonly byte[] MXFGCUncompressed525625SD = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x01, 0x00];
    /// <summary>
    /// MXF-GC Uncompressed 720 HD
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF-GC Uncompressed High Definition video using 720 active lines
    /// </remarks>
    private static readonly byte[] MXFGCUncompressed720HD = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x03, 0x00];
    /// <summary>
    /// MXF-GC Uncompressed Non-standard Format
    /// </summary>
    /// <remarks>
    /// Identifiers for non-standardised uncompressed video formats. Parameters to be determined from the appropriate Essence Descriptor
    /// </remarks>
    private static readonly byte[] MXFGCUncompressedNonStandardFormat = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x7F, 0x00];
    /// <summary>
    /// MXF-GC Uncompressed Pictures
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF GC Uncompressed Picture Mappings
    /// </remarks>
    private static readonly byte[] MXFGCUncompressedPictures = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x05, 0x00, 0x00];
    /// <summary>
    /// MXF-GC VC-1 Pictures
    /// </summary>
    /// <remarks>
    /// Essence Container Identifier for MXF-GC, VC-1 Pictures
    /// </remarks>
    private static readonly byte[] MXFGCVC1Pictures = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x12, 0x00, 0x00];
    /// <summary>
    /// MXF-GC VC-2 Pictures
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF-GC mappings of VC-2 Pictures (as defined in SMPTE ST 2042-1)
    /// </remarks>
    private static readonly byte[] MXFGCVC2Pictures = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x15, 0x00, 0x00];
    /// <summary>
    /// MXF-GC VC-3 Pictures
    /// </summary>
    /// <remarks>
    /// Essence Container Identifier for MXF-GC, VC-3 Pictures
    /// </remarks>
    private static readonly byte[] MXFGCVC3Pictures = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x11, 0x00, 0x00];
    /// <summary>
    /// MXF-GC VC-5 Essence Container Label (Clip-Wrapped)
    /// </summary>
    /// <remarks>
    /// Indicates a VC-5 clip-wrapped VC-5 bitstream defined in SMPTE ST 2073-10
    /// </remarks>
    private static readonly byte[] MXFGCVC5ClipWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1B, 0x02, 0x00];
    /// <summary>
    /// MXF-GC VC-5 Essence Container Label (Custom-Wrapped)
    /// </summary>
    /// <remarks>
    /// Indicates a VC-5 custom-wrapped VC-5 bitstream defined in SMPTE ST 2073-10
    /// </remarks>
    private static readonly byte[] MXFGCVC5CustomWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1B, 0x03, 0x00];
    /// <summary>
    /// MXF-GC VC-5 Essence Container Label (SMPTE ST 2073-10)
    /// </summary>
    /// <remarks>
    /// Image Wrapping Type VC-5 Essence Container Label defined in SMPTE ST 2073-10
    /// </remarks>
    private static readonly byte[] MXFGCVC5EssenceContainerLabel = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1B, 0x00, 0x00];
    /// <summary>
    /// MXF-GC VC-5 Essence Container Label (Frame-Wrapped)
    /// </summary>
    /// <remarks>
    /// Indicates a VC-5 frame-wrapped VC-5 bitstream defined in SMPTE ST 2073-10
    /// </remarks>
    private static readonly byte[] MXFGCVC5FrameWrapped = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x1B, 0x01, 0x00];
    /// <summary>
    /// MXF Generic Container
    /// </summary>
    /// <remarks>
    /// Identifiers for the MXF Generic Container
    /// </remarks>
    private static readonly byte[] MXFGenericContainer = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x02, 0x00, 0x00, 0x00];
    /// <summary>
    /// MXF Generic Container (Deprecated)
    /// </summary>
    /// <remarks>
    /// Identifiers for the MXF Generic Container - for experimental and heritage versions (deprecated for future use)
    /// </remarks>
    private static readonly byte[] MXFGenericContainerDeprecated = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x03, 0x01, 0x01, 0x00, 0x00, 0x00];
    /// <summary>
    /// MXF Generic Stream Essence Mappings
    /// </summary>
    /// <remarks>
    /// Identifier for MXF Generic Stream Essence Mappings
    /// </remarks>
    private static readonly byte[] MXFGenericStreamEssenceMappings = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x03, 0x00, 0x00, 0x00];
    /// <summary>
    /// MXF Generic Stream Metadata Mappings
    /// </summary>
    /// <remarks>
    /// Identifies MXF Generic Stream Metadata Mappings
    /// </remarks>
    private static readonly byte[] MXFGenericStreamMetadataMappings = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// MXF Generic Stream Metadata Version-1 Mappings
    /// </summary>
    /// <remarks>
    /// Identifies MXF Generic Stream Metadata Version-1 Mappings
    /// </remarks>
    private static readonly byte[] MXFGenericStreamMetadataVersion1Mappings = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x05, 0x01, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// MXF-GS EBU-t3264 STL Byte Stream
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-GS EBU-t3264 STL Byte Stream
    /// </remarks>
    private static readonly byte[] MXFGSEBUT3264STLByteStream = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x01, 0x03, 0x01, 0x03, 0x01, 0x00, 0x00];
    /// <summary>
    /// MXF OP1a SingleItem SinglePackage
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF: OP1a, SingleItem SinglePackage
    /// </remarks>
    private static readonly byte[] MXFOP1aSingleItemSinglePackage = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x01, 0x00, 0x00];
    /// <summary>
    /// MXF OP1a SingleItem SinglePackage MultiTrack NonStream External
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP1a SingleItem SinglePackage, with MultiTrack NonStream and External essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP1aSingleItemSinglePackageMultiTrackNonStreamExternal = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x01, 0x0F, 0x00];
    /// <summary>
    /// MXF OP1a SingleItem SinglePackage MultiTrack NonStream Internal
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP1a SingleItem SinglePackage, with MultiTrack NonStream and Internal essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP1aSingleItemSinglePackageMultiTrackNonStreamInternal = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x01, 0x0D, 0x00];
    /// <summary>
    /// MXF OP1a SingleItem SinglePackage MultiTrack Stream External
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP1a SingleItem SinglePackage, with MultiTrack Stream and External essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP1aSingleItemSinglePackageMultiTrackStreamExternal = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x01, 0x0B, 0x00];
    /// <summary>
    /// MXF OP1a SingleItem SinglePackage MultiTrack Stream Internal
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP1a SingleItem SinglePackage, with MultiTrack Stream and Internal essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP1aSingleItemSinglePackageMultiTrackStreamInternal = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x01, 0x09, 0x00];
    /// <summary>
    /// MXF OP1a SingleItem SinglePackage UniTrack NonStream External
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP1a SingleItem SinglePackage, with UniTrack NonStream and External essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP1aSingleItemSinglePackageUniTrackNonStreamExternal = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x01, 0x07, 0x00];
    /// <summary>
    /// MXF OP1a SingleItem SinglePackage UniTrack NonStream Internal
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP1a SingleItem SinglePackage, with UniTrack NonStream and Internal essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP1aSingleItemSinglePackageUniTrackNonStreamInternal = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x01, 0x05, 0x00];
    /// <summary>
    /// MXF OP1a SingleItem SinglePackage UniTrack Stream External
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP1a SingleItem SinglePackage, with UniTrack Stream and External essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP1aSingleItemSinglePackageUniTrackStreamExternal = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x01, 0x03, 0x00];
    /// <summary>
    /// MXF OP1a SingleItem SinglePackage UniTrack Stream Internal
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP1a SingleItem SinglePackage, with UniTrack Stream and Internal essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP1aSingleItemSinglePackageUniTrackStreamInternal = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x01, 0x01, 0x00];
    /// <summary>
    /// MXF OP1b SingleItem GangedPackages
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF: OP1b, SingleItem GangedPackages
    /// </remarks>
    private static readonly byte[] MXFOP1bSingleItemGangedPackages = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x02, 0x00, 0x00];
    /// <summary>
    /// MXF OP1b SingleItem GangedPackages MultiTrack NonStream External
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP1b SingleItem GangedPackages, with MultiTrack NonStream and External essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP1bSingleItemGangedPackagesMultiTrackNonStreamExternal = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x02, 0x0F, 0x00];
    /// <summary>
    /// MXF OP1b SingleItem GangedPackages MultiTrack NonStream Internal
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP1b SingleItem GangedPackages, with MultiTrack NonStream and Internal essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP1bSingleItemGangedPackagesMultiTrackNonStreamInternal = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x02, 0x0D, 0x00];
    /// <summary>
    /// MXF OP1b SingleItem GangedPackages MultiTrack Stream External
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP1b SingleItem GangedPackages, with MultiTrack Stream and External essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP1bSingleItemGangedPackagesMultiTrackStreamExternal = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x02, 0x0B, 0x00];
    /// <summary>
    /// MXF OP1b SingleItem GangedPackages MultiTrack Stream Internal
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP1b SingleItem GangedPackages, with MultiTrack Stream and Internal essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP1bSingleItemGangedPackagesMultiTrackStreamInternal = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x02, 0x09, 0x00];
    /// <summary>
    /// MXF OP1b SingleItem GangedPackages UniTrack NonStream External
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP1b SingleItem GangedPackages, with UniTrack NonStream and External essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP1bSingleItemGangedPackagesUniTrackNonStreamExternal = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x02, 0x07, 0x00];
    /// <summary>
    /// MXF OP1b SingleItem GangedPackages UniTrack NonStream Internal
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP1b SingleItem GangedPackages, with UniTrack NonStream and Internal essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP1bSingleItemGangedPackagesUniTrackNonStreamInternal = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x02, 0x05, 0x00];
    /// <summary>
    /// MXF OP1b SingleItem GangedPackages UniTrack Stream External
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP1b SingleItem GangedPackages, with UniTrack Stream and External essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP1bSingleItemGangedPackagesUniTrackStreamExternal = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x02, 0x03, 0x00];
    /// <summary>
    /// MXF OP1b SingleItem GangedPackages UniTrack Stream Internal
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP1b SingleItem GangedPackages, with UniTrack Stream and Internal essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP1bSingleItemGangedPackagesUniTrackStreamInternal = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x02, 0x01, 0x00];
    /// <summary>
    /// MXF OP1c SingleItem AlternatePackages
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF: OP1c, SingleItem AlternatePackages
    /// </remarks>
    private static readonly byte[] MXFOP1cSingleItemAlternatePackages = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x03, 0x00, 0x00];
    /// <summary>
    /// MXF OP1c SingleItem AlternatePackages MultiTrack NonStream External
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP1c SingleItem AlternatePackages, with MultiTrack NonStream and External essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP1cSingleItemAlternatePackagesMultiTrackNonStreamExternal = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x03, 0x0F, 0x00];
    /// <summary>
    /// MXF OP1c SingleItem AlternatePackages MultiTrack NonStream Internal
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP1c SingleItem AlternatePackages, with MultiTrack NonStream and Internal essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP1cSingleItemAlternatePackagesMultiTrackNonStreamInternal = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x03, 0x0D, 0x00];
    /// <summary>
    /// MXF OP1c SingleItem AlternatePackages MultiTrack Stream External
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP1c SingleItem AlternatePackages, with MultiTrack Stream and External essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP1cSingleItemAlternatePackagesMultiTrackStreamExternal = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x03, 0x0B, 0x00];
    /// <summary>
    /// MXF OP1c SingleItem AlternatePackages MultiTrack Stream Internal
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP1c SingleItem AlternatePackages, with MultiTrack Stream and Internal essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP1cSingleItemAlternatePackagesMultiTrackStreamInternal = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x03, 0x09, 0x00];
    /// <summary>
    /// MXF OP1c SingleItem AlternatePackages UniTrack NonStream External
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP1c SingleItem AlternatePackages, with UniTrack NonStream and External essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP1cSingleItemAlternatePackagesUniTrackNonStreamExternal = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x03, 0x07, 0x00];
    /// <summary>
    /// MXF OP1c SingleItem AlternatePackages UniTrack NonStream Internal
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP1c SingleItem AlternatePackages, with UniTrack NonStream and Internal essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP1cSingleItemAlternatePackagesUniTrackNonStreamInternal = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x03, 0x05, 0x00];
    /// <summary>
    /// MXF OP1c SingleItem AlternatePackages UniTrack Stream External
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP1c SingleItem AlternatePackages, with UniTrack Stream and External essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP1cSingleItemAlternatePackagesUniTrackStreamExternal = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x03, 0x03, 0x00];
    /// <summary>
    /// MXF OP1c SingleItem AlternatePackages UniTrack Stream Internal
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP1c SingleItem AlternatePackages, with UniTrack Stream and Internal essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP1cSingleItemAlternatePackagesUniTrackStreamInternal = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x03, 0x01, 0x00];
    /// <summary>
    /// MXF OP1x SingleItem AnyPackage
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF OP1x, SingleItem AnyPackage
    /// </remarks>
    private static readonly byte[] MXFOP1xSingleItemAnyPackage = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x00, 0x00, 0x00];
    /// <summary>
    /// MXF OP2a PlaylistItems SinglePackage
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF: OP2a, PlaylistItems SinglePackage
    /// </remarks>
    private static readonly byte[] MXFOP2aPlaylistItemsSinglePackage = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x01, 0x00, 0x00];
    /// <summary>
    /// MXF OP2a PlaylistItems SinglePackage MultiTrack NonStream External MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2a PlaylistItems, SinglePackage, with MultiTrack, NonStream, External and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2aPlaylistItemsSinglePackageMultiTrackNonStreamExternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x01, 0x0F, 0x10];
    /// <summary>
    /// MXF OP2a PlaylistItems SinglePackage MultiTrack NonStream External NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2a PlaylistItems, SinglePackage, with MultiTrack, NonStream, External and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2aPlaylistItemsSinglePackageMultiTrackNonStreamExternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x01, 0x0F, 0x00];
    /// <summary>
    /// MXF OP2a PlaylistItems SinglePackage MultiTrack NonStream Internal MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2a PlaylistItems, SinglePackage, with MultiTrack, NonStream, Internal and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2aPlaylistItemsSinglePackageMultiTrackNonStreamInternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x01, 0x0D, 0x10];
    /// <summary>
    /// MXF OP2a PlaylistItems SinglePackage MultiTrack NonStream Internal NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2a PlaylistItems, SinglePackage, with MultiTrack, NonStream, Internal and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2aPlaylistItemsSinglePackageMultiTrackNonStreamInternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x01, 0x0D, 0x00];
    /// <summary>
    /// MXF OP2a PlaylistItems SinglePackage MultiTrack Stream External MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2a PlaylistItems, SinglePackage, with MultiTrack, Stream, External and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2aPlaylistItemsSinglePackageMultiTrackStreamExternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x01, 0x0B, 0x10];
    /// <summary>
    /// MXF OP2a PlaylistItems SinglePackage MultiTrack Stream External NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2a PlaylistItems, SinglePackage, with MultiTrack, Stream, External and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2aPlaylistItemsSinglePackageMultiTrackStreamExternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x01, 0x0B, 0x00];
    /// <summary>
    /// MXF OP2a PlaylistItems SinglePackage MultiTrack Stream Internal MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2a PlaylistItems, SinglePackage, with MultiTrack, Stream, Internal and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2aPlaylistItemsSinglePackageMultiTrackStreamInternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x01, 0x09, 0x10];
    /// <summary>
    /// MXF OP2a PlaylistItems SinglePackage MultiTrack Stream Internal NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2a PlaylistItems, SinglePackage, with MultiTrack, Stream, Internal and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2aPlaylistItemsSinglePackageMultiTrackStreamInternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x01, 0x09, 0x00];
    /// <summary>
    /// MXF OP2a PlaylistItems SinglePackage UniTrack NonStream External MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2a PlaylistItems, SinglePackage, with UniTrack, NonStream, External and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2aPlaylistItemsSinglePackageUniTrackNonStreamExternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x01, 0x07, 0x10];
    /// <summary>
    /// MXF OP2a PlaylistItems SinglePackage UniTrack NonStream External NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2a PlaylistItems, SinglePackage, with UniTrack, NonStream, External and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2aPlaylistItemsSinglePackageUniTrackNonStreamExternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x01, 0x07, 0x00];
    /// <summary>
    /// MXF OP2a PlaylistItems SinglePackage UniTrack NonStream Internal MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2a PlaylistItems, SinglePackage, with UniTrack, NonStream, Internal and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2aPlaylistItemsSinglePackageUniTrackNonStreamInternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x01, 0x05, 0x10];
    /// <summary>
    /// MXF OP2a PlaylistItems SinglePackage UniTrack NonStream Internal NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2a PlaylistItems, SinglePackage, with UniTrack, NonStream, Internal and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2aPlaylistItemsSinglePackageUniTrackNonStreamInternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x01, 0x05, 0x00];
    /// <summary>
    /// MXF OP2a PlaylistItems SinglePackage UniTrack Stream External MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2a PlaylistItems, SinglePackage, with UniTrack, Stream, External and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2aPlaylistItemsSinglePackageUniTrackStreamExternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x01, 0x03, 0x10];
    /// <summary>
    /// MXF OP2a PlaylistItems SinglePackage UniTrack Stream External NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2a PlaylistItems, SinglePackage, with UniTrack, Stream, External and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2aPlaylistItemsSinglePackageUniTrackStreamExternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x01, 0x03, 0x00];
    /// <summary>
    /// MXF OP2a PlaylistItems SinglePackage UniTrack Stream Internal MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2a PlaylistItems, SinglePackage, with UniTrack, Stream, Internal and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2aPlaylistItemsSinglePackageUniTrackStreamInternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x01, 0x01, 0x10];
    /// <summary>
    /// MXF OP2a PlaylistItems SinglePackage UniTrack Stream Internal NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2a PlaylistItems, SinglePackage, with UniTrack, Stream, Internal and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2aPlaylistItemsSinglePackageUniTrackStreamInternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x01, 0x01, 0x00];
    /// <summary>
    /// MXF OP2b PlaylistItems GangedPackages
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF: OP2b, PlaylistItems GangedPackages
    /// </remarks>
    private static readonly byte[] MXFOP2bPlaylistItemsGangedPackages = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x02, 0x00, 0x00];
    /// <summary>
    /// MXF OP2b PlaylistItems GangedPackages MultiTrack NonStream External MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2b PlaylistItems, GangedPackages, with MultiTrack, NonStream, External and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2bPlaylistItemsGangedPackagesMultiTrackNonStreamExternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x02, 0x0F, 0x10];
    /// <summary>
    /// MXF OP2b PlaylistItems GangedPackages MultiTrack NonStream External NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2b PlaylistItems, GangedPackages, with MultiTrack, NonStream, External and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2bPlaylistItemsGangedPackagesMultiTrackNonStreamExternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x02, 0x0F, 0x00];
    /// <summary>
    /// MXF OP2b PlaylistItems GangedPackages MultiTrack NonStream Internal MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2b PlaylistItems, GangedPackages, with MultiTrack, NonStream, Internal and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2bPlaylistItemsGangedPackagesMultiTrackNonStreamInternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x02, 0x0D, 0x10];
    /// <summary>
    /// MXF OP2b PlaylistItems GangedPackages MultiTrack NonStream Internal NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2b PlaylistItems, GangedPackages, with MultiTrack, NonStream, Internal and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2bPlaylistItemsGangedPackagesMultiTrackNonStreamInternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x02, 0x0D, 0x00];
    /// <summary>
    /// MXF OP2b PlaylistItems GangedPackages MultiTrack Stream External MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2b PlaylistItems, GangedPackages, with MultiTrack, Stream, External and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2bPlaylistItemsGangedPackagesMultiTrackStreamExternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x02, 0x0B, 0x10];
    /// <summary>
    /// MXF OP2b PlaylistItems GangedPackages MultiTrack Stream External NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2b PlaylistItems, GangedPackages, with MultiTrack, Stream, External and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2bPlaylistItemsGangedPackagesMultiTrackStreamExternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x02, 0x0B, 0x00];
    /// <summary>
    /// MXF OP2b PlaylistItems GangedPackages MultiTrack Stream Internal MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2b PlaylistItems, GangedPackages, with MultiTrack, Stream, Internal and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2bPlaylistItemsGangedPackagesMultiTrackStreamInternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x02, 0x09, 0x10];
    /// <summary>
    /// MXF OP2b PlaylistItems GangedPackages MultiTrack Stream Internal NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2b PlaylistItems, GangedPackages, with MultiTrack, Stream, Internal and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2bPlaylistItemsGangedPackagesMultiTrackStreamInternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x02, 0x09, 0x00];
    /// <summary>
    /// MXF OP2b PlaylistItems GangedPackages UniTrack NonStream External MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2b PlaylistItems, GangedPackages, with UniTrack, NonStream, External and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2bPlaylistItemsGangedPackagesUniTrackNonStreamExternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x02, 0x07, 0x10];
    /// <summary>
    /// MXF OP2b PlaylistItems GangedPackages UniTrack NonStream External NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2b PlaylistItems, GangedPackages, with UniTrack, NonStream, External and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2bPlaylistItemsGangedPackagesUniTrackNonStreamExternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x02, 0x07, 0x00];
    /// <summary>
    /// MXF OP2b PlaylistItems GangedPackages UniTrack NonStream Internal MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2b PlaylistItems, GangedPackages, with UniTrack, NonStream, Internal and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2bPlaylistItemsGangedPackagesUniTrackNonStreamInternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x02, 0x05, 0x10];
    /// <summary>
    /// MXF OP2b PlaylistItems GangedPackages UniTrack NonStream Internal NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2b PlaylistItems, GangedPackages, with UniTrack, NonStream, Internal and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2bPlaylistItemsGangedPackagesUniTrackNonStreamInternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x02, 0x05, 0x00];
    /// <summary>
    /// MXF OP2b PlaylistItems GangedPackages UniTrack Stream External MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2b PlaylistItems, GangedPackages, with UniTrack, Stream, External and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2bPlaylistItemsGangedPackagesUniTrackStreamExternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x02, 0x03, 0x10];
    /// <summary>
    /// MXF OP2b PlaylistItems GangedPackages UniTrack Stream External NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2b PlaylistItems, GangedPackages, with UniTrack, Stream, External and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2bPlaylistItemsGangedPackagesUniTrackStreamExternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x02, 0x03, 0x00];
    /// <summary>
    /// MXF OP2b PlaylistItems GangedPackages UniTrack Stream Internal MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2b PlaylistItems, GangedPackages, with UniTrack, Stream, Internal and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2bPlaylistItemsGangedPackagesUniTrackStreamInternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x02, 0x01, 0x10];
    /// <summary>
    /// MXF OP2b PlaylistItems GangedPackages UniTrack Stream Internal NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2b PlaylistItems, GangedPackages, with UniTrack, Stream, Internal and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2bPlaylistItemsGangedPackagesUniTrackStreamInternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x02, 0x01, 0x00];
    /// <summary>
    /// MXF OP2c PlaylistItems AlternatePackages
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF: OP2c, PlaylistItems AlternatePackages
    /// </remarks>
    private static readonly byte[] MXFOP2cPlaylistItemsAlternatePackages = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x03, 0x00, 0x00];
    /// <summary>
    /// MXF OP2c PlaylistItems AlternatePackages MultiTrack NonStream External MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2c PlaylistItems, AlternatePackages, with MultiTrack, NonStream, External and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2cPlaylistItemsAlternatePackagesMultiTrackNonStreamExternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x03, 0x0F, 0x10];
    /// <summary>
    /// MXF OP2c PlaylistItems AlternatePackages MultiTrack NonStream External NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2c PlaylistItems, AlternatePackages, with MultiTrack, NonStream, External and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2cPlaylistItemsAlternatePackagesMultiTrackNonStreamExternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x03, 0x0F, 0x00];
    /// <summary>
    /// MXF OP2c PlaylistItems AlternatePackages MultiTrack NonStream Internal MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2c PlaylistItems, AlternatePackages, with MultiTrack, NonStream, Internal and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2cPlaylistItemsAlternatePackagesMultiTrackNonStreamInternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x03, 0x0D, 0x10];
    /// <summary>
    /// MXF OP2c PlaylistItems AlternatePackages MultiTrack NonStream Internal NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2c PlaylistItems, AlternatePackages, with MultiTrack, NonStream, Internal and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2cPlaylistItemsAlternatePackagesMultiTrackNonStreamInternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x03, 0x0D, 0x00];
    /// <summary>
    /// MXF OP2c PlaylistItems AlternatePackages MultiTrack Stream External MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2c PlaylistItems, AlternatePackages, with MultiTrack, Stream, External and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2cPlaylistItemsAlternatePackagesMultiTrackStreamExternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x03, 0x0B, 0x10];
    /// <summary>
    /// MXF OP2c PlaylistItems AlternatePackages MultiTrack Stream External NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2c PlaylistItems, AlternatePackages, with MultiTrack, Stream, External and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2cPlaylistItemsAlternatePackagesMultiTrackStreamExternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x03, 0x0B, 0x00];
    /// <summary>
    /// MXF OP2c PlaylistItems AlternatePackages MultiTrack Stream Internal MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2c PlaylistItems, AlternatePackages, with MultiTrack, Stream, Internal and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2cPlaylistItemsAlternatePackagesMultiTrackStreamInternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x03, 0x09, 0x10];
    /// <summary>
    /// MXF OP2c PlaylistItems AlternatePackages MultiTrack Stream Internal NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2c PlaylistItems, AlternatePackages, with MultiTrack, Stream, Internal and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2cPlaylistItemsAlternatePackagesMultiTrackStreamInternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x03, 0x09, 0x00];
    /// <summary>
    /// MXF OP2c PlaylistItems AlternatePackages UniTrack NonStream External MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2c PlaylistItems, AlternatePackages, with UniTrack, NonStream, External and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2cPlaylistItemsAlternatePackagesUniTrackNonStreamExternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x03, 0x07, 0x10];
    /// <summary>
    /// MXF OP2c PlaylistItems AlternatePackages UniTrack NonStream External NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2c PlaylistItems, AlternatePackages, with UniTrack, NonStream, External and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2cPlaylistItemsAlternatePackagesUniTrackNonStreamExternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x03, 0x07, 0x00];
    /// <summary>
    /// MXF OP2c PlaylistItems AlternatePackages UniTrack NonStream Internal MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2c PlaylistItems, AlternatePackages, with UniTrack, NonStream, Internal and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2cPlaylistItemsAlternatePackagesUniTrackNonStreamInternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x03, 0x05, 0x10];
    /// <summary>
    /// MXF OP2c PlaylistItems AlternatePackages UniTrack NonStream Internal NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2c PlaylistItems, AlternatePackages, with UniTrack, NonStream, Internal and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2cPlaylistItemsAlternatePackagesUniTrackNonStreamInternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x03, 0x05, 0x00];
    /// <summary>
    /// MXF OP2c PlaylistItems AlternatePackages UniTrack Stream External MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2c PlaylistItems, AlternatePackages, with UniTrack, Stream, External and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2cPlaylistItemsAlternatePackagesUniTrackStreamExternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x03, 0x03, 0x10];
    /// <summary>
    /// MXF OP2c PlaylistItems AlternatePackages UniTrack Stream External NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2c PlaylistItems, AlternatePackages, with UniTrack, Stream, External and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2cPlaylistItemsAlternatePackagesUniTrackStreamExternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x03, 0x03, 0x00];
    /// <summary>
    /// MXF OP2c PlaylistItems AlternatePackages UniTrack Stream Internal MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2c PlaylistItems, AlternatePackages, with UniTrack, Stream, Internal and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2cPlaylistItemsAlternatePackagesUniTrackStreamInternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x03, 0x01, 0x10];
    /// <summary>
    /// MXF OP2c PlaylistItems AlternatePackages UniTrack Stream Internal NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP2c PlaylistItems, AlternatePackages, with UniTrack, Stream, Internal and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP2cPlaylistItemsAlternatePackagesUniTrackStreamInternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x03, 0x01, 0x00];
    /// <summary>
    /// MXF OP2x PlaylistItems AnyPackage
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF: OP2x, PlaylistItems AnyPackage
    /// </remarks>
    private static readonly byte[] MXFOP2xPlaylistItemsAnyPackage = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x02, 0x00, 0x00, 0x00];
    /// <summary>
    /// MXF OP3a EditItems SinglePackage
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF: OP3a, EditItems SinglePackage
    /// </remarks>
    private static readonly byte[] MXFOP3aEditItemsSinglePackage = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x01, 0x00, 0x00];
    /// <summary>
    /// MXF OP3a EditItems SinglePackage MultiTrack NonStream External MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3a EditItems, SinglePackage, with MultiTrack, NonStream, External and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3aEditItemsSinglePackageMultiTrackNonStreamExternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x01, 0x0F, 0x10];
    /// <summary>
    /// MXF OP3a EditItems SinglePackage MultiTrack NonStream External NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3a EditItems, SinglePackage, with MultiTrack, NonStream, External and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3aEditItemsSinglePackageMultiTrackNonStreamExternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x01, 0x0F, 0x00];
    /// <summary>
    /// MXF OP3a EditItems SinglePackage MultiTrack NonStream Internal MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3a EditItems, SinglePackage, with MultiTrack, NonStream, Internal and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3aEditItemsSinglePackageMultiTrackNonStreamInternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x01, 0x0D, 0x10];
    /// <summary>
    /// MXF OP3a EditItems SinglePackage MultiTrack NonStream Internal NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3a EditItems, SinglePackage, with MultiTrack, NonStream, Internal and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3aEditItemsSinglePackageMultiTrackNonStreamInternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x01, 0x0D, 0x00];
    /// <summary>
    /// MXF OP3a EditItems SinglePackage MultiTrack Stream External MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3a EditItems, SinglePackage, with MultiTrack, Stream, External and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3aEditItemsSinglePackageMultiTrackStreamExternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x01, 0x0B, 0x10];
    /// <summary>
    /// MXF OP3a EditItems SinglePackage MultiTrack Stream External NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3a EditItems, SinglePackage, with MultiTrack, Stream, External and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3aEditItemsSinglePackageMultiTrackStreamExternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x01, 0x0B, 0x00];
    /// <summary>
    /// MXF OP3a EditItems SinglePackage MultiTrack Stream Internal MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3a EditItems, SinglePackage, with MultiTrack, Stream, Internal and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3aEditItemsSinglePackageMultiTrackStreamInternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x01, 0x09, 0x10];
    /// <summary>
    /// MXF OP3a EditItems SinglePackage MultiTrack Stream Internal NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3a EditItems, SinglePackage, with MultiTrack, Stream, Internal and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3aEditItemsSinglePackageMultiTrackStreamInternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x01, 0x09, 0x00];
    /// <summary>
    /// MXF OP3a EditItems SinglePackage UniTrack NonStream External MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3a EditItems, SinglePackage, with UniTrack, NonStream, External and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3aEditItemsSinglePackageUniTrackNonStreamExternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x01, 0x07, 0x10];
    /// <summary>
    /// MXF OP3a EditItems SinglePackage UniTrack NonStream External NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3a EditItems, SinglePackage, with UniTrack, NonStream, External and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3aEditItemsSinglePackageUniTrackNonStreamExternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x01, 0x07, 0x00];
    /// <summary>
    /// MXF OP3a EditItems SinglePackage UniTrack NonStream Internal MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3a EditItems, SinglePackage, with UniTrack, NonStream, Internal and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3aEditItemsSinglePackageUniTrackNonStreamInternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x01, 0x05, 0x10];
    /// <summary>
    /// MXF OP3a EditItems SinglePackage UniTrack NonStream Internal NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3a EditItems, SinglePackage, with UniTrack, NonStream, Internal and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3aEditItemsSinglePackageUniTrackNonStreamInternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x01, 0x05, 0x00];
    /// <summary>
    /// MXF OP3a EditItems SinglePackage UniTrack Stream External MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3a EditItems, SinglePackage, with UniTrack, Stream, External and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3aEditItemsSinglePackageUniTrackStreamExternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x01, 0x03, 0x10];
    /// <summary>
    /// MXF OP3a EditItems SinglePackage UniTrack Stream External NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3a EditItems, SinglePackage, with UniTrack, Stream, External and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3aEditItemsSinglePackageUniTrackStreamExternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x01, 0x03, 0x00];
    /// <summary>
    /// MXF OP3a EditItems SinglePackage UniTrack Stream Internal MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3a EditItems, SinglePackage, with UniTrack, Stream, Internal and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3aEditItemsSinglePackageUniTrackStreamInternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x01, 0x01, 0x10];
    /// <summary>
    /// MXF OP3a EditItems SinglePackage UniTrack Stream Internal NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3a EditItems, SinglePackage, with UniTrack, Stream, Internal and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3aEditItemsSinglePackageUniTrackStreamInternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x01, 0x01, 0x00];
    /// <summary>
    /// MXF OP3b EditItems GangedPackages
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF: OP3b, EditItems GangedPackages
    /// </remarks>
    private static readonly byte[] MXFOP3bEditItemsGangedPackages = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x02, 0x00, 0x00];
    /// <summary>
    /// MXF OP3b EditItems GangedPackages MultiTrack NonStream External MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3b EditItems, GangedPackages, with MultiTrack, NonStream, External and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3bEditItemsGangedPackagesMultiTrackNonStreamExternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x02, 0x0F, 0x10];
    /// <summary>
    /// MXF OP3b EditItems GangedPackages MultiTrack NonStream External NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3b EditItems, GangedPackages, with MultiTrack, NonStream, External and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3bEditItemsGangedPackagesMultiTrackNonStreamExternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x02, 0x0F, 0x00];
    /// <summary>
    /// MXF OP3b EditItems GangedPackages MultiTrack NonStream Internal MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3b EditItems, GangedPackages, with MultiTrack, NonStream, Internal and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3bEditItemsGangedPackagesMultiTrackNonStreamInternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x02, 0x0D, 0x10];
    /// <summary>
    /// MXF OP3b EditItems GangedPackages MultiTrack NonStream Internal NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3b EditItems, GangedPackages, with MultiTrack, NonStream, Internal and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3bEditItemsGangedPackagesMultiTrackNonStreamInternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x02, 0x0D, 0x00];
    /// <summary>
    /// MXF OP3b EditItems GangedPackages MultiTrack Stream External MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3b EditItems, GangedPackages, with MultiTrack, Stream, External and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3bEditItemsGangedPackagesMultiTrackStreamExternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x02, 0x0B, 0x10];
    /// <summary>
    /// MXF OP3b EditItems GangedPackages MultiTrack Stream External NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3b EditItems, GangedPackages, with MultiTrack, Stream, External and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3bEditItemsGangedPackagesMultiTrackStreamExternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x02, 0x0B, 0x00];
    /// <summary>
    /// MXF OP3b EditItems GangedPackages MultiTrack Stream Internal MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3b EditItems, GangedPackages, with MultiTrack, Stream, Internal and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3bEditItemsGangedPackagesMultiTrackStreamInternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x02, 0x09, 0x10];
    /// <summary>
    /// MXF OP3b EditItems GangedPackages MultiTrack Stream Internal NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3b EditItems, GangedPackages, with MultiTrack, Stream, Internal and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3bEditItemsGangedPackagesMultiTrackStreamInternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x02, 0x09, 0x00];
    /// <summary>
    /// MXF OP3b EditItems GangedPackages UniTrack NonStream External MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3b EditItems, GangedPackages, with UniTrack, NonStream, External and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3bEditItemsGangedPackagesUniTrackNonStreamExternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x02, 0x07, 0x10];
    /// <summary>
    /// MXF OP3b EditItems GangedPackages UniTrack NonStream External NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3b EditItems, GangedPackages, with UniTrack, NonStream, External and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3bEditItemsGangedPackagesUniTrackNonStreamExternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x02, 0x07, 0x00];
    /// <summary>
    /// MXF OP3b EditItems GangedPackages UniTrack NonStream Internal MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3b EditItems, GangedPackages, with UniTrack, NonStream, Internal and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3bEditItemsGangedPackagesUniTrackNonStreamInternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x02, 0x05, 0x10];
    /// <summary>
    /// MXF OP3b EditItems GangedPackages UniTrack NonStream Internal NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3b EditItems, GangedPackages, with UniTrack, NonStream, Internal and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3bEditItemsGangedPackagesUniTrackNonStreamInternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x02, 0x05, 0x00];
    /// <summary>
    /// MXF OP3b EditItems GangedPackages UniTrack Stream External MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3b EditItems, GangedPackages, with UniTrack, Stream, External and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3bEditItemsGangedPackagesUniTrackStreamExternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x02, 0x03, 0x10];
    /// <summary>
    /// MXF OP3b EditItems GangedPackages UniTrack Stream External NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3b EditItems, GangedPackages, with UniTrack, Stream, External and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3bEditItemsGangedPackagesUniTrackStreamExternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x02, 0x03, 0x00];
    /// <summary>
    /// MXF OP3b EditItems GangedPackages UniTrack Stream Internal MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3b EditItems, GangedPackages, with UniTrack, Stream, Internal and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3bEditItemsGangedPackagesUniTrackStreamInternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x02, 0x01, 0x10];
    /// <summary>
    /// MXF OP3b EditItems GangedPackages UniTrack Stream Internal NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3b EditItems, GangedPackages, with UniTrack, Stream, Internal and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3bEditItemsGangedPackagesUniTrackStreamInternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x02, 0x01, 0x00];
    /// <summary>
    /// MXF OP3c EditItems AlternatePackages
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF: OP3c, EditItems AlternatePackages
    /// </remarks>
    private static readonly byte[] MXFOP3cEditItemsAlternatePackages = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x03, 0x00, 0x00];
    /// <summary>
    /// MXF OP3c EditItems AlternatePackages MultiTrack NonStream External MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3c EditItems, AlternatePackages, with MultiTrack, NonStream, External and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3cEditItemsAlternatePackagesMultiTrackNonStreamExternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x03, 0x0F, 0x10];
    /// <summary>
    /// MXF OP3c EditItems AlternatePackages MultiTrack NonStream External NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3c EditItems, AlternatePackages, with MultiTrack, NonStream, External and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3cEditItemsAlternatePackagesMultiTrackNonStreamExternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x03, 0x0F, 0x00];
    /// <summary>
    /// MXF OP3c EditItems AlternatePackages MultiTrack NonStream Internal MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3c EditItems, AlternatePackages, with MultiTrack, NonStream, Internal and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3cEditItemsAlternatePackagesMultiTrackNonStreamInternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x03, 0x0D, 0x10];
    /// <summary>
    /// MXF OP3c EditItems AlternatePackages MultiTrack NonStream Internal NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3c EditItems, AlternatePackages, with MultiTrack, NonStream, Internal and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3cEditItemsAlternatePackagesMultiTrackNonStreamInternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x03, 0x0D, 0x00];
    /// <summary>
    /// MXF OP3c EditItems AlternatePackages MultiTrack Stream External MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3c EditItems, AlternatePackages, with MultiTrack, Stream, External and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3cEditItemsAlternatePackagesMultiTrackStreamExternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x03, 0x0B, 0x10];
    /// <summary>
    /// MXF OP3c EditItems AlternatePackages MultiTrack Stream External NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3c EditItems, AlternatePackages, with MultiTrack, Stream, External and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3cEditItemsAlternatePackagesMultiTrackStreamExternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x03, 0x0B, 0x00];
    /// <summary>
    /// MXF OP3c EditItems AlternatePackages MultiTrack Stream Internal MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3c EditItems, AlternatePackages, with MultiTrack, Stream, Internal and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3cEditItemsAlternatePackagesMultiTrackStreamInternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x03, 0x09, 0x10];
    /// <summary>
    /// MXF OP3c EditItems AlternatePackages MultiTrack Stream Internal NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3c EditItems, AlternatePackages, with MultiTrack, Stream, Internal and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3cEditItemsAlternatePackagesMultiTrackStreamInternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x03, 0x09, 0x00];
    /// <summary>
    /// MXF OP3c EditItems AlternatePackages UniTrack NonStream External MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3c EditItems, AlternatePackages, with UniTrack, NonStream, External and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3cEditItemsAlternatePackagesUniTrackNonStreamExternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x03, 0x07, 0x10];
    /// <summary>
    /// MXF OP3c EditItems AlternatePackages UniTrack NonStream External NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3c EditItems, AlternatePackages, with UniTrack, NonStream, External and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3cEditItemsAlternatePackagesUniTrackNonStreamExternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x03, 0x07, 0x00];
    /// <summary>
    /// MXF OP3c EditItems AlternatePackages UniTrack NonStream Internal MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3c EditItems, AlternatePackages, with UniTrack, NonStream, Internal and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3cEditItemsAlternatePackagesUniTrackNonStreamInternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x03, 0x05, 0x10];
    /// <summary>
    /// MXF OP3c EditItems AlternatePackages UniTrack NonStream Internal NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3c EditItems, AlternatePackages, with UniTrack, NonStream, Internal and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3cEditItemsAlternatePackagesUniTrackNonStreamInternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x03, 0x05, 0x00];
    /// <summary>
    /// MXF OP3c EditItems AlternatePackages UniTrack Stream External MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3c EditItems, AlternatePackages, with UniTrack, Stream, External and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3cEditItemsAlternatePackagesUniTrackStreamExternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x03, 0x03, 0x10];
    /// <summary>
    /// MXF OP3c EditItems AlternatePackages UniTrack Stream External NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3c EditItems, AlternatePackages, with UniTrack, Stream, External and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3cEditItemsAlternatePackagesUniTrackStreamExternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x03, 0x03, 0x00];
    /// <summary>
    /// MXF OP3c EditItems AlternatePackages UniTrack Stream Internal MayProcess
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3c EditItems, AlternatePackages, with UniTrack, Stream, Internal and MayProcess essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3cEditItemsAlternatePackagesUniTrackStreamInternalMayProcess = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x03, 0x01, 0x10];
    /// <summary>
    /// MXF OP3c EditItems AlternatePackages UniTrack Stream Internal NoProcessing
    /// </summary>
    /// <remarks>
    /// Identifier for MXF OP3c EditItems, AlternatePackages, with UniTrack, Stream, Internal and NoProcessing essence constraints
    /// </remarks>
    private static readonly byte[] MXFOP3cEditItemsAlternatePackagesUniTrackStreamInternalNoProcessing = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x03, 0x01, 0x00];
    /// <summary>
    /// MXF OP3x EditItems AnyPackage
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF: OP3x, EditItems AnyPackage
    /// </remarks>
    private static readonly byte[] MXFOP3xEditItemsAnyPackage = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x03, 0x00, 0x00, 0x00];
    /// <summary>
    /// MXF-OP Atom 1 Track 1 SourceClip
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-OP Atom file, where the Material Package contains 1 Track that has 1 SourceClip
    /// </remarks>
    private static readonly byte[] MXFOPAtom1Track1SourceClip = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x02, 0x01, 0x10, 0x00, 0x00, 0x00];
    /// <summary>
    /// MXF-OP Atom 1 Track N SourceClips
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-OP Atom file, where the Material Package contains 1 Track that has N>1 SourceClips
    /// </remarks>
    private static readonly byte[] MXFOPAtom1TrackNSourceClips = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x02, 0x01, 0x10, 0x01, 0x00, 0x00];
    /// <summary>
    /// MXF-OP Atom N Tracks 1 SourceClip
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-OP Atom file, where the Material Package contains N Tracks that has 1 SourceClip
    /// </remarks>
    private static readonly byte[] MXFOPAtomNTracks1SourceClip = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x02, 0x01, 0x10, 0x02, 0x00, 0x00];
    /// <summary>
    /// MXF-OP Atom N Tracks N SourceClips
    /// </summary>
    /// <remarks>
    /// Identifier for MXF-OP Atom file, where the Material Package contains N Tracks that has N>1 SourceClips
    /// </remarks>
    private static readonly byte[] MXFOPAtomNTracksNSourceClips = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x02, 0x0D, 0x01, 0x02, 0x01, 0x10, 0x03, 0x00, 0x00];
    /// <summary>
    /// MXF Operational Pattern Application
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF Operational Patterns
    /// </remarks>
    private static readonly byte[] MXFOperationalPatternApplication = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// MXF OP Structure Version
    /// </summary>
    /// <remarks>
    /// Identifiers for MXF OPs with Structure Version 1
    /// </remarks>
    private static readonly byte[] MXFOPStructureVersion = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// MXF Text-Based DM Scheme
    /// </summary>
    /// <remarks>
    /// Identifies the MXF Text-Based DM Scheme
    /// </remarks>
    private static readonly byte[] MXFTextBasedDMScheme = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0C, 0x0D, 0x01, 0x04, 0x01, 0x04, 0x00, 0x00, 0x00];
    /// <summary>
    /// MXF Text-Based DM Scheme Version-1
    /// </summary>
    /// <remarks>
    /// Identifies the MXF Text-Based DM Scheme Version-1
    /// </remarks>
    private static readonly byte[] MXFTextBasedDMSchemeVersion1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0C, 0x0D, 0x01, 0x04, 0x01, 0x04, 0x01, 0x00, 0x00];
    /// <summary>
    /// MXF Text-Based Framework
    /// </summary>
    /// <remarks>
    /// Identifies the MXF Text-Based Framework
    /// </remarks>
    private static readonly byte[] MXFTextBasedFramework = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0C, 0x0D, 0x01, 0x04, 0x01, 0x04, 0x01, 0x01, 0x00];
    /// <summary>
    /// NHK
    /// </summary>
    /// <remarks>
    /// Metadata registered by Nippon Hoso Kyokai (NHK) for private use
    /// </remarks>
    private static readonly byte[] NHK = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0C, 0x0E, 0x1A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// NL Technology, LLC
    /// </summary>
    /// <remarks>
    /// Metadata registered by NL Technology, LLC for private use
    /// </remarks>
    private static readonly byte[] NLTechnologyLLC = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0C, 0x0E, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Non SMPTE ST 338 MPEG-2 Coding
    /// </summary>
    /// <remarks>
    /// Identifies MPEG-2 Audio compression schemes not defined by SMPTE ST 338
    /// </remarks>
    private static readonly byte[] NonSMPTE338MMPEG2Coding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x04, 0x02, 0x02, 0x02, 0x03, 0x03, 0x00, 0x00];
    /// <summary>
    /// Numbered Source Channel for SMPTE ST 2067-8
    /// </summary>
    /// <remarks>
    /// SMPTE Label identifiers for SMPTE ST 2067-8 Audio Channels numbered between 001 and 127
    /// </remarks>
    private static readonly byte[] NumberedSourceChannelForSMPTEST20678 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x00, 0x00, 0x00];
    /// <summary>
    /// Omneon Video Networks
    /// </summary>
    /// <remarks>
    /// Metadata registered by Omneon Video Networks for private use
    /// </remarks>
    private static readonly byte[] OmneonVideoNetworks = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x05, 0x0E, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Operational Pattern Application
    /// </summary>
    /// <remarks>
    /// Identifies AAF Operational Patterns
    /// </remarks>
    private static readonly byte[] OperationalPatternApplication = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x05, 0x0D, 0x01, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// OperationCategory Effect
    /// </summary>
    /// <remarks>
    /// Identifier for OperationCategory Effect
    /// </remarks>
    private static readonly byte[] OperationCategory_Effect = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x01, 0x02, 0x01, 0x01, 0x01, 0x00];
    /// <summary>
    /// Organizationally Registered as Private
    /// </summary>
    /// <remarks>
    /// Organizationally Registered as Private
    /// </remarks>
    private static readonly byte[] OrganizationallyRegisteredasPrivate = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Organizationally Registered for Public Use
    /// </summary>
    /// <remarks>
    /// Organizationally Registered for Public Use
    /// </remarks>
    private static readonly byte[] OrganizationallyRegisteredforPublicUse = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Other Track Kinds
    /// </summary>
    /// <remarks>
    /// Identifies non-essence and non-metadata track kinds
    /// </remarks>
    private static readonly byte[] OtherTrackKinds = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x01, 0x03, 0x02, 0x03, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Panasonic
    /// </summary>
    /// <remarks>
    /// Metadata registered by Panasonic for private use
    /// </remarks>
    private static readonly byte[] Panasonic = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x0E, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// PARAMETRIC
    /// </summary>
    /// <remarks>
    /// SMPTE Label identifiers for Parametric Data
    /// </remarks>
    private static readonly byte[] PARAMETRIC = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Picture Essence
    /// </summary>
    /// <remarks>
    /// SMPTE Label identifiers for picture essence parameters
    /// </remarks>
    private static readonly byte[] ParametricPictureEssence = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Sound Essence
    /// </summary>
    /// <remarks>
    /// Identifies sound essence parameters
    /// </remarks>
    private static readonly byte[] ParametricSoundEssence = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Parsed Text Track
    /// </summary>
    /// <remarks>
    /// Identifies a track containing parsed text (for example, XML code)
    /// </remarks>
    private static readonly byte[] ParsedTextTrack = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x07, 0x01, 0x03, 0x02, 0x03, 0x02, 0x00, 0x00, 0x00];
    /// <summary>
    /// PBS
    /// </summary>
    /// <remarks>
    /// Metadata registered by the Public Broadcasting Service for public use
    /// </remarks>
    private static readonly byte[] PBS = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0D, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// PHDR Image Metadata Wrapping Frame
    /// </summary>
    /// <remarks>
    /// Identifies a frame of wrapped PHDR image metadata
    /// </remarks>
    private static readonly byte[] PHDRImageMetadataWrappingFrame = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x05, 0x0E, 0x09, 0x06, 0x07, 0x01, 0x01, 0x01, 0x01];
    /// <summary>
    /// Picture Coding Characteristics
    /// </summary>
    /// <remarks>
    /// Identifies Picture Coding Characteristics
    /// </remarks>
    private static readonly byte[] PictureCodingCharacteristics = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Picture Essence Track
    /// </summary>
    /// <remarks>
    /// Identifies a picture essence track
    /// </remarks>
    private static readonly byte[] PictureEssenceTrack = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x01, 0x03, 0x02, 0x02, 0x01, 0x00, 0x00, 0x00];
    /// <summary>
    /// Picture Source Characteristics
    /// </summary>
    /// <remarks>
    /// Identifies picture source parameters
    /// </remarks>
    private static readonly byte[] PictureSourceCharacteristics = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Picture Track Labeling
    /// </summary>
    /// <remarks>
    /// Identifies Picture Track Labeling
    /// </remarks>
    private static readonly byte[] PictureTrackLabeling = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Picture Track Labeling for SMPTE ST 2070
    /// </summary>
    /// <remarks>
    /// Identifies Picture Track Labeling SMPTE ST 2070
    /// </remarks>
    private static readonly byte[] PictureTrackLabelingForSMPTEST2070 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x10, 0x01, 0x00, 0x00, 0x00];
    /// <summary>
    /// PluginCategory Codec
    /// </summary>
    /// <remarks>
    /// Identifier for PluginCategory Codec
    /// </remarks>
    private static readonly byte[] PluginCategory_Codec = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x01, 0x02, 0x01, 0x01, 0x03, 0x00];
    /// <summary>
    /// PluginCategory Effect
    /// </summary>
    /// <remarks>
    /// Identifier for PluginCategory Effect
    /// </remarks>
    private static readonly byte[] PluginCategory_Effect = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x01, 0x02, 0x01, 0x01, 0x02, 0x00];
    /// <summary>
    /// PluginCategory Interpolation
    /// </summary>
    /// <remarks>
    /// Identifier for PluginCategory Interpolation
    /// </remarks>
    private static readonly byte[] PluginCategory_Interpolation = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x01, 0x02, 0x01, 0x01, 0x04, 0x00];
    /// <summary>
    /// PMD Version
    /// </summary>
    /// <remarks>
    /// PMD Version
    /// </remarks>
    private static readonly byte[] PMDVersion = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x04, 0x02, 0x04, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Presentation Loudness Description
    /// </summary>
    /// <remarks>
    /// Presentation Loudness Description
    /// </remarks>
    private static readonly byte[] PresentationLoudnessDescription = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x04, 0x02, 0x0F, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Pro-MPEG Forum
    /// </summary>
    /// <remarks>
    /// Metadata registered by the Pro-MPEG Forum for public use
    /// </remarks>
    private static readonly byte[] Pro_MPEGForum = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x0D, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// PROCESS
    /// </summary>
    /// <remarks>
    /// SMPTE Label identifiers for Process Data
    /// </remarks>
    private static readonly byte[] PROCESS = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// ProRes Picture Coding 422
    /// </summary>
    /// <remarks>
    /// Identifies ProRes Picture coding for the 422 profile
    /// </remarks>
    private static readonly byte[] ProResPictureCoding422 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x06, 0x03, 0x00];
    /// <summary>
    /// ProRes Picture Coding 422 HQ
    /// </summary>
    /// <remarks>
    /// Identifies ProRes Picture coding for the 422 HQ profile
    /// </remarks>
    private static readonly byte[] ProResPictureCoding422HQ = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x06, 0x04, 0x00];
    /// <summary>
    /// ProRes Picture Coding 422 LT
    /// </summary>
    /// <remarks>
    /// Identifies ProRes Picture coding for the 422 LT profile
    /// </remarks>
    private static readonly byte[] ProResPictureCoding422LT = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x06, 0x02, 0x00];
    /// <summary>
    /// ProRes Picture Coding 422 Proxy
    /// </summary>
    /// <remarks>
    /// Identifies ProRes Picture coding for the 422 Proxy profile
    /// </remarks>
    private static readonly byte[] ProResPictureCoding422Proxy = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x06, 0x01, 0x00];
    /// <summary>
    /// ProRes Picture Coding 4444
    /// </summary>
    /// <remarks>
    /// Identifies ProRes Picture coding for the 4444 profile
    /// </remarks>
    private static readonly byte[] ProResPictureCoding4444 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x06, 0x05, 0x00];
    /// <summary>
    /// ProRes Picture Coding 4444 XQ
    /// </summary>
    /// <remarks>
    /// Identifies ProRes Picture coding for the 4444 XQ profile
    /// </remarks>
    private static readonly byte[] ProResPictureCoding4444XQ = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x06, 0x06, 0x00];
    /// <summary>
    /// ProRes Picture Coding Scheme
    /// </summary>
    /// <remarks>
    /// Identifies ProRes Picture coding scheme
    /// </remarks>
    private static readonly byte[] ProResPictureCodingScheme = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x06, 0x00, 0x00];
    /// <summary>
    /// Quantel Ltd
    /// </summary>
    /// <remarks>
    /// Metadata registered by Quantel Ltd for private use
    /// </remarks>
    private static readonly byte[] QuantelLtd = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x07, 0x0E, 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// RED
    /// </summary>
    /// <remarks>
    /// Metadata registered by RED Digital Cinema, LLC. for private use
    /// </remarks>
    private static readonly byte[] RED = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x0E, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Reg-XML Baseline Meta-Dictionary Identifiers
    /// </summary>
    /// <remarks>
    /// Identifies Reg-XML Baseline Meta-Dictionary Identifiers
    /// </remarks>
    private static readonly byte[] RegXMLBaselineMetaDictionaryIdentifiers = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0C, 0x01, 0x01, 0x03, 0x01, 0x01, 0x01, 0x00, 0x00];
    /// <summary>
    /// Reg-XML Definition Identifiers
    /// </summary>
    /// <remarks>
    /// Identifies Reg-XML Definition Identifiers
    /// </remarks>
    private static readonly byte[] RegXMLDefinitionIdentifiers = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0C, 0x01, 0x01, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Reg-XML Meta-Dictionary Identifiers
    /// </summary>
    /// <remarks>
    /// Identifies Reg-XML Meta-Dictionary Identifiers
    /// </remarks>
    private static readonly byte[] RegXMLMetaDictionaryIdentifiers = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0C, 0x01, 0x01, 0x03, 0x01, 0x01, 0x00, 0x00, 0x00];
    /// <summary>
    /// Reg-XML ST xxx--2 Meta-Dictionary Baseline
    /// </summary>
    /// <remarks>
    /// Identifies Reg-XML ST xxx--2 Meta-Dictionary Baseline
    /// </remarks>
    private static readonly byte[] RegXMLSTXxx2MetaDictionaryBaseline = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0C, 0x01, 0x01, 0x03, 0x01, 0x01, 0x01, 0x01, 0x00];
    /// <summary>
    /// RELATIONAL
    /// </summary>
    /// <remarks>
    /// SMPTE Label identifiers for Relational Data
    /// </remarks>
    private static readonly byte[] RELATIONAL = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Repetitive Timing Metadata
    /// </summary>
    /// <remarks>
    /// Identifies repetitive timing metadata
    /// </remarks>
    private static readonly byte[] RepetitiveTimingMetadata = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x04, 0x01, 0x02, 0x01, 0x00, 0x00, 0x00];
    /// <summary>
    /// RIFF WAVE Container
    /// </summary>
    /// <remarks>
    /// Identifier for audio essence elements stored according to the RIFF WAVE specification
    /// </remarks>
    private static readonly byte[] RIFFWAVEContainer = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x06, 0x0D, 0x01, 0x13, 0x01, 0x01, 0x01, 0x01, 0x00];
    /// <summary>
    /// Right Audio Channel
    /// </summary>
    /// <remarks>
    /// Identifies the Audio Channel intended to drive the Right loudspeaker
    /// </remarks>
    private static readonly byte[] RightAudioChannel = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Right Center Audio Channel
    /// </summary>
    /// <remarks>
    /// Identifies the Audio Channel intended to drive the Right Center loudspeaker
    /// </remarks>
    private static readonly byte[] RightCenterAudioChannel = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x0C, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Right Eye Data Track
    /// </summary>
    /// <remarks>
    /// Identifies Data Track Corresponding to Right Eye
    /// </remarks>
    private static readonly byte[] RightEyeDataTrack = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x03, 0x02, 0x10, 0x01, 0x02, 0x00, 0x00];
    /// <summary>
    /// Right Eye Picture Track
    /// </summary>
    /// <remarks>
    /// Identifies Picture Track Corresponding to Right Eye
    /// </remarks>
    private static readonly byte[] RightEyePictureTrack = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x10, 0x01, 0x02, 0x00, 0x00];
    /// <summary>
    /// Right Rear Surround Audio Channel
    /// </summary>
    /// <remarks>
    /// Identifies the Audio Channel intended to drive the Right Rear Surround loudspeaker(s)
    /// </remarks>
    private static readonly byte[] RightRearSurroundAudioChannel = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x0A, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Right Side Surround Audio Channel
    /// </summary>
    /// <remarks>
    /// Identifies the Audio Channel intended to drive the Right Side Surround
    /// </remarks>
    private static readonly byte[] RightSideSurroundAudioChannel = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x08, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Right Surround Audio Channel
    /// </summary>
    /// <remarks>
    /// Identifies the Audio Channel intended to drive the Right Surround
    /// </remarks>
    private static readonly byte[] RightSurroundAudioChannel = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x06, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Rules Based Specifications Version 1
    /// </summary>
    /// <remarks>
    /// No definition provided.
    /// </remarks>
    private static readonly byte[] RulesBasedSpecificationsVersion1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// SDTI-CP Identifiers
    /// </summary>
    /// <remarks>
    /// Legacy label used by SDTI-CP
    /// </remarks>
    private static readonly byte[] SDTICPIdentifiers = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// SDTI-CP MPEG-2 Baseline Template
    /// </summary>
    /// <remarks>
    /// Legacy label used by SDTI-CP for MPEG-2 payloads
    /// </remarks>
    private static readonly byte[] SDTICPMPEG2BaselineTemplate = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00];
    /// <summary>
    /// SDTI-CP MPEG-2 Extended Template
    /// </summary>
    /// <remarks>
    /// Legacy label used by SDTI-CP for MPEG-2 payloads with extensions to the baseline specification
    /// </remarks>
    private static readonly byte[] SDTICPMPEG2ExtendedTemplate = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00];
    /// <summary>
    /// SDTI-CP MPEG Payloads
    /// </summary>
    /// <remarks>
    /// Legacy label used by SDTI-CP MPEG Payloads
    /// </remarks>
    private static readonly byte[] SDTICPMPEGPayloads = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00];
    /// <summary>
    /// SDTI Payload Identifiers
    /// </summary>
    /// <remarks>
    /// Legacy label used by SDTI systems
    /// </remarks>
    private static readonly byte[] SDTIPayloadIdentifiers = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Serial Audio Definition Model Metadata Payload
    /// </summary>
    /// <remarks>
    /// Identifies Serial Audio Definition Model Metadata Payload
    /// </remarks>
    private static readonly byte[] SerialAudioDefinitionModelMetadataPayload = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x04, 0x02, 0x12, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Settings
    /// </summary>
    /// <remarks>
    /// Identifies Settings
    /// </remarks>
    private static readonly byte[] Settings = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x05, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Shutter Priority Auto Exposure
    /// </summary>
    /// <remarks>
    /// Identifies Shutter Priority Auto Exposure
    /// </remarks>
    private static readonly byte[] ShutterPriorityAutoExposure = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x05, 0x10, 0x01, 0x01, 0x01, 0x05, 0x00, 0x00];
    /// <summary>
    /// SMPTE-12M 23.98fps Active User Bits Drop Frame Active
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-12M timecode at 23.98fps with Active User Bits and Drop Frame Active
    /// </remarks>
    private static readonly byte[] SMPTE12M2398fpsActiveUserBitsDropFrameActive = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x04, 0x01, 0x02, 0x01, 0x02, 0x01, 0x01];
    /// <summary>
    /// SMPTE-12M 23.98fps Active User Bits Drop Frame Inactive
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-12M timecode at 23.98fps with Active User Bits and Drop Frame Inactive
    /// </remarks>
    private static readonly byte[] SMPTE12M2398fpsActiveUserBitsDropFrameInactive = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x04, 0x01, 0x02, 0x01, 0x02, 0x01, 0x00];
    /// <summary>
    /// SMPTE-12M 23.98fps Datecode User Bits Drop Frame Active
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-12M timecode at 23.98fps with Datecode User Bits and Drop Frame Active
    /// </remarks>
    private static readonly byte[] SMPTE12M2398fpsDatecodeUserBitsDropFrameActive = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x04, 0x01, 0x02, 0x01, 0x03, 0x01, 0x01];
    /// <summary>
    /// SMPTE-12M 23.98fps Datecode User Bits Drop Frame Inactive
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-12M timecode at 23.98fps with Datecode User Bits and Drop Frame Inactive
    /// </remarks>
    private static readonly byte[] SMPTE12M2398fpsDatecodeUserBitsDropFrameInactive = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x04, 0x01, 0x02, 0x01, 0x03, 0x01, 0x00];
    /// <summary>
    /// SMPTE-12M 23.98fps Inactive User Bits Drop Frame Active
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-12M timecode at 23.98fps with Inactive User Bits and Drop Frame Active
    /// </remarks>
    private static readonly byte[] SMPTE12M2398fpsInactiveUserBitsDropFrameActive = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x04, 0x01, 0x02, 0x01, 0x01, 0x01, 0x01];
    /// <summary>
    /// SMPTE-12M 23.98fps Inactive User Bits Drop Frame Inactive
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-12M timecode at 23.98fps with Inactive User Bits and Drop Frame Inactive
    /// </remarks>
    private static readonly byte[] SMPTE12M2398fpsInactiveUserBitsDropFrameInactive = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x04, 0x01, 0x02, 0x01, 0x01, 0x01, 0x00];
    /// <summary>
    /// SMPTE-12M 24fps Active User Bits No Drop Frame
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-12M timecode at 24fps with Active User Bits and No Drop Frame
    /// </remarks>
    private static readonly byte[] SMPTE12M24fpsActiveUserBitsNoDropFrame = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x04, 0x01, 0x02, 0x01, 0x02, 0x02, 0x00];
    /// <summary>
    /// SMPTE-12M 24fps Datecode User Bits No Drop Frame
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-12M timecode at 24fps with Datecode User Bits and No Drop Frame
    /// </remarks>
    private static readonly byte[] SMPTE12M24fpsDatecodeUserBitsNoDropFrame = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x04, 0x01, 0x02, 0x01, 0x03, 0x02, 0x00];
    /// <summary>
    /// SMPTE-12M 24fps Inactive User Bits No Drop Frame
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-12M timecode at 24fps with Inactive User Bits and No Drop Frame
    /// </remarks>
    private static readonly byte[] SMPTE12M24fpsInactiveUserBitsNoDropFrame = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x04, 0x01, 0x02, 0x01, 0x01, 0x02, 0x00];
    /// <summary>
    /// SMPTE-12M 25fps Active User Bits No Drop Frame
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-12M timecode at 25fps with Active User Bits and No Drop Frame
    /// </remarks>
    private static readonly byte[] SMPTE12M25fpsActiveUserBitsNoDropFrame = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x04, 0x01, 0x02, 0x01, 0x02, 0x03, 0x00];
    /// <summary>
    /// SMPTE-12M 25fps Datecode User Bits No Drop Frame
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-12M timecode at 25fps with Datecode User Bits and No Drop Frame
    /// </remarks>
    private static readonly byte[] SMPTE12M25fpsDatecodeUserBitsNoDropFrame = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x04, 0x01, 0x02, 0x01, 0x03, 0x03, 0x00];
    /// <summary>
    /// SMPTE-12M 25fps Inactive User Bits No Drop Frame
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-12M timecode at 25fps with Inactive User Bits and No Drop Frame
    /// </remarks>
    private static readonly byte[] SMPTE12M25fpsInactiveUserBitsNoDropFrame = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x04, 0x01, 0x02, 0x01, 0x01, 0x03, 0x00];
    /// <summary>
    /// SMPTE-12M 29.97fps Active User Bits Drop Frame Active
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-12M timecode at 29.97fps with Active User Bits and Drop Frame Active
    /// </remarks>
    private static readonly byte[] SMPTE12M2997fpsActiveUserBitsDropFrameActive = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x04, 0x01, 0x02, 0x01, 0x02, 0x04, 0x01];
    /// <summary>
    /// SMPTE-12M 29.97fps Active User Bits Drop Frame Inactive
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-12M timecode at 29.97fps with Active User Bits and Drop Frame Inactive
    /// </remarks>
    private static readonly byte[] SMPTE12M2997fpsActiveUserBitsDropFrameInactive = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x04, 0x01, 0x02, 0x01, 0x02, 0x04, 0x00];
    /// <summary>
    /// SMPTE-12M 29.97fps Datecode User Bits Drop Frame Active
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-12M timecode at 29.97fps with Datecode User Bits and Drop Frame Active
    /// </remarks>
    private static readonly byte[] SMPTE12M2997fpsDatecodeUserBitsDropFrameActive = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x04, 0x01, 0x02, 0x01, 0x03, 0x04, 0x01];
    /// <summary>
    /// SMPTE-12M 29.97fps Datecode User Bits Drop Frame Inactive
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-12M timecode at 29.97fps with Datecode User Bits and Drop Frame Inactive
    /// </remarks>
    private static readonly byte[] SMPTE12M2997fpsDatecodeUserBitsDropFrameInactive = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x04, 0x01, 0x02, 0x01, 0x03, 0x04, 0x00];
    /// <summary>
    /// SMPTE-12M 29.97fps Inactive User Bits Drop Frame Active
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-12M timecode at 29.97fps with Inactive User Bits and Drop Frame Active
    /// </remarks>
    private static readonly byte[] SMPTE12M2997fpsInactiveUserBitsDropFrameActive = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x04, 0x01, 0x02, 0x01, 0x01, 0x04, 0x01];
    /// <summary>
    /// SMPTE-12M 29.97fps Inactive User Bits Drop Frame Inactive
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-12M timecode at 29.97fps with Inactive User Bits and Drop Frame Inactive
    /// </remarks>
    private static readonly byte[] SMPTE12M2997fpsInactiveUserBitsDropFrameInactive = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x04, 0x01, 0x02, 0x01, 0x01, 0x04, 0x00];
    /// <summary>
    /// SMPTE-12M 30fps Active User Bits No Drop Frame
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-12M timecode at 30fps with Active User Bits and No Drop Frame
    /// </remarks>
    private static readonly byte[] SMPTE12M30fpsActiveUserBitsNoDropFrame = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x04, 0x01, 0x02, 0x01, 0x02, 0x05, 0x00];
    /// <summary>
    /// SMPTE-12M 30fps Datecode User Bits No Drop Frame
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-12M timecode at 30fps with Datecode User Bits and No Drop Frame
    /// </remarks>
    private static readonly byte[] SMPTE12M30fpsDatecodeUserBitsNoDropFrame = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x04, 0x01, 0x02, 0x01, 0x03, 0x05, 0x00];
    /// <summary>
    /// SMPTE-12M 30fps Inactive User Bits No Drop Frame
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-12M timecode at 30fps with Inactive User Bits and No Drop Frame
    /// </remarks>
    private static readonly byte[] SMPTE12M30fpsInactiveUserBitsNoDropFrame = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x04, 0x01, 0x02, 0x01, 0x01, 0x05, 0x00];
    /// <summary>
    /// SMPTE-12M Active User Bits
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE 12M timecode with active user bits
    /// </remarks>
    private static readonly byte[] SMPTE12MActiveUserBits = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x04, 0x01, 0x02, 0x01, 0x02, 0x00, 0x00];
    /// <summary>
    /// SMPTE-12M Datecode User Bits
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE 12M timecode with datecode user bits
    /// </remarks>
    private static readonly byte[] SMPTE12MDatecodeUserBits = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x04, 0x01, 0x02, 0x01, 0x03, 0x00, 0x00];
    /// <summary>
    /// SMPTE-12M Inactive User Bits
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE 12M timecode with inactive user bits
    /// </remarks>
    private static readonly byte[] SMPTE12MInactiveUserBits = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x04, 0x01, 0x02, 0x01, 0x01, 0x00, 0x00];
    /// <summary>
    /// SMPTE-12M Timecode Track Active User Bits
    /// </summary>
    /// <remarks>
    /// Identifies a SMPTE 12M Timecode track with active user bits
    /// </remarks>
    private static readonly byte[] SMPTE12MTimecodeTrackActiveUserBits = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x01, 0x03, 0x02, 0x01, 0x02, 0x00, 0x00, 0x00];
    /// <summary>
    /// SMPTE-12M Timecode Track Inactive User Bits
    /// </summary>
    /// <remarks>
    /// Identifies a SMPTE 12M Timecode track with inactive user bits
    /// </remarks>
    private static readonly byte[] SMPTE12MTimecodeTrackInactiveUserBits = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x01, 0x03, 0x02, 0x01, 0x01, 0x00, 0x00, 0x00];
    /// <summary>
    /// SMPTE-2035 12-Track Multi-Channel Program plus Stereo Program 13e
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 12-Track Multi-Channel Program plus Stereo Program 13e
    /// </remarks>
    private static readonly byte[] SMPTE203512TrackMultiChannelProgramPlusStereoProgram13e = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x02, 0x02, 0x10, 0x01, 0x0D, 0x05, 0x00];
    /// <summary>
    /// SMPTE-2035 12-Track Multi-Channel Program plus Stereo Programs 13d
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 12-Track Multi-Channel Program plus Stereo Programs 13d
    /// </remarks>
    private static readonly byte[] SMPTE203512TrackMultiChannelProgramPlusStereoPrograms13d = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x02, 0x02, 0x10, 0x01, 0x0D, 0x04, 0x00];
    /// <summary>
    /// SMPTE-2035 12-Track Program Type Configurations
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 12-Track Program Type Configurations
    /// </remarks>
    private static readonly byte[] SMPTE203512TrackProgramTypeConfigurations = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x0D, 0x00, 0x00];
    /// <summary>
    /// SMPTE-2035 12-Track Stereo Dual-Language Program Plus Multi-Channel-Coded-Audio 13c
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 12-Track Stereo Dual-Language Program Plus Multi-Channel-Coded-Audio 13c
    /// </remarks>
    private static readonly byte[] SMPTE203512TrackStereoDualLanguageProgramPlusMultiChannelCodedAudio13c = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x0D, 0x03, 0x00];
    /// <summary>
    /// SMPTE-2035 12-Track Stereo Dual-Language Program Plus Multi-Channel-Program 13b
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 12-Track Stereo Dual-Language Program Plus Multi-Channel-Program 13b
    /// </remarks>
    private static readonly byte[] SMPTE203512TrackStereoDualLanguageProgramPlusMultiChannelProgram13b = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x0D, 0x02, 0x00];
    /// <summary>
    /// SMPTE-2035 12-Track Stereo Programs Plus Multi-Channel Program 13a
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 12-Track Stereo Programs Plus Multi-Channel Program 13a
    /// </remarks>
    private static readonly byte[] SMPTE203512TrackStereoProgramsPlusMultiChannelProgram13a = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x0D, 0x01, 0x00];
    /// <summary>
    /// SMPTE-2035 Dual Stereo 3a
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Dual Stereo 3a
    /// </remarks>
    private static readonly byte[] SMPTE2035DualStereo3a = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x03, 0x01, 0x00];
    /// <summary>
    /// SMPTE-2035 Dual Stereo 3b
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Dual Stereo 3b
    /// </remarks>
    private static readonly byte[] SMPTE2035DualStereo3b = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x03, 0x02, 0x00];
    /// <summary>
    /// SMPTE-2035 Dual Stereo Multi-Channel 12a
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Dual Stereo Multi-Channel 12a
    /// </remarks>
    private static readonly byte[] SMPTE2035DualStereoMultiChannel12a = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x0C, 0x01, 0x00];
    /// <summary>
    /// SMPTE-2035 Dual Stereo Multi-Channel Configurations
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Dual Stereo Multi-Channel Configurations
    /// </remarks>
    private static readonly byte[] SMPTE2035DualStereoMultiChannelConfigurations = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x0C, 0x00, 0x00];
    /// <summary>
    /// SMPTE-2035 Dual Stereo Program Configurations
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Dual Stereo Program Configurations
    /// </remarks>
    private static readonly byte[] SMPTE2035DualStereoProgramConfigurations = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x03, 0x00, 0x00];
    /// <summary>
    /// SMPTE-2035 Mono Commentary 4a
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Mono Commentary 4a
    /// </remarks>
    private static readonly byte[] SMPTE2035MonoCommentary4a = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x04, 0x01, 0x00];
    /// <summary>
    /// SMPTE-2035 Mono Commentary 4b
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Mono Commentary 4b
    /// </remarks>
    private static readonly byte[] SMPTE2035MonoCommentary4b = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x04, 0x02, 0x00];
    /// <summary>
    /// SMPTE-2035 Mono Commentary 4c
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Mono Commentary 4c
    /// </remarks>
    private static readonly byte[] SMPTE2035MonoCommentary4c = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x04, 0x03, 0x00];
    /// <summary>
    /// SMPTE-2035 Mono Commentary Program Configurations
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Mono Commentary Program Configurations
    /// </remarks>
    private static readonly byte[] SMPTE2035MonoCommentaryProgramConfigurations = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x04, 0x00, 0x00];
    /// <summary>
    /// SMPTE-2035 Mono Program 1a
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Mono Program 1a
    /// </remarks>
    private static readonly byte[] SMPTE2035MonoProgram1a = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x01, 0x01, 0x00];
    /// <summary>
    /// SMPTE-2035 Mono Program 1b
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Mono Program 1b
    /// </remarks>
    private static readonly byte[] SMPTE2035MonoProgram1b = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x01, 0x02, 0x00];
    /// <summary>
    /// SMPTE-2035 Mono Program 1c
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Mono Program 1c
    /// </remarks>
    private static readonly byte[] SMPTE2035MonoProgram1c = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x01, 0x03, 0x00];
    /// <summary>
    /// SMPTE-2035 Mono Program Combo 8a
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Mono Program Combo 8a
    /// </remarks>
    private static readonly byte[] SMPTE2035MonoProgramCombo8a = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x08, 0x01, 0x00];
    /// <summary>
    /// SMPTE-2035 Mono Program Combo 8b
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Mono Program Combo 8b
    /// </remarks>
    private static readonly byte[] SMPTE2035MonoProgramCombo8b = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x08, 0x02, 0x00];
    /// <summary>
    /// SMPTE-2035 Mono Program Combo 8c
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Mono Program Combo 8c
    /// </remarks>
    private static readonly byte[] SMPTE2035MonoProgramCombo8c = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x08, 0x03, 0x00];
    /// <summary>
    /// SMPTE-2035 Mono Program Combo Configurations
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Mono Program Combo Configurations
    /// </remarks>
    private static readonly byte[] SMPTE2035MonoProgramComboConfigurations = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x08, 0x00, 0x00];
    /// <summary>
    /// SMPTE-2035 Mono Program Configurations
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Mono Program Configurations
    /// </remarks>
    private static readonly byte[] SMPTE2035MonoProgramConfigurations = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x01, 0x00, 0x00];
    /// <summary>
    /// SMPTE-2035 Mono Program Dialogue 7a
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Mono Program Dialogue 7a
    /// </remarks>
    private static readonly byte[] SMPTE2035MonoProgramDialogue7a = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x07, 0x01, 0x00];
    /// <summary>
    /// SMPTE-2035 Mono Program Dialogue 7b
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Mono Program Dialogue 7b
    /// </remarks>
    private static readonly byte[] SMPTE2035MonoProgramDialogue7b = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x07, 0x02, 0x00];
    /// <summary>
    /// SMPTE-2035 Mono Program Dialogue Configurations
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Mono Program Dialogue Configurations
    /// </remarks>
    private static readonly byte[] SMPTE2035MonoProgramDialogueConfigurations = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x07, 0x00, 0x00];
    /// <summary>
    /// SMPTE-2035 Mono Programs Combo 8d
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Mono Programs Combo 8d
    /// </remarks>
    private static readonly byte[] SMPTE2035MonoProgramsCombo8d = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x08, 0x04, 0x00];
    /// <summary>
    /// SMPTE-2035 Mono Programs Combo 8e
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Mono Programs Combo 8e
    /// </remarks>
    private static readonly byte[] SMPTE2035MonoProgramsCombo8e = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x08, 0x05, 0x00];
    /// <summary>
    /// SMPTE-2035 Mono Programs Combo 8f
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Mono Programs Combo 8f
    /// </remarks>
    private static readonly byte[] SMPTE2035MonoProgramsCombo8f = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x08, 0x06, 0x00];
    /// <summary>
    /// SMPTE-2035 Mono Programs Combo 8g
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Mono Programs Combo 8g
    /// </remarks>
    private static readonly byte[] SMPTE2035MonoProgramsCombo8g = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x08, 0x07, 0x00];
    /// <summary>
    /// SMPTE-2035 Multi-Channel Channel Non-PCM 10a
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Multi-Channel Channel Non-PCM 10a
    /// </remarks>
    private static readonly byte[] SMPTE2035MultiChannelChannelNonPCM10a = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x0A, 0x01, 0x00];
    /// <summary>
    /// SMPTE-2035 Multi-Channel Channel Non-PCM Audio
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Multi-Channel Channel Non-PCM Audio
    /// </remarks>
    private static readonly byte[] SMPTE2035MultiChannelChannelNonPCMAudio = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x0A, 0x00, 0x00];
    /// <summary>
    /// SMPTE-2035 Multi-Channel Program Combo 11a
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Multi-Channel Program Combo 11a
    /// </remarks>
    private static readonly byte[] SMPTE2035MultiChannelProgramCombo11a = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x0B, 0x01, 0x00];
    /// <summary>
    /// SMPTE-2035 Multi-Channel Program Combo 11b
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Multi-Channel Program Combo 11b
    /// </remarks>
    private static readonly byte[] SMPTE2035MultiChannelProgramCombo11b = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x0B, 0x02, 0x00];
    /// <summary>
    /// SMPTE-2035 Multi-Channel Program Combo 11c
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Multi-Channel Program Combo 11c
    /// </remarks>
    private static readonly byte[] SMPTE2035MultiChannelProgramCombo11c = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x0B, 0x03, 0x00];
    /// <summary>
    /// SMPTE-2035 Multi-Channel Program Combo 11d
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Multi-Channel Program Combo 11d
    /// </remarks>
    private static readonly byte[] SMPTE2035MultiChannelProgramCombo11d = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x0B, 0x04, 0x00];
    /// <summary>
    /// SMPTE-2035 Multi-Channel Program Combo 11e
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Multi-Channel Program Combo 11e
    /// </remarks>
    private static readonly byte[] SMPTE2035MultiChannelProgramCombo11e = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x0B, 0x05, 0x00];
    /// <summary>
    /// SMPTE-2035 Multi-Channel Program Combo 11f
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Multi-Channel Program Combo 11f
    /// </remarks>
    private static readonly byte[] SMPTE2035MultiChannelProgramCombo11f = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x0B, 0x06, 0x00];
    /// <summary>
    /// SMPTE-2035 Multi-Channel Program Combo 11g
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Multi-Channel Program Combo 11g
    /// </remarks>
    private static readonly byte[] SMPTE2035MultiChannelProgramCombo11g = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x0B, 0x07, 0x00];
    /// <summary>
    /// SMPTE-2035 Multi-Channel Program Combo 11h
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Multi-Channel Program Combo 11h
    /// </remarks>
    private static readonly byte[] SMPTE2035MultiChannelProgramCombo11h = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x0B, 0x08, 0x00];
    /// <summary>
    /// SMPTE-2035 Multi-Channel Program Combo 11i
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Multi-Channel Program Combo 11i
    /// </remarks>
    private static readonly byte[] SMPTE2035MultiChannelProgramCombo11i = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x0B, 0x09, 0x00];
    /// <summary>
    /// SMPTE-2035 Multi-Channel Program Combo Configurations
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Multi-Channel Program Combo Configurations
    /// </remarks>
    private static readonly byte[] SMPTE2035MultiChannelProgramComboConfigurations = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x0B, 0x00, 0x00];
    /// <summary>
    /// SMPTE-2035 Stereo Commentary Program Configurations
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Stereo Commentary Program Configurations
    /// </remarks>
    private static readonly byte[] SMPTE2035StereoCommentaryProgramConfigurations = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x06, 0x00, 0x00];
    /// <summary>
    /// SMPTE-2035 Stereo International Sound 5a
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Stereo International Sound 5a
    /// </remarks>
    private static readonly byte[] SMPTE2035StereoInternationalSound5a = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x05, 0x01, 0x00];
    /// <summary>
    /// SMPTE-2035 Stereo International Sound 5b
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Stereo International Sound 5b
    /// </remarks>
    private static readonly byte[] SMPTE2035StereoInternationalSound5b = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x05, 0x02, 0x00];
    /// <summary>
    /// SMPTE-2035 Stereo International Sound Configurations
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Stereo International Sound Configurations
    /// </remarks>
    private static readonly byte[] SMPTE2035StereoInternationalSoundConfigurations = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x05, 0x00, 0x00];
    /// <summary>
    /// SMPTE-2035 Stereo Program 2a
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Stereo Program 2a
    /// </remarks>
    private static readonly byte[] SMPTE2035StereoProgram2a = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x02, 0x01, 0x00];
    /// <summary>
    /// SMPTE-2035 Stereo Program 2b
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Stereo Program 2b
    /// </remarks>
    private static readonly byte[] SMPTE2035StereoProgram2b = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x02, 0x02, 0x00];
    /// <summary>
    /// SMPTE-2035 Stereo Program 2c
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Stereo Program 2c
    /// </remarks>
    private static readonly byte[] SMPTE2035StereoProgram2c = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x02, 0x03, 0x00];
    /// <summary>
    /// SMPTE-2035 Stereo Program Combo 9a
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Stereo Program Combo 9a
    /// </remarks>
    private static readonly byte[] SMPTE2035StereoProgramCombo9a = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x09, 0x01, 0x00];
    /// <summary>
    /// SMPTE-2035 Stereo Program Combo 9b
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Stereo Program Combo 9b
    /// </remarks>
    private static readonly byte[] SMPTE2035StereoProgramCombo9b = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x09, 0x02, 0x00];
    /// <summary>
    /// SMPTE-2035 Stereo Program Combo 9c
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Stereo Program Combo 9c
    /// </remarks>
    private static readonly byte[] SMPTE2035StereoProgramCombo9c = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x09, 0x03, 0x00];
    /// <summary>
    /// SMPTE-2035 Stereo Program Combo 9d
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Stereo Program Combo 9d
    /// </remarks>
    private static readonly byte[] SMPTE2035StereoProgramCombo9d = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x09, 0x04, 0x00];
    /// <summary>
    /// SMPTE-2035 Stereo Program Combo 9e
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Stereo Program Combo 9e
    /// </remarks>
    private static readonly byte[] SMPTE2035StereoProgramCombo9e = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x09, 0x05, 0x00];
    /// <summary>
    /// SMPTE-2035 Stereo Program Combo Configurations
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Stereo Program Combo Configurations
    /// </remarks>
    private static readonly byte[] SMPTE2035StereoProgramComboConfigurations = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x09, 0x00, 0x00];
    /// <summary>
    /// SMPTE-2035 Stereo Program Configurations
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Stereo Program Configurations
    /// </remarks>
    private static readonly byte[] SMPTE2035StereoProgramConfigurations = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x02, 0x00, 0x00];
    /// <summary>
    /// SMPTE-2035 Stereo Programs Combo 9f
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Stereo Programs Combo 9f
    /// </remarks>
    private static readonly byte[] SMPTE2035StereoProgramsCombo9f = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x09, 0x06, 0x00];
    /// <summary>
    /// SMPTE-2035 Stereo Program Sound 6a
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Stereo Program Sound 6a
    /// </remarks>
    private static readonly byte[] SMPTE2035StereoProgramSound6a = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x06, 0x01, 0x00];
    /// <summary>
    /// SMPTE-2035 Stereo Program Sound 6b
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-2035 Stereo Program Sound 6b
    /// </remarks>
    private static readonly byte[] SMPTE2035StereoProgramSound6b = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x06, 0x02, 0x00];
    /// <summary>
    /// SMPTE-309M Timecode Track Datecode User Bits
    /// </summary>
    /// <remarks>
    /// Identifies a SMPTE 309M Timecode track (user bits define date code)
    /// </remarks>
    private static readonly byte[] SMPTE309MTimecodeTrackDatecodeUserBits = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x01, 0x03, 0x02, 0x01, 0x03, 0x00, 0x00, 0x00];
    /// <summary>
    /// SMPTE-320M 8-Channel ModeA
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-320M 8-Channel ModeA
    /// </remarks>
    private static readonly byte[] SMPTE320M8ChannelModeA = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x09, 0x04, 0x02, 0x02, 0x10, 0x02, 0x01, 0x00, 0x00];
    /// <summary>
    /// SMPTE-320M 8-Channel ModeB
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-320M 8-Channel ModeB
    /// </remarks>
    private static readonly byte[] SMPTE320M8ChannelModeB = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x09, 0x04, 0x02, 0x02, 0x10, 0x02, 0x02, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 338 Audio per ST 337 Coding
    /// </summary>
    /// <remarks>
    /// Identifies Compressed audio types identified by SMPTE ST 338
    /// </remarks>
    private static readonly byte[] SMPTE338MAudioCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x02, 0x02, 0x02, 0x03, 0x02, 0x00, 0x00];
    /// <summary>
    /// SMPTE-382M Default Uncompressed Sound Coding
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-382M Default Uncompressed Sound Coding
    /// </remarks>
    private static readonly byte[] SMPTE382MDefaultUncompressedSoundCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x02, 0x02, 0x01, 0x01, 0x00, 0x00, 0x00];
    /// <summary>
    /// SMPTE-429-2 Channel Configuration 1
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-429-2 Channel Configuration 1
    /// </remarks>
    private static readonly byte[] SMPTE4292ChannelConfiguration1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x03, 0x01, 0x01, 0x00];
    /// <summary>
    /// SMPTE-429-2 Channel Configuration 2
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-429-2 Channel Configuration 2
    /// </remarks>
    private static readonly byte[] SMPTE4292ChannelConfiguration2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x03, 0x01, 0x02, 0x00];
    /// <summary>
    /// SMPTE-429-2 Channel Configuration 3
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-429-2 Channel Configuration 3
    /// </remarks>
    private static readonly byte[] SMPTE4292ChannelConfiguration3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x03, 0x01, 0x03, 0x00];
    /// <summary>
    /// SMPTE-429-2 Channel Configuration 4
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-429-2 Channel Configuration 4
    /// </remarks>
    private static readonly byte[] SMPTE4292ChannelConfiguration4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x03, 0x01, 0x04, 0x00];
    /// <summary>
    /// SMPTE-429-2 Channel Configuration 5
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-429-2 Channel Configuration 5
    /// </remarks>
    private static readonly byte[] SMPTE4292ChannelConfiguration5 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x03, 0x01, 0x05, 0x00];
    /// <summary>
    /// SMPTE-429-2 D-Cinema Application of the Multichannel Audio Framework
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE-429-2 D-Cinema Application of the Multichannel Audio Framework
    /// </remarks>
    private static readonly byte[] SMPTE4292DCinemaApplicationOfTheMultichannelAudioFramework = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x02, 0x02, 0x10, 0x03, 0x02, 0x00, 0x00];
    /// <summary>
    /// SMPTE D-10 30Mbps 525x59.94I
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE D-10 at a bit rate of 30Mbps for 525x59.94I scanning
    /// </remarks>
    private static readonly byte[] SMPTED1030Mbps525x5994I = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x02, 0x01, 0x02, 0x01, 0x06];
    /// <summary>
    /// SMPTE D-10 30Mbps 625x50I
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE D-10 at a bit rate of 30Mbps for 625x50I scanning
    /// </remarks>
    private static readonly byte[] SMPTED1030Mbps625x50I = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x02, 0x01, 0x02, 0x01, 0x05];
    /// <summary>
    /// SMPTE D-10 40Mbps 525x59.94I
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE D-10 at a bit rate of 40Mbps for 525x59.94I scanning
    /// </remarks>
    private static readonly byte[] SMPTED1040Mbps525x5994I = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x02, 0x01, 0x02, 0x01, 0x04];
    /// <summary>
    /// SMPTE D-10 40Mbps 625x50I
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE D-10 at a bit rate of 40Mbps for 625x50I scanning
    /// </remarks>
    private static readonly byte[] SMPTED1040Mbps625x50I = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x02, 0x01, 0x02, 0x01, 0x03];
    /// <summary>
    /// SMPTE D-10 50Mbps 525x59.94I
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE D-10 at a bit rate of 50Mbps for 525x59.94I scanning
    /// </remarks>
    private static readonly byte[] SMPTED1050Mbps525x5994I = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x02, 0x01, 0x02, 0x01, 0x02];
    /// <summary>
    /// SMPTE D-10 50Mbps 625x50I
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE D-10 at a bit rate of 50Mbps for 625x50I scanning
    /// </remarks>
    private static readonly byte[] SMPTED1050Mbps625x50I = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x02, 0x01, 0x02, 0x01, 0x01];
    /// <summary>
    /// SMPTE D-10 MPEG-2 422P-ML
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE Type-D10 MPEG-2 constrained 422P@ML
    /// </remarks>
    private static readonly byte[] SMPTED10MPEG2422PML = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x02, 0x01, 0x02, 0x01, 0x00];
    /// <summary>
    /// SMPTE D-11 1080 23.98PsF
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE compression of a 1080/23.98PsF source
    /// </remarks>
    private static readonly byte[] SMPTED1110802398PsF = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x02, 0x70, 0x01, 0x01, 0x00];
    /// <summary>
    /// SMPTE D-11 1080 24PsF
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE compression of a 1080/24PsF source
    /// </remarks>
    private static readonly byte[] SMPTED11108024PsF = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x02, 0x70, 0x01, 0x02, 0x00];
    /// <summary>
    /// SMPTE D-11 1080 25PsF
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE compression of a 1080/25PsF source
    /// </remarks>
    private static readonly byte[] SMPTED11108025PsF = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x02, 0x70, 0x01, 0x03, 0x00];
    /// <summary>
    /// SMPTE D-11 1080 29.97PsF
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE compression of a 1080/29.97PsF source
    /// </remarks>
    private static readonly byte[] SMPTED1110802997PsF = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x02, 0x70, 0x01, 0x04, 0x00];
    /// <summary>
    /// SMPTE D-11 1080 50I
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE compression of a 1080/50I source
    /// </remarks>
    private static readonly byte[] SMPTED11108050I = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x02, 0x70, 0x01, 0x05, 0x00];
    /// <summary>
    /// SMPTE D-11 1080 59.94I
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE compression of a 1080/59.94I source
    /// </remarks>
    private static readonly byte[] SMPTED1110805994I = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x02, 0x70, 0x01, 0x06, 0x00];
    /// <summary>
    /// SMPTE D-11 Compression
    /// </summary>
    /// <remarks>
    /// Identifies Type D-11 compressed (High Definition)
    /// </remarks>
    private static readonly byte[] SMPTED11Compression = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x02, 0x70, 0x01, 0x00, 0x00];
    /// <summary>
    /// SMPTE LABELS
    /// </summary>
    /// <remarks>
    /// Register of SMPTE Labels
    /// </remarks>
    private static readonly byte[] SMPTELABELS = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-2 Application of the MXF Multichannel Audio Framework
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE ST 2067-2 Application of the MXF Multichannel Audio Framework
    /// </remarks>
    private static readonly byte[] SMPTEST20672ApplicationOfTheMXFMultichannelAudioFramework = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x02, 0x02, 0x10, 0x04, 0x01, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 3.0
    /// </summary>
    /// <remarks>
    /// Consists of Audio Channels L, C, R
    /// </remarks>
    private static readonly byte[] SMPTEST2067830 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x02, 0x20, 0x04, 0x00, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 4.0
    /// </summary>
    /// <remarks>
    /// Consists of Audio Channels L, C, R, S
    /// </remarks>
    private static readonly byte[] SMPTEST2067840 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x02, 0x20, 0x05, 0x00, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 5.0
    /// </summary>
    /// <remarks>
    /// Consists of Audio Channels L, C, R, Ls, Rs
    /// </remarks>
    private static readonly byte[] SMPTEST2067850 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x02, 0x20, 0x06, 0x00, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 5.1EX
    /// </summary>
    /// <remarks>
    /// Consists of Audio Channels L, C, R, Lst, Rst, LFE
    /// </remarks>
    private static readonly byte[] SMPTEST2067851EX = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x02, 0x20, 0x0A, 0x00, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 6.0
    /// </summary>
    /// <remarks>
    /// Consists of Audio Channels L, C, R, Ls, Rs, Cs
    /// </remarks>
    private static readonly byte[] SMPTEST2067860 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x02, 0x20, 0x07, 0x00, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 7.0DS
    /// </summary>
    /// <remarks>
    /// Consists of Audio Channels L, C, R, Lss, Rss, Rls, Rrs
    /// </remarks>
    private static readonly byte[] SMPTEST2067870DS = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x02, 0x20, 0x08, 0x00, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Descriptive Video Service
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE ST 2067-8 2067-8 Descriptive Video Service
    /// </remarks>
    private static readonly byte[] SMPTEST20678DescriptiveVideoService = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x03, 0x20, 0x02, 0x00, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Dialog Centric Mix
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE ST 2067-8 2067-8 Dialog Centric Mix
    /// </remarks>
    private static readonly byte[] SMPTEST20678DialogCentricMix = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x03, 0x20, 0x03, 0x00, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Discrete Numbered Sources
    /// </summary>
    /// <remarks>
    /// Collection of Audio Channels NSCxxx
    /// </remarks>
    private static readonly byte[] SMPTEST20678DiscreteNumberedSources = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x02, 0x20, 0x03, 0x00, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Dual Mono
    /// </summary>
    /// <remarks>
    /// Consists of  Audio Channels M1, M2
    /// </remarks>
    private static readonly byte[] SMPTEST20678DualMono = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x02, 0x20, 0x02, 0x00, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Hearing Accessibility
    /// </summary>
    /// <remarks>
    /// Consists of Audio Channel HI
    /// </remarks>
    private static readonly byte[] SMPTEST20678HearingAccessibility = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x02, 0x20, 0x0B, 0x00, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Left Surround Total
    /// </summary>
    /// <remarks>
    /// Matrix encoded left surround channel of an Lst-Rst pair
    /// </remarks>
    private static readonly byte[] SMPTEST20678LeftSurroundTotal = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x05, 0x00, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Left Total
    /// </summary>
    /// <remarks>
    /// Matrix encoded left channel of an Lt-Rt pair
    /// </remarks>
    private static readonly byte[] SMPTEST20678LeftTotal = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x03, 0x00, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Lt-Rt
    /// </summary>
    /// <remarks>
    /// Consists of Audio Channels Lt, Rt
    /// </remarks>
    private static readonly byte[] SMPTEST20678LtRt = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x02, 0x20, 0x09, 0x00, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Main Program
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE ST 2067-8 2067-8 Main Program
    /// </remarks>
    private static readonly byte[] SMPTEST20678MainProgram = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x03, 0x20, 0x01, 0x00, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Mono One
    /// </summary>
    /// <remarks>
    /// A single channel of monaural audio
    /// </remarks>
    private static readonly byte[] SMPTEST20678MonoOne = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x01, 0x00, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Mono Two
    /// </summary>
    /// <remarks>
    /// A second single channel of monaural audio
    /// </remarks>
    private static readonly byte[] SMPTEST20678MonoTwo = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x02, 0x00, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 001
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 001
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel001 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x01, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 002
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 002
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel002 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x02, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 003
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 003
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel003 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x03, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 004
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 004
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel004 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x04, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 005
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 005
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel005 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x05, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 006
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 006
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel006 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x06, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 007
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 007
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel007 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x07, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 008
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 008
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel008 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x08, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 009
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 009
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel009 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x09, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 010
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 010
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel010 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x10, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 011
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 011
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel011 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x11, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 012
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 012
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel012 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x12, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 013
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 013
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel013 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x13, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 014
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 014
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel014 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x14, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 015
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 015
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel015 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x15, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 016
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 016
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel016 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x16, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 017
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 017
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel017 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x17, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 018
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 018
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel018 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x18, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 019
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 019
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel019 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x19, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 020
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 020
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel020 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x20, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 021
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 021
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel021 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x21, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 022
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 022
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel022 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x22, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 023
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 023
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel023 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x23, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 024
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 024
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel024 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x24, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 025
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 025
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel025 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x25, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 026
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 026
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel026 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x26, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 027
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 027
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel027 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x27, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 028
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 028
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel028 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x28, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 029
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 029
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel029 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x29, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 030
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 030
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel030 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x30, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 031
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 031
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel031 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x31, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 032
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 032
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel032 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x32, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 033
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 033
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel033 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x33, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 034
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 034
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel034 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x34, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 035
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 035
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel035 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x35, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 036
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 036
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel036 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x36, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 037
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 037
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel037 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x37, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 038
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 038
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel038 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x38, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 039
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 039
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel039 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x39, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 040
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 040
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel040 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x40, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 041
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 041
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel041 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x41, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 042
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 042
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel042 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x42, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 043
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 043
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel043 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x43, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 044
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 044
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel044 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x44, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 045
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 045
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel045 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x45, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 046
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 046
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel046 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x46, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 047
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 047
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel047 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x47, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 048
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 048
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel048 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x48, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 049
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 049
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel049 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x49, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 050
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 050
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel050 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x50, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 051
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 051
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel051 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x51, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 052
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 052
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel052 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x52, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 053
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 053
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel053 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x53, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 054
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 054
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel054 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x54, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 055
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 055
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel055 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x55, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 056
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 056
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel056 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x56, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 057
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 057
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel057 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x57, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 058
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 058
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel058 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x58, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 059
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 059
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel059 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x59, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 060
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 060
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel060 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x60, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 061
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 061
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel061 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x61, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 062
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 062
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel062 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x62, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 063
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 063
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel063 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x63, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 064
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 064
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel064 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x64, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 065
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 065
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel065 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x65, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 066
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 066
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel066 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x66, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 067
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 067
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel067 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x67, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 068
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 068
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel068 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x68, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 069
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 069
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel069 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x69, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 070
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 070
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel070 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x70, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 071
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 071
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel071 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x71, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 072
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 072
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel072 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x72, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 073
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 073
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel073 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x73, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 074
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 074
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel074 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x74, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 075
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 075
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel075 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x75, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 076
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 076
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel076 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x76, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 077
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 077
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel077 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x77, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 078
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 078
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel078 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x78, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 079
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 079
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel079 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x79, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 0A
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 0A
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel0A = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x0A, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 0B
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 0B
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel0B = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x0B, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 0C
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 0C
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel0C = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x0C, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 0D
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 0D
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel0D = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x0D, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 0E
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 0E
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel0E = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x0E, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 0F
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 0F
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel0F = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x0F, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 1A
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 1A
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel1A = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x1A, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 1B
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 1B
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel1B = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x1B, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 1C
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 1C
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel1C = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x1C, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 1D
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 1D
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel1D = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x1D, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 1E
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 1E
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel1E = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x1E, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 1F
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 1F
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel1F = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x1F, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 2A
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 2A
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel2A = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x2A, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 2B
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 2B
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel2B = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x2B, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 2C
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 2C
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel2C = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x2C, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 2D
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 2D
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel2D = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x2D, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 2E
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 2E
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel2E = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x2E, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 2F
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 2F
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel2F = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x2F, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 3A
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 3A
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel3A = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x3A, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 3B
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 3B
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel3B = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x3B, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 3C
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 3C
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel3C = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x3C, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 3D
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 3D
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel3D = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x3D, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 3E
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 3E
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel3E = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x3E, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 3F
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 3F
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel3F = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x3F, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 4A
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 4A
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel4A = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x4A, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 4B
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 4B
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel4B = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x4B, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 4C
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 4C
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel4C = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x4C, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 4D
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 4D
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel4D = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x4D, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 4E
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 4E
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel4E = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x4E, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 4F
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 4F
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel4F = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x4F, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 5A
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 5A
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel5A = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x5A, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 5B
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 5B
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel5B = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x5B, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 5C
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 5C
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel5C = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x5C, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 5D
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 5D
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel5D = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x5D, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 5E
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 5E
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel5E = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x5E, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 5F
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 5F
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel5F = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x5F, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 6A
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 6A
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel6A = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x6A, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 6B
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 6B
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel6B = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x6B, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 6C
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 6C
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel6C = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x6C, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 6D
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 6D
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel6D = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x6D, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 6E
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 6E
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel6E = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x6E, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 6F
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 6F
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel6F = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x6F, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 7A
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 7A
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel7A = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x7A, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 7B
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 7B
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel7B = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x7B, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 7C
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 7C
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel7C = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x7C, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 7D
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 7D
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel7D = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x7D, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 7E
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 7E
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel7E = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x7E, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Numbered Source Channel 7F
    /// </summary>
    /// <remarks>
    /// A single audio channel numbered 7F
    /// </remarks>
    private static readonly byte[] SMPTEST20678NumberedSourceChannel7F = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x08, 0x7F, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Right Surround Total
    /// </summary>
    /// <remarks>
    /// Matrix encoded right surround channel of an Lst-Rst pair
    /// </remarks>
    private static readonly byte[] SMPTEST20678RightSurroundTotal = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x06, 0x00, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Right Total
    /// </summary>
    /// <remarks>
    /// Matrix encoded right channel of an Lt-Rt pair
    /// </remarks>
    private static readonly byte[] SMPTEST20678RightTotal = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x04, 0x00, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Standard Stereo
    /// </summary>
    /// <remarks>
    /// Consists of Audio Channels L, R
    /// </remarks>
    private static readonly byte[] SMPTEST20678StandardStereo = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x02, 0x20, 0x01, 0x00, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Surround
    /// </summary>
    /// <remarks>
    /// A single channel that Intended to drive one or more surround loudspeakers
    /// </remarks>
    private static readonly byte[] SMPTEST20678Surround = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x20, 0x07, 0x00, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2067-8 Visual Accessibility
    /// </summary>
    /// <remarks>
    /// Consists of Audio Channel VIN
    /// </remarks>
    private static readonly byte[] SMPTEST20678VisualAccessibility = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x02, 0x20, 0x0C, 0x00, 0x00, 0x00];
    /// <summary>
    /// SMPTE VC-1 Coding AP@L0
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE VC-1 Compression Coding AP@L0
    /// </remarks>
    private static readonly byte[] SMPTEVC1CodingAPL0 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x72, 0x06, 0x00, 0x00];
    /// <summary>
    /// SMPTE VC-1 Coding AP@L1
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE VC-1 Compression Coding AP@L1
    /// </remarks>
    private static readonly byte[] SMPTEVC1CodingAPL1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x72, 0x07, 0x00, 0x00];
    /// <summary>
    /// SMPTE VC-1 Coding AP@L2
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE VC-1 Compression Coding AP@L2
    /// </remarks>
    private static readonly byte[] SMPTEVC1CodingAPL2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x72, 0x08, 0x00, 0x00];
    /// <summary>
    /// SMPTE VC-1 Coding AP@L3
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE VC-1 Compression Coding AP@L3
    /// </remarks>
    private static readonly byte[] SMPTEVC1CodingAPL3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x72, 0x09, 0x00, 0x00];
    /// <summary>
    /// SMPTE VC-1 Coding AP@L4
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE VC-1 Compression Coding AP@L4
    /// </remarks>
    private static readonly byte[] SMPTEVC1CodingAPL4 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x72, 0x0A, 0x00, 0x00];
    /// <summary>
    /// SMPTE VC-1 Coding MP@HL
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE VC-1 Compression Coding MP@HL
    /// </remarks>
    private static readonly byte[] SMPTEVC1CodingMPHL = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x72, 0x05, 0x00, 0x00];
    /// <summary>
    /// SMPTE VC-1 Coding MP@LL
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE VC-1 Compression Coding MP@LL
    /// </remarks>
    private static readonly byte[] SMPTEVC1CodingMPLL = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x72, 0x03, 0x00, 0x00];
    /// <summary>
    /// SMPTE VC-1 Coding MP@ML
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE VC-1 Compression Coding MP@ML
    /// </remarks>
    private static readonly byte[] SMPTEVC1CodingMPML = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x72, 0x04, 0x00, 0x00];
    /// <summary>
    /// SMPTE VC-1 Coding SP@LL
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE VC-1 Compression Coding SP@LL
    /// </remarks>
    private static readonly byte[] SMPTEVC1CodingSPLL = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x72, 0x01, 0x00, 0x00];
    /// <summary>
    /// SMPTE VC-1 Coding SP@ML
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE VC-1 Compression Coding SP@ML
    /// </remarks>
    private static readonly byte[] SMPTEVC1CodingSPML = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x72, 0x02, 0x00, 0x00];
    /// <summary>
    /// SMPTE VC-1 Compression
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE VC-1 Compression
    /// </remarks>
    private static readonly byte[] SMPTEVC1Compression = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x72, 0x00, 0x00, 0x00];
    /// <summary>
    /// SMPTE VC-3 Compression
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE VC-3 Compression
    /// </remarks>
    private static readonly byte[] SMPTEVC3Compression = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x71, 0x00, 0x00, 0x00];
    /// <summary>
    /// SMPTE VC-3 ID 1235
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE VC-3 Compression ID 1235
    /// </remarks>
    private static readonly byte[] SMPTEVC3ID1235 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x71, 0x01, 0x00, 0x00];
    /// <summary>
    /// SMPTE VC-3 ID 1237
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE VC-3 Compression ID 1237
    /// </remarks>
    private static readonly byte[] SMPTEVC3ID1237 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x71, 0x03, 0x00, 0x00];
    /// <summary>
    /// SMPTE VC-3 ID 1238
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE VC-3 Compression ID 1238
    /// </remarks>
    private static readonly byte[] SMPTEVC3ID1238 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x71, 0x04, 0x00, 0x00];
    /// <summary>
    /// SMPTE VC-3 ID 1241
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE VC-3 Compression ID 1241
    /// </remarks>
    private static readonly byte[] SMPTEVC3ID1241 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x71, 0x07, 0x00, 0x00];
    /// <summary>
    /// SMPTE VC-3 ID 1242
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE VC-3 Compression ID 1242
    /// </remarks>
    private static readonly byte[] SMPTEVC3ID1242 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x71, 0x08, 0x00, 0x00];
    /// <summary>
    /// SMPTE VC-3 ID 1243
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE VC-3 Compression ID 1243
    /// </remarks>
    private static readonly byte[] SMPTEVC3ID1243 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x71, 0x09, 0x00, 0x00];
    /// <summary>
    /// SMPTE VC-3 ID 1244
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE VC-3 Compression ID 1244
    /// </remarks>
    private static readonly byte[] SMPTEVC3ID1244 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x71, 0x0A, 0x00, 0x00];
    /// <summary>
    /// SMPTE VC-3 ID 1250
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE VC-3 Compression ID 1250
    /// </remarks>
    private static readonly byte[] SMPTEVC3ID1250 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x71, 0x10, 0x00, 0x00];
    /// <summary>
    /// SMPTE VC-3 ID 1251
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE VC-3 Compression ID 1251
    /// </remarks>
    private static readonly byte[] SMPTEVC3ID1251 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x71, 0x11, 0x00, 0x00];
    /// <summary>
    /// SMPTE VC-3 ID 1252
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE VC-3 Compression ID 1252
    /// </remarks>
    private static readonly byte[] SMPTEVC3ID1252 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x71, 0x12, 0x00, 0x00];
    /// <summary>
    /// SMPTE VC-3 ID 1253
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE VC-3 Compression ID 1253
    /// </remarks>
    private static readonly byte[] SMPTEVC3ID1253 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x02, 0x71, 0x13, 0x00, 0x00];
    /// <summary>
    /// SMPTE VC-3 ID 1256
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE VC-3 Compression ID 1256
    /// </remarks>
    private static readonly byte[] SMPTEVC3ID1256 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x71, 0x16, 0x00, 0x00];
    /// <summary>
    /// SMPTE VC-3 ID 1258
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE VC-3 Compression ID 1258
    /// </remarks>
    private static readonly byte[] SMPTEVC3ID1258 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x71, 0x18, 0x00, 0x00];
    /// <summary>
    /// SMPTE VC-3 ID 1259
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE VC-3 Compression ID 1259
    /// </remarks>
    private static readonly byte[] SMPTEVC3ID1259 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x71, 0x19, 0x00, 0x00];
    /// <summary>
    /// SMPTE VC-3 ID 1260
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE VC-3 Compression ID 1260
    /// </remarks>
    private static readonly byte[] SMPTEVC3ID1260 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x71, 0x1A, 0x00, 0x00];
    /// <summary>
    /// SMPTE VC-3 ID 1270
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE VC-3 Compression ID 1270
    /// </remarks>
    private static readonly byte[] SMPTEVC3ID1270 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x71, 0x24, 0x00, 0x00];
    /// <summary>
    /// SMPTE VC-3 ID 1271
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE VC-3 Compression ID 1271
    /// </remarks>
    private static readonly byte[] SMPTEVC3ID1271 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x71, 0x25, 0x00, 0x00];
    /// <summary>
    /// SMPTE VC-3 ID 1272
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE VC-3 Compression ID 1272
    /// </remarks>
    private static readonly byte[] SMPTEVC3ID1272 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x71, 0x26, 0x00, 0x00];
    /// <summary>
    /// SMPTE VC-3 ID 1273
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE VC-3 Compression ID 1273
    /// </remarks>
    private static readonly byte[] SMPTEVC3ID1273 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x71, 0x27, 0x00, 0x00];
    /// <summary>
    /// SMPTE VC-3 ID 1274
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE VC-3 Compression ID 1274
    /// </remarks>
    private static readonly byte[] SMPTEVC3ID1274 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x71, 0x28, 0x00, 0x00];
    /// <summary>
    /// Snell & Wilcox
    /// </summary>
    /// <remarks>
    /// Metadata registered by Snell & Wilcox for private use
    /// </remarks>
    private static readonly byte[] Snell_and_Wilcox = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x05, 0x0E, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Sony Corporation
    /// </summary>
    /// <remarks>
    /// Metadata registered by Sony Corporation for private use
    /// </remarks>
    private static readonly byte[] SonyCorporation = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x03, 0x0E, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Sound Channel Labeling
    /// </summary>
    /// <remarks>
    /// Identifies Sound Channel Labeling
    /// Namespace: http://www.smpte-ra.org/reg/400/2012
    /// </remarks>
    private static readonly byte[] SoundChannelLabeling_1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x09, 0x04, 0x02, 0x02, 0x10, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Labels for Sound Channel Labeling
    /// </summary>
    /// <remarks>
    /// No definition provided.
    /// Namespace: http://www.smpte-ra.org/reg/400/2012/13/1/amwa/rules
    /// </remarks>
    private static readonly byte[] SoundChannelLabeling_rules = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x02, 0x00, 0x00, 0x00];
    /// <summary>
    /// Sound Channel Labeling SMPTE 2035
    /// </summary>
    /// <remarks>
    /// Identifies SoundChannel  Labeling SMPTE 2035
    /// </remarks>
    private static readonly byte[] SoundChannelLabelingSMPTE2035 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x01, 0x00, 0x00, 0x00];
    /// <summary>
    /// Sound Channel Labeling SMPTE320M
    /// </summary>
    /// <remarks>
    /// Identifies Sound Channel Labeling according to SMPTE320M
    /// </remarks>
    private static readonly byte[] SoundChannelLabelingSMPTE320M = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x09, 0x04, 0x02, 0x02, 0x10, 0x02, 0x00, 0x00, 0x00];
    /// <summary>
    /// Sound Channel Labeling SMPTE 429-2
    /// </summary>
    /// <remarks>
    /// Identifies Sound Channel Labeling according to SMPTE 429-2
    /// </remarks>
    private static readonly byte[] SoundChannelLabelingSMPTE4292 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x03, 0x00, 0x00, 0x00];
    /// <summary>
    /// Sound Channel Labeling SMPTE 429-2 Sets-1
    /// </summary>
    /// <remarks>
    /// Identifies Static Sound Channel Labeling
    /// </remarks>
    private static readonly byte[] SoundChannelLabelingSMPTE4292Sets1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x02, 0x02, 0x10, 0x03, 0x01, 0x00, 0x00];
    /// <summary>
    /// Sound Channel Labeling SMPTE  ST 2067-2
    /// </summary>
    /// <remarks>
    /// Identifies Sound Channel Labeling SMPTE  ST 2067-2
    /// </remarks>
    private static readonly byte[] SoundChannelLabelingSMPTEST20672 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x02, 0x02, 0x10, 0x04, 0x00, 0x00, 0x00];
    /// <summary>
    /// Sound Coding Characteristics
    /// </summary>
    /// <remarks>
    /// Identifies sound coding characteristics
    /// </remarks>
    private static readonly byte[] SoundCodingCharacteristics = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Sound Essence Track
    /// </summary>
    /// <remarks>
    /// Identifies a sound essence track
    /// </remarks>
    private static readonly byte[] SoundEssenceTrack = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x01, 0x03, 0x02, 0x02, 0x02, 0x00, 0x00, 0x00];
    /// <summary>
    /// Soundfield Group
    /// </summary>
    /// <remarks>
    /// SMPTE Label identifiers for Soundfield Groups interpretive data
    /// Namespace: http://www.smpte-ra.org/reg/400/2012
    /// </remarks>
    private static readonly byte[] SoundfieldGroup_1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Soundfield Group
    /// </summary>
    /// <remarks>
    /// SMPTE Label identifiers for Soundfield Groups interpretive data
    /// Namespace: http://www.smpte-ra.org/reg/400/2012/13/1/amwa/rules
    /// </remarks>
    private static readonly byte[] SoundfieldGroup_rules = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x01, 0x02, 0x00, 0x00];
    /// <summary>
    /// Soundfield Groups for SMPTE ST 2067-8
    /// </summary>
    /// <remarks>
    /// SMPTE Label identifiers for SMPTE ST 2067-8 Soundfield Groups
    /// </remarks>
    private static readonly byte[] SoundfieldGroupsForSMPTEST20678 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x02, 0x20, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// SPATIO-TEMPORAL
    /// </summary>
    /// <remarks>
    /// SMPTE Label identifiers for Spatio-Temporal Data
    /// </remarks>
    private static readonly byte[] SPATIOTEMPORAL = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Specialised Compression Schemes
    /// </summary>
    /// <remarks>
    /// Identifies Specialised or Custom Compression Schemes
    /// </remarks>
    private static readonly byte[] SpecialisedCompressionSchemes = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x02, 0x70, 0x00, 0x00, 0x00];
    /// <summary>
    /// Specification Identification
    /// </summary>
    /// <remarks>
    /// No definition provided.
    /// </remarks>
    private static readonly byte[] Specification_Identification = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x05, 0x00, 0x00, 0x00];
    /// <summary>
    /// Specification Identification (Work In Progress)
    /// </summary>
    /// <remarks>
    /// No definition provided.
    /// </remarks>
    private static readonly byte[] Specification_Identification_WIP = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x03, 0x00, 0x00, 0x00];
    /// <summary>
    /// Audio Channels
    /// </summary>
    /// <remarks>
    /// ST377-42 Audio Channels
    /// </remarks>
    private static readonly byte[] ST37742ch = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x30, 0x01, 0x00, 0x00, 0x00];
    /// <summary>
    /// Center Below
    /// </summary>
    /// <remarks>
    /// Intended to drive the Center Below Loudspeaker
    /// </remarks>
    private static readonly byte[] ST37742chCenterBelow = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x30, 0x01, 0x13, 0x00, 0x00];
    /// <summary>
    /// Center Height
    /// </summary>
    /// <remarks>
    /// Intended to drive the Center Height Loudspeaker
    /// </remarks>
    private static readonly byte[] ST37742chCenterHeight = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x30, 0x01, 0x03, 0x00, 0x00];
    /// <summary>
    /// Center Rear
    /// </summary>
    /// <remarks>
    /// Intended to drive the Center Rear Loudspeaker
    /// </remarks>
    private static readonly byte[] ST37742chCenterRear = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x30, 0x01, 0x10, 0x00, 0x00];
    /// <summary>
    /// Center Rear Height
    /// </summary>
    /// <remarks>
    /// Intended to drive the Center Rear Height Loudspeaker
    /// </remarks>
    private static readonly byte[] ST37742chCenterRearHeight = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x30, 0x01, 0x0F, 0x00, 0x00];
    /// <summary>
    /// Left Below
    /// </summary>
    /// <remarks>
    /// Intended to drive the	Left Below Loudspeaker
    /// </remarks>
    private static readonly byte[] ST37742chLeftBelow = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x30, 0x01, 0x11, 0x00, 0x00];
    /// <summary>
    /// Left Height
    /// </summary>
    /// <remarks>
    /// Intended to drive the Left Height Loudspeaker
    /// </remarks>
    private static readonly byte[] ST37742chLeftHeight = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x30, 0x01, 0x01, 0x00, 0x00];
    /// <summary>
    /// Left Rear Surround Height
    /// </summary>
    /// <remarks>
    /// Intended to drive the Left Rear Surround Height Loudspeaker(s)
    /// </remarks>
    private static readonly byte[] ST37742chLeftRearSurroundHeight = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x30, 0x01, 0x08, 0x00, 0x00];
    /// <summary>
    /// Left Side Surround Height
    /// </summary>
    /// <remarks>
    /// Intended to drive the Left Side Surround Height Loudspeaker(s)
    /// </remarks>
    private static readonly byte[] ST37742chLeftSideSurroundHeight = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x30, 0x01, 0x06, 0x00, 0x00];
    /// <summary>
    /// Left Surround Height
    /// </summary>
    /// <remarks>
    /// Intended to drive the Left Surround Height Loudspeaker(s)
    /// </remarks>
    private static readonly byte[] ST37742chLeftSurroundHeight = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x30, 0x01, 0x04, 0x00, 0x00];
    /// <summary>
    /// Audio Channel Left Top Back
    /// </summary>
    /// <remarks>
    /// Intended to drive the Left Top Back loudspeaker
    /// </remarks>
    private static readonly byte[] ST37742chLeftTopBack = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x05, 0x0E, 0x09, 0x01, 0x01, 0x04, 0x07, 0x00, 0x00];
    /// <summary>
    /// Audio Channel Left Top Front
    /// </summary>
    /// <remarks>
    /// Intended to drive the Left Top Front loudspeaker
    /// </remarks>
    private static readonly byte[] ST37742chLeftTopFront = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x05, 0x0E, 0x09, 0x01, 0x01, 0x04, 0x03, 0x00, 0x00];
    /// <summary>
    /// Left Top Surround
    /// </summary>
    /// <remarks>
    /// Intended to drive the Left Top Surround Loudspeaker(s)
    /// </remarks>
    private static readonly byte[] ST37742chLeftTopSurround = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x30, 0x01, 0x0A, 0x00, 0x00];
    /// <summary>
    /// Audio Channel Left Wide
    /// </summary>
    /// <remarks>
    /// Intended to drive the Left Wide loudspeaker
    /// </remarks>
    private static readonly byte[] ST37742chLeftWide = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x05, 0x0E, 0x09, 0x01, 0x01, 0x04, 0x01, 0x00, 0x00];
    /// <summary>
    /// LFE1
    /// </summary>
    /// <remarks>
    /// Intended to drive Left	Front subwoofer
    /// </remarks>
    private static readonly byte[] ST37742chLFE1 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x30, 0x01, 0x0D, 0x00, 0x00];
    /// <summary>
    /// LFE2
    /// </summary>
    /// <remarks>
    /// Intended to drive Right Front subwoofer
    /// </remarks>
    private static readonly byte[] ST37742chLFE2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x30, 0x01, 0x0E, 0x00, 0x00];
    /// <summary>
    /// Right Below
    /// </summary>
    /// <remarks>
    /// Intended to drive the Right Below Loudspeaker
    /// </remarks>
    private static readonly byte[] ST37742chRightBelow = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x30, 0x01, 0x12, 0x00, 0x00];
    /// <summary>
    /// Right Height
    /// </summary>
    /// <remarks>
    /// Intended to drive the Right Height Loudspeaker
    /// </remarks>
    private static readonly byte[] ST37742chRightHeight = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x30, 0x01, 0x02, 0x00, 0x00];
    /// <summary>
    /// Right Rear Surround Height
    /// </summary>
    /// <remarks>
    /// Intended to drive the Right Rear Surround Height Loudspeaker(s)
    /// </remarks>
    private static readonly byte[] ST37742chRightRearSurroundHeight = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x30, 0x01, 0x09, 0x00, 0x00];
    /// <summary>
    /// Right Side Surround Height
    /// </summary>
    /// <remarks>
    /// Intended to drive the Right Side Surround Height Loudspeaker(s).
    /// </remarks>
    private static readonly byte[] ST37742chRightSideSurroundHeight = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x30, 0x01, 0x07, 0x00, 0x00];
    /// <summary>
    /// Right Surround Height
    /// </summary>
    /// <remarks>
    /// Intended to drive the Right Surround Height Loudspeaker(s).
    /// </remarks>
    private static readonly byte[] ST37742chRightSurroundHeight = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x30, 0x01, 0x05, 0x00, 0x00];
    /// <summary>
    /// Audio Channel Right Top Back
    /// </summary>
    /// <remarks>
    /// Intended to drive the Right Top Back loudspeaker
    /// </remarks>
    private static readonly byte[] ST37742chRightTopBack = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x05, 0x0E, 0x09, 0x01, 0x01, 0x04, 0x08, 0x00, 0x00];
    /// <summary>
    /// Audio Channel Right Top Front
    /// </summary>
    /// <remarks>
    /// Intended to drive the Right Top Front loudspeaker
    /// </remarks>
    private static readonly byte[] ST37742chRightTopFront = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x05, 0x0E, 0x09, 0x01, 0x01, 0x04, 0x04, 0x00, 0x00];
    /// <summary>
    /// Right Top Surround
    /// </summary>
    /// <remarks>
    /// Intended to drive the Right Top Surround Loudspeaker(s)
    /// </remarks>
    private static readonly byte[] ST37742chRightTopSurround = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x30, 0x01, 0x0B, 0x00, 0x00];
    /// <summary>
    /// Audio Channel Right Wide
    /// </summary>
    /// <remarks>
    /// Intended to drive the Right Wide loudspeaker
    /// </remarks>
    private static readonly byte[] ST37742chRightWide = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x05, 0x0E, 0x09, 0x01, 0x01, 0x04, 0x02, 0x00, 0x00];
    /// <summary>
    /// Audio Channel Top Side Left
    /// </summary>
    /// <remarks>
    /// Intended to drive the Top Side Left loudspeaker
    /// </remarks>
    private static readonly byte[] ST37742chTopSideLeft = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x05, 0x0E, 0x09, 0x01, 0x01, 0x04, 0x05, 0x00, 0x00];
    /// <summary>
    /// Audio Channel Top Side Right
    /// </summary>
    /// <remarks>
    /// Intended to drive the Top Side Right loudspeaker
    /// </remarks>
    private static readonly byte[] ST37742chTopSideRight = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x05, 0x0E, 0x09, 0x01, 0x01, 0x04, 0x06, 0x00, 0x00];
    /// <summary>
    /// Top Surround
    /// </summary>
    /// <remarks>
    /// Intended to drive the Top Surround Loudspeaker(s)
    /// </remarks>
    private static readonly byte[] ST37742chTopSurround = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x30, 0x01, 0x0C, 0x00, 0x00];
    /// <summary>
    /// ST377-42 Group of Soundfield Groups
    /// </summary>
    /// <remarks>
    /// ST377-42 Group of Soundfield Groups
    /// </remarks>
    private static readonly byte[] ST37742gsg = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x03, 0x30, 0x01, 0x00, 0x00, 0x00];
    /// <summary>
    /// DME
    /// </summary>
    /// <remarks>
    /// Dialog, Music, and Effects. A Group of Soundfield Groups containing an original language DX
    /// </remarks>
    private static readonly byte[] ST37742gsgDME = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x03, 0x30, 0x01, 0x02, 0x00, 0x00];
    /// <summary>
    /// Music and Effects with Optional
    /// </summary>
    /// <remarks>
    /// A Group of Soundfield Groups containing a ME Soundfield Group and one or more OP Soundfield Groups
    /// </remarks>
    private static readonly byte[] ST37742gsgMusicAndEffectsWithOptional = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x03, 0x30, 0x01, 0x01, 0x00, 0x00];
    /// <summary>
    /// NDME
    /// </summary>
    /// <remarks>
    /// Narration, Dialog, Music, and Effects. A Group of Soundfield Groups containing program narration, an original language DX Soundfield Group, a MX Soundfield Group and a FX Soundfield Group
    /// </remarks>
    private static readonly byte[] ST37742gsgNDME = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x03, 0x30, 0x01, 0x03, 0x00, 0x00];
    /// <summary>
    /// ST377-42 Soundfield Groups
    /// </summary>
    /// <remarks>
    /// ST377-42 Soundfield Groups
    /// </remarks>
    private static readonly byte[] ST37742sg = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x02, 0x30, 0x01, 0x00, 0x00, 0x00];
    /// <summary>
    /// 10.1 Height
    /// </summary>
    /// <remarks>
    /// L, C, R, Lss, Rss, Lrs, Rrs, LFE, Lts, Rts, Ts
    /// </remarks>
    private static readonly byte[] ST37742sg101Height = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x02, 0x30, 0x01, 0x05, 0x00, 0x00];
    /// <summary>
    /// 11.1 Height
    /// </summary>
    /// <remarks>
    /// L, C, R, Ls, Rs, LFE, Lh, Ch, Rh, Lsh, Rsh, Ts
    /// </remarks>
    private static readonly byte[] ST37742sg111Height = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x02, 0x30, 0x01, 0x06, 0x00, 0x00];
    /// <summary>
    /// 12.0 Center Height
    /// </summary>
    /// <remarks>
    /// L, C, R, Lss, Rss, Lrs, Rrs, Ltfs, Rtfs, Ltrs, Rtrs,	Ch
    /// </remarks>
    private static readonly byte[] ST37742sg120CenterHeight = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x02, 0x30, 0x01, 0x09, 0x00, 0x00];
    /// <summary>
    /// 12.1	Center Height
    /// </summary>
    /// <remarks>
    /// L, C, R, Lss, Rss, Lrs, Rrs, LFE, Ltfs, Rtfs, Ltrs, Rtrs, Ch
    /// </remarks>
    private static readonly byte[] ST37742sg121CenterHeight = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x02, 0x30, 0x01, 0x0A, 0x00, 0x00];
    /// <summary>
    /// 13.1 Height
    /// </summary>
    /// <remarks>
    /// L, C, R, Lss, Rss, Lrs, Rrs, LFE, Lh, Ch, Rh, Lsh, Rsh, Ts
    /// </remarks>
    private static readonly byte[] ST37742sg131Height = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x02, 0x30, 0x01, 0x07, 0x00, 0x00];
    /// <summary>
    /// 15.1 Height
    /// </summary>
    /// <remarks>
    /// L, C, R, Lss, Rss, Lrs, Rrs, LFE, Lh, Ch, Rh, Lssh, Rssh, Lrsh, Rrsh, Ts
    /// </remarks>
    private static readonly byte[] ST37742sg151Height = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x02, 0x30, 0x01, 0x08, 0x00, 0x00];
    /// <summary>
    /// 22.2 UHDTV
    /// </summary>
    /// <remarks>
    /// L, R, C, LFE1, LFE2, Lss, Rss, Lrs, Rrs, Cr, Lc, Rc, Lh, Rh, Ch, Lssh, Rssh, Crh, Lsh, Rsh, Ts, Lb, Rb, Cb
    /// </remarks>
    private static readonly byte[] ST37742sg222UHDTV = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x02, 0x30, 0x01, 0x0D, 0x00, 0x00];
    /// <summary>
    /// Soundfield Group 5.1.4
    /// </summary>
    /// <remarks>
    /// L,C,R,Ls,Rs,LFE,Ltfs,Rtfs,Ltrs,Rtrs
    /// </remarks>
    private static readonly byte[] ST37742sg514 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x05, 0x0E, 0x09, 0x01, 0x01, 0x05, 0x02, 0x00, 0x00];
    /// <summary>
    /// 6.0 Center Height
    /// </summary>
    /// <remarks>
    /// L, C, R, Ls, Rs, Ch
    /// </remarks>
    private static readonly byte[] ST37742sg60CenterHeight = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x02, 0x30, 0x01, 0x0B, 0x00, 0x00];
    /// <summary>
    /// 6.0 Height
    /// </summary>
    /// <remarks>
    /// L, R, Ls, Rs, Lh, Rh
    /// </remarks>
    private static readonly byte[] ST37742sg60Height = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x02, 0x30, 0x01, 0x01, 0x00, 0x00];
    /// <summary>
    /// 6.1 Center Height
    /// </summary>
    /// <remarks>
    /// L, C, R, LFE, Ls, Rs, Ch
    /// </remarks>
    private static readonly byte[] ST37742sg61CenterHeight = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x02, 0x30, 0x01, 0x0C, 0x00, 0x00];
    /// <summary>
    /// Soundfield Group 7.1.4
    /// </summary>
    /// <remarks>
    /// L,C,R,Lss,Rss,Lrs,Rrs,LFE,Ltfs,Rtfs,Ltrs,Rtrs
    /// </remarks>
    private static readonly byte[] ST37742sg714 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x05, 0x0E, 0x09, 0x01, 0x01, 0x05, 0x04, 0x00, 0x00];
    /// <summary>
    /// 8.0 Height
    /// </summary>
    /// <remarks>
    /// L, R, Ls, Rs, Lh, Rh, Lsh, Rsh
    /// </remarks>
    private static readonly byte[] ST37742sg80Height = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x02, 0x30, 0x01, 0x02, 0x00, 0x00];
    /// <summary>
    /// Soundfield Group 9.1.4
    /// </summary>
    /// <remarks>
    /// L,C,R,Lw,Rw,Lss,Rss,Lrs,Rrs,LFE,Ltfs,Rtfs,Ltrs,Rtrs
    /// </remarks>
    private static readonly byte[] ST37742sg914 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x05, 0x0E, 0x09, 0x01, 0x01, 0x05, 0x06, 0x00, 0x00];
    /// <summary>
    /// Soundfield Group 9.1.6
    /// </summary>
    /// <remarks>
    /// L,C,R,Lw,Rw,Lss,Rss,Lrs,Rrs,LFE,Ltfs,Rtfs,Ltms,Rtms,Ltrs,Rtrs
    /// </remarks>
    private static readonly byte[] ST37742sg916 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x05, 0x0E, 0x09, 0x01, 0x01, 0x05, 0x07, 0x00, 0x00];
    /// <summary>
    /// 9.1 Height
    /// </summary>
    /// <remarks>
    /// L, C, R, Ls, Rs, LFE, Lh, Rh, Lsh, Rsh
    /// </remarks>
    private static readonly byte[] ST37742sg91Height = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x02, 0x30, 0x01, 0x04, 0x00, 0x00];
    /// <summary>
    /// 9.1 Overhead
    /// </summary>
    /// <remarks>
    /// L, C, R, Lss, Rss, Lrs, Rrs, LFE, Lts, Rts
    /// </remarks>
    private static readonly byte[] ST37742sg91Overhead = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x02, 0x30, 0x01, 0x03, 0x00, 0x00];
    /// <summary>
    /// Static Metadata
    /// </summary>
    /// <remarks>
    /// Identifies static metadata parameters
    /// </remarks>
    private static readonly byte[] StaticMetadata = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x04, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Sync Payload
    /// </summary>
    /// <remarks>
    /// Sync Payload
    /// </remarks>
    private static readonly byte[] SyncPayload = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x04, 0x02, 0x02, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Theatrical Viewing Environment
    /// </summary>
    /// <remarks>
    /// Theatrical Viewing Environment as defined in SMPTE RP 431-2
    /// </remarks>
    private static readonly byte[] TheatricalViewingEnvironment = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x10, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00];
    /// <summary>
    /// 3ality Technica
    /// </summary>
    /// <remarks>
    /// Metadata registered by 3ality Technica for private use
    /// </remarks>
    private static readonly byte[] ThreealityTechnica = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0C, 0x0E, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// TIFF/EP Compressed CFA
    /// </summary>
    /// <remarks>
    /// Identifier for the TIFF/EP Compressed CFA format
    /// </remarks>
    private static readonly byte[] TIFFEPCompressedCFA = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x01, 0x02, 0x02, 0x03, 0x02, 0x01, 0x03];
    /// <summary>
    /// TIFF/EP Compressed LinearRaw
    /// </summary>
    /// <remarks>
    /// Identifier for the TIFF/EP Compressed LinearRaw format
    /// </remarks>
    private static readonly byte[] TIFFEPCompressedLinearRaw = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x01, 0x02, 0x02, 0x03, 0x02, 0x01, 0x04];
    /// <summary>
    /// TIFF/EP Picture Coding Scheme
    /// </summary>
    /// <remarks>
    /// Identifier for the TIFF/EP Picture Coding Scheme
    /// </remarks>
    private static readonly byte[] TIFFEPPictureCodingScheme = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x01, 0x02, 0x02, 0x03, 0x02, 0x00, 0x00];
    /// <summary>
    /// TIFF/EP Profile 2 Picture Coding Scheme
    /// </summary>
    /// <remarks>
    /// Identifier for the TIFF/EP Profile 2 Picture Coding Scheme
    /// </remarks>
    private static readonly byte[] TIFFEPProfile2PictureCodingScheme = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x01, 0x02, 0x02, 0x03, 0x02, 0x01, 0x00];
    /// <summary>
    /// TIFF/EP Uncompressed CFA
    /// </summary>
    /// <remarks>
    /// Identifier for the TIFF/EP Uncompressed CFA format
    /// </remarks>
    private static readonly byte[] TIFFEPUncompressedCFA = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x01, 0x02, 0x02, 0x03, 0x02, 0x01, 0x01];
    /// <summary>
    /// TIFF/EP Uncompressed LinearRaw
    /// </summary>
    /// <remarks>
    /// Identifier for the TIFF/EP Uncompressed LinearRaw format
    /// </remarks>
    private static readonly byte[] TIFFEPUncompressedLinearRaw = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0B, 0x04, 0x01, 0x02, 0x02, 0x03, 0x02, 0x01, 0x02];
    /// <summary>
    /// Track Identifiers
    /// </summary>
    /// <remarks>
    /// SMPTE Label identifiers for Track Identifiers
    /// </remarks>
    private static readonly byte[] TrackIdentifiers = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x01, 0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Transfer Characteristic
    /// </summary>
    /// <remarks>
    /// Identifies transfer characteristics
    /// </remarks>
    private static readonly byte[] TransferCharacteristic = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00];
    /// <summary>
    /// SMPTE 274/296M Gamma
    /// </summary>
    /// <remarks>
    /// Identifies gamma according to SMPTE 274M and 296M (deprecated)
    /// </remarks>
    private static readonly byte[] TransferCharacteristic_274M_296M = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x01, 0x01, 0x01, 0x04, 0x00, 0x00];
    /// <summary>
    /// Cinema Mezzanine DCDM Transfer Characteristic
    /// </summary>
    /// <remarks>
    /// Identifies the COLOR.APP4.2 transfer characteristic specified in SMPTE ST 2067-40
    /// </remarks>
    private static readonly byte[] TransferCharacteristic_CinemaMezzanineDCDM = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x01, 0x01, 0x01, 0x13, 0x00, 0x00];
    /// <summary>
    /// Cinema Mezzanine Linear Transfer Characteristic
    /// </summary>
    /// <remarks>
    /// Identifies the COLOR.APP4.1 transfer characteristic specified in SMPTE ST 2067-40
    /// </remarks>
    private static readonly byte[] TransferCharacteristic_CinemaMezzanineLinear = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x01, 0x01, 0x01, 0x12, 0x00, 0x00];
    /// <summary>
    /// Gamma 2.6 Transfer Characteristic
    /// </summary>
    /// <remarks>
    /// Opto electric transfer function using a power function with an exponent of 1/2.6 and a scaling factor of 1.0
    /// </remarks>
    private static readonly byte[] TransferCharacteristic_Gamma_2_6 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x01, 0x01, 0x01, 0x0C, 0x00, 0x00];
    /// <summary>
    /// Hybrid Log-Gamma OETF Transfer Characteristic
    /// </summary>
    /// <remarks>
    /// Identifies the Hybrid Log-Gamma reference non-linear transfer function (opto-eletronic transfer function, OETF) defined in ITU-R BT.2100
    /// </remarks>
    private static readonly byte[] TransferCharacteristic_HLG_OETF = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x01, 0x01, 0x01, 0x0B, 0x00, 0x00];
    /// <summary>
    /// IEC 61966-2-4 xvYCC Transfer Characteristic
    /// </summary>
    /// <remarks>
    /// Identifies IEC 61966-2-4 xvYCC transfer characteristic
    /// </remarks>
    private static readonly byte[] TransferCharacteristic_IEC6196624_xvYCC = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x01, 0x01, 0x01, 0x08, 0x00, 0x00];
    /// <summary>
    /// ITU-R BT.1361 Transfer Characteristic
    /// </summary>
    /// <remarks>
    /// Identifies ITU-R BT.1361 transfer characterisitic
    /// </remarks>
    private static readonly byte[] TransferCharacteristic_ITU1361 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x06, 0x04, 0x01, 0x01, 0x01, 0x01, 0x05, 0x00, 0x00];
    /// <summary>
    /// ITU-R BT.2020 Transfer Characteristic
    /// </summary>
    /// <remarks>
    /// Identifies ITU-R BT.2020 transfer characteristic
    /// </remarks>
    private static readonly byte[] TransferCharacteristic_ITU2020 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0E, 0x04, 0x01, 0x01, 0x01, 0x01, 0x09, 0x00, 0x00];
    /// <summary>
    /// ITU-R BT.470 Transfer Characteristic
    /// </summary>
    /// <remarks>
    /// Identifies ITU-R BT.470 PAL transfer characteristic (note: used in B, D, G, H, I, M, N/PAL and B, D, G, H, K, K1, L/SECAM systems)
    /// </remarks>
    private static readonly byte[] TransferCharacteristic_ITU470_PAL = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00];
    /// <summary>
    /// ITU-R BT.709 Transfer Characteristic
    /// </summary>
    /// <remarks>
    /// Identifies ITU-R BT.709 transfer characteristic (also used in SMPTE 170M, 274M and 296M)
    /// </remarks>
    private static readonly byte[] TransferCharacteristic_ITU709 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x01, 0x01, 0x01, 0x02, 0x00, 0x00];
    /// <summary>
    /// Linear Transfer Characteristic
    /// </summary>
    /// <remarks>
    /// Identifies a linear transfer characteristic
    /// </remarks>
    private static readonly byte[] TransferCharacteristic_linear = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x06, 0x04, 0x01, 0x01, 0x01, 0x01, 0x06, 0x00, 0x00];
    /// <summary>
    /// SMPTE-DC28 DCDM Transfer Characteristic
    /// </summary>
    /// <remarks>
    /// Identifies the SMPTE DC28 DCDM transfer characteristic
    /// </remarks>
    private static readonly byte[] TransferCharacteristic_SMPTE_DCDM = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x08, 0x04, 0x01, 0x01, 0x01, 0x01, 0x07, 0x00, 0x00];
    /// <summary>
    /// SMPTE 240M Transfer Characteristic
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE 240M transfer characteristic (note: legacy use only)
    /// </remarks>
    private static readonly byte[] TransferCharacteristic_SMPTE240M = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x01, 0x01, 0x01, 0x03, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2084 Transfer Characteristic
    /// </summary>
    /// <remarks>
    /// Identifies SMPTE ST 2084 transfer characteristic
    /// </remarks>
    private static readonly byte[] TransferCharacteristic_SMPTEST2084 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x01, 0x01, 0x01, 0x0A, 0x00, 0x00];
    /// <summary>
    /// sRGB Transfer Characteristic
    /// </summary>
    /// <remarks>
    /// Opto electric transfer function using a power function as defined in IEC 61966-2-1
    /// </remarks>
    private static readonly byte[] TransferCharacteristic_sRGB = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x01, 0x01, 0x01, 0x0D, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2115 Camera Log C2 Transfer Characteristic
    /// </summary>
    /// <remarks>
    /// Identifies the SMPTE ST 2115 Camera Log C2 transfer characteristic
    /// </remarks>
    private static readonly byte[] TransferCharacteristic_ST2115_CameraLogC2 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x01, 0x01, 0x01, 0x10, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2115 Camera Log C3 Transfer Characteristic
    /// </summary>
    /// <remarks>
    /// Identifies the SMPTE ST 2115 Camera Log C3 transfer characteristic
    /// </remarks>
    private static readonly byte[] TransferCharacteristic_ST2115_CameraLogC3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x01, 0x01, 0x01, 0x11, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2115 Camera Log S3 Transfer Characteristic
    /// </summary>
    /// <remarks>
    /// Identifies the SMPTE ST 2115 Camera Log S3 transfer characteristic
    /// </remarks>
    private static readonly byte[] TransferCharacteristic_ST2115_CameraLogS3 = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x01, 0x01, 0x01, 0x0E, 0x00, 0x00];
    /// <summary>
    /// SMPTE ST 2115 Camera Log V Transfer Characteristic
    /// </summary>
    /// <remarks>
    /// Identifies the SMPTE ST 2115 Camera Log V transfer characteristic
    /// </remarks>
    private static readonly byte[] TransferCharacteristic_ST2115_CameraLogV = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x01, 0x01, 0x01, 0x0F, 0x00, 0x00];
    /// <summary>
    /// Turner Broadcasting System, Inc.
    /// </summary>
    /// <remarks>
    /// Metadata registered by Turner Broadcasting System, Inc. for private use
    /// </remarks>
    private static readonly byte[] TurnerBroadcastingSystemInc = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x0E, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Uncompressed Picture Coding
    /// </summary>
    /// <remarks>
    /// Identifies Uncompressed Picture Coding
    /// </remarks>
    private static readonly byte[] UncompressedPictureCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Uncompressed Picture Coding Interleaved 422 CbYCrY 10-bit
    /// </summary>
    /// <remarks>
    /// Identifies Uncompressed Picture Coding Interleaved 422 CbYCrY 10-bit
    /// </remarks>
    private static readonly byte[] UncompressedPictureCodingInterleaved422CbYCrY10Bit = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x01, 0x01, 0x02, 0x02, 0x01];
    /// <summary>
    /// Uncompressed Picture Coding Interleaved 422 CbYCrY 12-bit
    /// </summary>
    /// <remarks>
    /// Identifies Uncompressed Picture Coding Interleaved 422 CbYCrY 12-bit
    /// </remarks>
    private static readonly byte[] UncompressedPictureCodingInterleaved422CbYCrY12Bit = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x01, 0x01, 0x02, 0x03, 0x01];
    /// <summary>
    /// Uncompressed Picture Coding Interleaved 422 CbYCrY 16-bit
    /// </summary>
    /// <remarks>
    /// Identifies Uncompressed Picture Coding Interleaved 422 CbYCrY 16-bit
    /// </remarks>
    private static readonly byte[] UncompressedPictureCodingInterleaved422CbYCrY16Bit = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x01, 0x01, 0x02, 0x04, 0x01];
    /// <summary>
    /// Uncompressed Picture Coding Interleaved 422 CbYCrY 8-bit
    /// </summary>
    /// <remarks>
    /// Identifies Uncompressed Picture Coding Interleaved 422 CbYCrY 8-bit
    /// </remarks>
    private static readonly byte[] UncompressedPictureCodingInterleaved422CbYCrY8Bit = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x01, 0x01, 0x02, 0x01, 0x01];
    /// <summary>
    /// Uncompressed Picture Coding Interleaved 422 YCbYCr 8-bit
    /// </summary>
    /// <remarks>
    /// Identifies Uncompressed Picture Coding Interleaved 422 YCbYCr 8-bit
    /// </remarks>
    private static readonly byte[] UncompressedPictureCodingInterleaved422YCbYCr8Bit = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x01, 0x01, 0x02, 0x01, 0x02];
    /// <summary>
    /// Uncompressed Picture Coding Interleaved 444 CbYCr 8-bit
    /// </summary>
    /// <remarks>
    /// Identifies Uncompressed Picture Coding Interleaved 444 CbYCr 8-bit
    /// </remarks>
    private static readonly byte[] UncompressedPictureCodingInterleaved444CbYCr8Bit = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x01, 0x01, 0x01, 0x01, 0x01];
    /// <summary>
    /// Uncompressed Picture Coding Planar 420 YCbCr 8-bit
    /// </summary>
    /// <remarks>
    /// Identifies Uncompressed Picture Coding Planar 420 YCbCr 8-bit
    /// </remarks>
    private static readonly byte[] UncompressedPictureCodingPlanar420YCbCr8Bit = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x01, 0x01, 0x03, 0x01, 0x02];
    /// <summary>
    /// Uncompressed Picture Coding Planar 422 CbYCrY 10-bit
    /// </summary>
    /// <remarks>
    /// Identifies Uncompressed Picture Coding Planar 422 CbYCrY 10-bit
    /// </remarks>
    private static readonly byte[] UncompressedPictureCodingPlanar422CbYCrY10Bit = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x01, 0x01, 0x02, 0x02, 0x02];
    /// <summary>
    /// Uncompressed Picture Coding Planar 422 YCbCr 8-bit
    /// </summary>
    /// <remarks>
    /// Identifies Uncompressed Picture Coding Planar 422 YCbCr 8-bit
    /// </remarks>
    private static readonly byte[] UncompressedPictureCodingPlanar422YCbCr8Bit = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x04, 0x01, 0x02, 0x01, 0x01, 0x02, 0x01, 0x03];
    /// <summary>
    /// Uncompressed Sound Coding
    /// </summary>
    /// <remarks>
    /// Identifies uncompressed sound coding characteristics
    /// </remarks>
    private static readonly byte[] UncompressedSoundCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x02, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// Undefined Sound Coding
    /// </summary>
    /// <remarks>
    /// Identifies uncompressed sound with no defined source coding standard
    /// </remarks>
    private static readonly byte[] UndefinedSoundCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x02, 0x02, 0x01, 0x7F, 0x00, 0x00, 0x00];
    /// <summary>
    /// Undefined Uncompressed Picture Coding
    /// </summary>
    /// <remarks>
    /// Identifies uncompressed pictures with no defined source coding standard
    /// </remarks>
    private static readonly byte[] UndefinedUncompressedPictureCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x04, 0x01, 0x02, 0x01, 0x7F, 0x00, 0x00, 0x00];
    /// <summary>
    /// Unknown File Format
    /// </summary>
    /// <remarks>
    /// Identifies Unknown File Format
    /// </remarks>
    private static readonly byte[] UnknownFileFormat = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0A, 0x01, 0x01, 0x02, 0x01, 0x01, 0x00, 0x00, 0x00];
    /// <summary>
    /// Unused Audio
    /// </summary>
    /// <remarks>
    /// Identifies audio that is not used. The audio could be present for backward compatibility with devices and systems that require a set number of channels, beyond what is actually required to carry the content.
    /// </remarks>
    private static readonly byte[] UnusedAudio = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x08, 0x01, 0x01, 0x03, 0x05, 0x00];
    /// <summary>
    /// Usage AdjustedClip
    /// </summary>
    /// <remarks>
    /// Identifier for Usage AdjustedClip
    /// </remarks>
    private static readonly byte[] Usage_AdjustedClip = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x01, 0x02, 0x01, 0x01, 0x06, 0x00];
    /// <summary>
    /// Usage LowerLevel
    /// </summary>
    /// <remarks>
    /// Identifier for Usage LowerLevel
    /// </remarks>
    private static readonly byte[] Usage_LowerLevel = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x01, 0x02, 0x01, 0x01, 0x08, 0x00];
    /// <summary>
    /// Usage SubClip
    /// </summary>
    /// <remarks>
    /// Identifier for Usage SubClip
    /// </remarks>
    private static readonly byte[] Usage_SubClip = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x01, 0x02, 0x01, 0x01, 0x05, 0x00];
    /// <summary>
    /// Usage Template
    /// </summary>
    /// <remarks>
    /// Identifier for Usage Template
    /// </remarks>
    private static readonly byte[] Usage_Template = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x01, 0x02, 0x01, 0x01, 0x09, 0x00];
    /// <summary>
    /// Usage TopLevel
    /// </summary>
    /// <remarks>
    /// Identifier for Usage TopLevel
    /// </remarks>
    private static readonly byte[] Usage_TopLevel = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x01, 0x0D, 0x01, 0x01, 0x02, 0x01, 0x01, 0x07, 0x00];
    /// <summary>
    /// UTF-8 Text Data Essence Coding
    /// </summary>
    /// <remarks>
    /// Identifies UTF-8 Text Data Essence Coding
    /// </remarks>
    private static readonly byte[] UTF8TextDataEssenceCoding = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x05, 0x0E, 0x09, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00];
    /// <summary>
    /// VC-2 Picture Coding Scheme
    /// </summary>
    /// <remarks>
    /// Identifies the VC-2 Picture Coding Scheme
    /// </remarks>
    private static readonly byte[] VC2PictureCodingScheme = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x03, 0x00, 0x00];
    /// <summary>
    /// VC-2 Stream
    /// </summary>
    /// <remarks>
    /// Identifies a bitstream as a VC-2 Stream (as defined in SMPTE ST 2042-1)
    /// </remarks>
    private static readonly byte[] VC2Stream = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x03, 0x01, 0x00];
    /// <summary>
    /// VC-5 Part 3 Bayer Picture
    /// </summary>
    /// <remarks>
    /// Picture essence coding label for a VC-5 Part 3 bitstream with Bayer image format
    /// </remarks>
    private static readonly byte[] VC5Part3BayerPicture = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x05, 0x03, 0x03];
    /// <summary>
    /// VC-5 Part 3 Picture Coding Scheme
    /// </summary>
    /// <remarks>
    /// Picture essence coding label for a VC-5 Part 3 bitstream
    /// </remarks>
    private static readonly byte[] VC5Part3PictureCodingScheme = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x05, 0x03, 0x00];
    /// <summary>
    /// VC-5 Part 3 RGB(A) Picture
    /// </summary>
    /// <remarks>
    /// Picture essence coding label for a VC-5 Part 3 bitstream with image format RGB(A)
    /// </remarks>
    private static readonly byte[] VC5Part3RGBAPicture = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x05, 0x03, 0x01];
    /// <summary>
    /// VC-5 Part 3 YCC(A) Picture
    /// </summary>
    /// <remarks>
    /// Picture essence coding label for a VC-5 Part 3 bitstream with image format YCC(A)
    /// </remarks>
    private static readonly byte[] VC5Part3YCCAPicture = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x05, 0x03, 0x02];
    /// <summary>
    /// VC-5 Part 4 Picture Coding Scheme
    /// </summary>
    /// <remarks>
    /// Picture Essence Coding Label for a VC-5 Part 4 bitstream
    /// </remarks>
    private static readonly byte[] VC5Part4PictureCodingScheme = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x05, 0x04, 0x00];
    /// <summary>
    /// VC-5 Part 4 YCC(A) Picture
    /// </summary>
    /// <remarks>
    /// Picture essence coding label for a VC-5 Part 4 bitstream with subsampled color difference components
    /// </remarks>
    private static readonly byte[] VC5Part4YCCAPicture = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x05, 0x04, 0x02];
    /// <summary>
    /// VC-5 Picture Coding Scheme
    /// </summary>
    /// <remarks>
    /// Picture essence coding label for a VC-5 bitstream
    /// </remarks>
    private static readonly byte[] VC5PictureCodingScheme = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x01, 0x02, 0x02, 0x03, 0x05, 0x00, 0x00];
    /// <summary>
    /// Viewing Environment
    /// </summary>
    /// <remarks>
    /// Viewing Environment Labels
    /// </remarks>
    private static readonly byte[] ViewingEnvironment = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x04, 0x10, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00];
    /// <summary>
    /// Visually Impaired Narrative Audio Channel
    /// </summary>
    /// <remarks>
    /// A dedicated narration channel describing the main picture events for the visually impaired.
    /// </remarks>
    private static readonly byte[] VisuallyImpairedNarrativeAudioChannel = [0x06, 0x0E, 0x2B, 0x34, 0x04, 0x01, 0x01, 0x0D, 0x03, 0x02, 0x01, 0x0F, 0x00, 0x00, 0x00, 0x00];
}

